// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: notify/enum.proto

package notify

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InternalEvent int32

const (
	InternalEvent_I_NONE                    InternalEvent = 0
	InternalEvent_BeforeAddCommentSendEvent InternalEvent = 1
	InternalEvent_WsConnected               InternalEvent = 2
)

// Enum value maps for InternalEvent.
var (
	InternalEvent_name = map[int32]string{
		0: "I_NONE",
		1: "BeforeAddCommentSendEvent",
		2: "WsConnected",
	}
	InternalEvent_value = map[string]int32{
		"I_NONE":                    0,
		"BeforeAddCommentSendEvent": 1,
		"WsConnected":               2,
	}
)

func (x InternalEvent) Enum() *InternalEvent {
	p := new(InternalEvent)
	*p = x
	return p
}

func (x InternalEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InternalEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_notify_enum_proto_enumTypes[0].Descriptor()
}

func (InternalEvent) Type() protoreflect.EnumType {
	return &file_notify_enum_proto_enumTypes[0]
}

func (x InternalEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InternalEvent.Descriptor instead.
func (InternalEvent) EnumDescriptor() ([]byte, []int) {
	return file_notify_enum_proto_rawDescGZIP(), []int{0}
}

type MsgType int32

const (
	MsgType_mt_none        MsgType = 0
	MsgType_mt_Notify      MsgType = 1 //通知
	MsgType_mt_Cooperation MsgType = 2 //协同
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "mt_none",
		1: "mt_Notify",
		2: "mt_Cooperation",
	}
	MsgType_value = map[string]int32{
		"mt_none":        0,
		"mt_Notify":      1,
		"mt_Cooperation": 2,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_notify_enum_proto_enumTypes[1].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_notify_enum_proto_enumTypes[1]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_notify_enum_proto_rawDescGZIP(), []int{1}
}

// 通知事件类型
type Event int32

const (
	Event_NONE                            Event = 0
	Event_AddMember                       Event = 1   //添加成员
	Event_RemoveMember                    Event = 2   //移除成员
	Event_QuitSpace                       Event = 3   //离开空间
	Event_ChangeRole                      Event = 4   //权限变更
	Event_ChangeSpaceName                 Event = 5   //空间名称变更
	Event_ChangeSpaceDescribe             Event = 6   //空间描述变更
	Event_DeleteSpace                     Event = 7   //删除空间
	Event_TransferSpace                   Event = 8   //转让空间
	Event_ChangeSpaceNotify               Event = 9   //修改项目通知
	Event_RollbackWorkItem                Event = 10  //回滚工作项
	Event_CloseWorkItem                   Event = 11  //关闭工作项
	Event_TerminateWorkItem               Event = 12  //终止工作项
	Event_CompleteWorkItem                Event = 13  //完成工作项
	Event_RestartWorkItem                 Event = 14  //重启工作项
	Event_AddCommentEvent                 Event = 15  //添加评论
	Event_ResumeWorkItem                  Event = 17  //恢复工作项
	Event_DeleteWorkItem                  Event = 18  //删除工作项
	Event_TransferWorkItem                Event = 19  //工作项转移
	Event_DeleteComment                   Event = 20  //删除评论
	Event_UpdateComment                   Event = 21  //更新评论
	Event_AddCommentEmoji                 Event = 22  //添加评论表情
	Event_DeleteTag                       Event = 23  //删除标签
	Event_AdminChangeUserNickname         Event = 80  // 管理员修改用户昵称
	Event_AdminChangeUserRole             Event = 81  // 管理员修改用户角色
	Event_AdminCancelUser                 Event = 82  // 管理员注销用户
	Event_ChangeWorkItemField             Event = 102 //工作项名称变更
	Event_ChangeWorkItemDirector          Event = 104 //工作项负责人变更
	Event_ChangeWorkItemTag               Event = 107 //工作项标签变更
	Event_CreateChildWorkItem             Event = 112 //创建子工作项
	Event_ChangeWorkItemFlowNode          Event = 114 //工作项流程节点变更
	Event_SetWorkItemFile                 Event = 113 //删除工作项附件
	Event_CreateWorkItem                  Event = 115 //创建工作项
	Event_CreateSpace                     Event = 116 //创建空间
	Event_SetSpaceNotify                  Event = 117 //设置空间通知
	Event_SetSpaceWorkingDay              Event = 118 //设置空间工作日
	Event_SpaceAbnormal                   Event = 120 //空间异常
	Event_RemindWork                      Event = 121 //提醒工作项负责人
	Event_ChangeWorkFlowNodePlanTime      Event = 122 // 设置节点排期
	Event_SetCommentDeletable             Event = 123 //设置评论删除权限
	Event_SetCommentDeletableWhenArchived Event = 124 // 设置评论可删除当任务归档
	Event_SetCommentShowPos               Event = 125 //设置评论展示位置
	Event_AddSpaceManager                 Event = 130 //添加空间管理员
	Event_RemoveSpaceManager              Event = 131 //移除空间管理员
	Event_CreateMemberCategory            Event = 140 //创建自定义用户组
	Event_DeleteMemberCategory            Event = 141 //移除自定义用户组
	Event_CreateWorkFlow                  Event = 150 //创建流程
	Event_DeleteWorkFlow                  Event = 151 //删除流程
	Event_ChangeWorkFlowField             Event = 152 //修改流程字段
	Event_SaveWorkFlowTemplate            Event = 153 //保存流程模板
	Event_DisableWorkFlow                 Event = 154
	Event_UpgradeTaskWorkFlow             Event = 155 //升级任务流程
	Event_UpdateWorkFlow                  Event = 156 //更新流程
	Event_WorkItemExpired                 Event = 200 //工作项过期
	Event_WorkItemFlowNodeExpired         Event = 201 //工作项流程节点过期
	Event_UpdateSpaceView                 Event = 202 //更新空间视图
)

// Enum value maps for Event.
var (
	Event_name = map[int32]string{
		0:   "NONE",
		1:   "AddMember",
		2:   "RemoveMember",
		3:   "QuitSpace",
		4:   "ChangeRole",
		5:   "ChangeSpaceName",
		6:   "ChangeSpaceDescribe",
		7:   "DeleteSpace",
		8:   "TransferSpace",
		9:   "ChangeSpaceNotify",
		10:  "RollbackWorkItem",
		11:  "CloseWorkItem",
		12:  "TerminateWorkItem",
		13:  "CompleteWorkItem",
		14:  "RestartWorkItem",
		15:  "AddCommentEvent",
		17:  "ResumeWorkItem",
		18:  "DeleteWorkItem",
		19:  "TransferWorkItem",
		20:  "DeleteComment",
		21:  "UpdateComment",
		22:  "AddCommentEmoji",
		23:  "DeleteTag",
		80:  "AdminChangeUserNickname",
		81:  "AdminChangeUserRole",
		82:  "AdminCancelUser",
		102: "ChangeWorkItemField",
		104: "ChangeWorkItemDirector",
		107: "ChangeWorkItemTag",
		112: "CreateChildWorkItem",
		114: "ChangeWorkItemFlowNode",
		113: "SetWorkItemFile",
		115: "CreateWorkItem",
		116: "CreateSpace",
		117: "SetSpaceNotify",
		118: "SetSpaceWorkingDay",
		120: "SpaceAbnormal",
		121: "RemindWork",
		122: "ChangeWorkFlowNodePlanTime",
		123: "SetCommentDeletable",
		124: "SetCommentDeletableWhenArchived",
		125: "SetCommentShowPos",
		130: "AddSpaceManager",
		131: "RemoveSpaceManager",
		140: "CreateMemberCategory",
		141: "DeleteMemberCategory",
		150: "CreateWorkFlow",
		151: "DeleteWorkFlow",
		152: "ChangeWorkFlowField",
		153: "SaveWorkFlowTemplate",
		154: "DisableWorkFlow",
		155: "UpgradeTaskWorkFlow",
		156: "UpdateWorkFlow",
		200: "WorkItemExpired",
		201: "WorkItemFlowNodeExpired",
		202: "UpdateSpaceView",
	}
	Event_value = map[string]int32{
		"NONE":                            0,
		"AddMember":                       1,
		"RemoveMember":                    2,
		"QuitSpace":                       3,
		"ChangeRole":                      4,
		"ChangeSpaceName":                 5,
		"ChangeSpaceDescribe":             6,
		"DeleteSpace":                     7,
		"TransferSpace":                   8,
		"ChangeSpaceNotify":               9,
		"RollbackWorkItem":                10,
		"CloseWorkItem":                   11,
		"TerminateWorkItem":               12,
		"CompleteWorkItem":                13,
		"RestartWorkItem":                 14,
		"AddCommentEvent":                 15,
		"ResumeWorkItem":                  17,
		"DeleteWorkItem":                  18,
		"TransferWorkItem":                19,
		"DeleteComment":                   20,
		"UpdateComment":                   21,
		"AddCommentEmoji":                 22,
		"DeleteTag":                       23,
		"AdminChangeUserNickname":         80,
		"AdminChangeUserRole":             81,
		"AdminCancelUser":                 82,
		"ChangeWorkItemField":             102,
		"ChangeWorkItemDirector":          104,
		"ChangeWorkItemTag":               107,
		"CreateChildWorkItem":             112,
		"ChangeWorkItemFlowNode":          114,
		"SetWorkItemFile":                 113,
		"CreateWorkItem":                  115,
		"CreateSpace":                     116,
		"SetSpaceNotify":                  117,
		"SetSpaceWorkingDay":              118,
		"SpaceAbnormal":                   120,
		"RemindWork":                      121,
		"ChangeWorkFlowNodePlanTime":      122,
		"SetCommentDeletable":             123,
		"SetCommentDeletableWhenArchived": 124,
		"SetCommentShowPos":               125,
		"AddSpaceManager":                 130,
		"RemoveSpaceManager":              131,
		"CreateMemberCategory":            140,
		"DeleteMemberCategory":            141,
		"CreateWorkFlow":                  150,
		"DeleteWorkFlow":                  151,
		"ChangeWorkFlowField":             152,
		"SaveWorkFlowTemplate":            153,
		"DisableWorkFlow":                 154,
		"UpgradeTaskWorkFlow":             155,
		"UpdateWorkFlow":                  156,
		"WorkItemExpired":                 200,
		"WorkItemFlowNodeExpired":         201,
		"UpdateSpaceView":                 202,
	}
)

func (x Event) Enum() *Event {
	p := new(Event)
	*p = x
	return p
}

func (x Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event) Descriptor() protoreflect.EnumDescriptor {
	return file_notify_enum_proto_enumTypes[2].Descriptor()
}

func (Event) Type() protoreflect.EnumType {
	return &file_notify_enum_proto_enumTypes[2]
}

func (x Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event.Descriptor instead.
func (Event) EnumDescriptor() ([]byte, []int) {
	return file_notify_enum_proto_rawDescGZIP(), []int{2}
}

var File_notify_enum_proto protoreflect.FileDescriptor

var file_notify_enum_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2a, 0x4b, 0x0a, 0x0d, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x06,
	0x49, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x73, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x39, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x6d, 0x74, 0x5f, 0x6e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x74, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x6d, 0x74, 0x5f, 0x43, 0x6f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x02, 0x2a, 0xdf, 0x09, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x75, 0x69, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x10, 0x09,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x0b, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x0c,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x0f,
	0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x12, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x13, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x10,
	0x14, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x10, 0x17, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x10, 0x50, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x10, 0x51, 0x12, 0x13,
	0x0a, 0x0f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x10, 0x52, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x66, 0x12, 0x1a, 0x0a, 0x16,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x68, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x10, 0x6b, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x70, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f,
	0x64, 0x65, 0x10, 0x72, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x71, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x73, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x74, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x10, 0x75, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x10, 0x76, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x78, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x10, 0x79, 0x12, 0x1e, 0x0a,
	0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x7a, 0x12, 0x17, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x10, 0x7b, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x68, 0x65,
	0x6e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10, 0x7c, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x6f, 0x73,
	0x10, 0x7d, 0x12, 0x14, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x82, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x10, 0x83,
	0x01, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x10, 0x8c, 0x01, 0x12, 0x19, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x10, 0x8d, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x96, 0x01, 0x12, 0x13, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x97,
	0x01, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x10, 0x98, 0x01, 0x12, 0x19, 0x0a, 0x14, 0x53,
	0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x10, 0x99, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x9a, 0x01, 0x12, 0x18, 0x0a, 0x13,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x10, 0x9b, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x10, 0x9c, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x57,
	0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0xc8,
	0x01, 0x12, 0x1c, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x6f,
	0x77, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0xc9, 0x01, 0x12,
	0x14, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69,
	0x65, 0x77, 0x10, 0xca, 0x01, 0x42, 0x19, 0x5a, 0x17, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x3b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notify_enum_proto_rawDescOnce sync.Once
	file_notify_enum_proto_rawDescData = file_notify_enum_proto_rawDesc
)

func file_notify_enum_proto_rawDescGZIP() []byte {
	file_notify_enum_proto_rawDescOnce.Do(func() {
		file_notify_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_notify_enum_proto_rawDescData)
	})
	return file_notify_enum_proto_rawDescData
}

var file_notify_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_notify_enum_proto_goTypes = []interface{}{
	(InternalEvent)(0), // 0: notify.InternalEvent
	(MsgType)(0),       // 1: notify.MsgType
	(Event)(0),         // 2: notify.Event
}
var file_notify_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_notify_enum_proto_init() }
func file_notify_enum_proto_init() {
	if File_notify_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notify_enum_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_notify_enum_proto_goTypes,
		DependencyIndexes: file_notify_enum_proto_depIdxs,
		EnumInfos:         file_notify_enum_proto_enumTypes,
	}.Build()
	File_notify_enum_proto = out.File
	file_notify_enum_proto_rawDesc = nil
	file_notify_enum_proto_goTypes = nil
	file_notify_enum_proto_depIdxs = nil
}
