// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: space_work_version/v1/space_work_version.proto

package v1

import (
	comm "go-cs/api/comm"
	bean "go-cs/internal/bean"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ---设置工作流排序
type SetSpaceWorkVersionRankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64                                     `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	List    []*SetSpaceWorkVersionRankingRequest_List `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SetSpaceWorkVersionRankingRequest) Reset() {
	*x = SetSpaceWorkVersionRankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceWorkVersionRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceWorkVersionRankingRequest) ProtoMessage() {}

func (x *SetSpaceWorkVersionRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceWorkVersionRankingRequest.ProtoReflect.Descriptor instead.
func (*SetSpaceWorkVersionRankingRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{0}
}

func (x *SetSpaceWorkVersionRankingRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SetSpaceWorkVersionRankingRequest) GetList() []*SetSpaceWorkVersionRankingRequest_List {
	if x != nil {
		return x.List
	}
	return nil
}

type SetSpaceWorkVersionRankingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetSpaceWorkVersionRankingReply_Error
	//	*SetSpaceWorkVersionRankingReply_Data
	Result isSetSpaceWorkVersionRankingReply_Result `protobuf_oneof:"result"`
}

func (x *SetSpaceWorkVersionRankingReply) Reset() {
	*x = SetSpaceWorkVersionRankingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceWorkVersionRankingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceWorkVersionRankingReply) ProtoMessage() {}

func (x *SetSpaceWorkVersionRankingReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceWorkVersionRankingReply.ProtoReflect.Descriptor instead.
func (*SetSpaceWorkVersionRankingReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{1}
}

func (m *SetSpaceWorkVersionRankingReply) GetResult() isSetSpaceWorkVersionRankingReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetSpaceWorkVersionRankingReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetSpaceWorkVersionRankingReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetSpaceWorkVersionRankingReply) GetData() string {
	if x, ok := x.GetResult().(*SetSpaceWorkVersionRankingReply_Data); ok {
		return x.Data
	}
	return ""
}

type isSetSpaceWorkVersionRankingReply_Result interface {
	isSetSpaceWorkVersionRankingReply_Result()
}

type SetSpaceWorkVersionRankingReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetSpaceWorkVersionRankingReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SetSpaceWorkVersionRankingReply_Error) isSetSpaceWorkVersionRankingReply_Result() {}

func (*SetSpaceWorkVersionRankingReply_Data) isSetSpaceWorkVersionRankingReply_Result() {}

type SetWorkVersionOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId   int64 `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	VersionId int64 `protobuf:"varint,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	FromIdx   int64 `protobuf:"varint,3,opt,name=fromIdx,proto3" json:"fromIdx,omitempty"`
	ToIdx     int64 `protobuf:"varint,4,opt,name=toIdx,proto3" json:"toIdx,omitempty"`
}

func (x *SetWorkVersionOrderRequest) Reset() {
	*x = SetWorkVersionOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkVersionOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkVersionOrderRequest) ProtoMessage() {}

func (x *SetWorkVersionOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkVersionOrderRequest.ProtoReflect.Descriptor instead.
func (*SetWorkVersionOrderRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{2}
}

func (x *SetWorkVersionOrderRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SetWorkVersionOrderRequest) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *SetWorkVersionOrderRequest) GetFromIdx() int64 {
	if x != nil {
		return x.FromIdx
	}
	return 0
}

func (x *SetWorkVersionOrderRequest) GetToIdx() int64 {
	if x != nil {
		return x.ToIdx
	}
	return 0
}

type SetWorkVersionOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetWorkVersionOrderReply_Error
	Result isSetWorkVersionOrderReply_Result `protobuf_oneof:"result"`
}

func (x *SetWorkVersionOrderReply) Reset() {
	*x = SetWorkVersionOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkVersionOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkVersionOrderReply) ProtoMessage() {}

func (x *SetWorkVersionOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkVersionOrderReply.ProtoReflect.Descriptor instead.
func (*SetWorkVersionOrderReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{3}
}

func (m *SetWorkVersionOrderReply) GetResult() isSetWorkVersionOrderReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetWorkVersionOrderReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetWorkVersionOrderReply_Error); ok {
		return x.Error
	}
	return nil
}

type isSetWorkVersionOrderReply_Result interface {
	isSetWorkVersionOrderReply_Result()
}

type SetWorkVersionOrderReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

func (*SetWorkVersionOrderReply_Error) isSetWorkVersionOrderReply_Result() {}

// 创建 项目空间-工作项版本
type CreateSpaceWorkVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionName   string                                          `protobuf:"bytes,1,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"` //版本名称
	SpaceId       int64                                           `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`          //用户id
	Scene         string                                          `protobuf:"bytes,3,opt,name=scene,proto3" json:"scene,omitempty"`                                // 场景类型 work_item
	WorkItemScene *CreateSpaceWorkVersionRequestWorkItemSceneData `protobuf:"bytes,5,opt,name=work_item_scene,json=workItemScene,proto3" json:"work_item_scene,omitempty"`
}

func (x *CreateSpaceWorkVersionRequest) Reset() {
	*x = CreateSpaceWorkVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceWorkVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceWorkVersionRequest) ProtoMessage() {}

func (x *CreateSpaceWorkVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceWorkVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateSpaceWorkVersionRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSpaceWorkVersionRequest) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *CreateSpaceWorkVersionRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *CreateSpaceWorkVersionRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *CreateSpaceWorkVersionRequest) GetWorkItemScene() *CreateSpaceWorkVersionRequestWorkItemSceneData {
	if x != nil {
		return x.WorkItemScene
	}
	return nil
}

type CreateSpaceWorkVersionRequestWorkItemSceneData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkItemId int64 `protobuf:"zigzag64,1,opt,name=work_item_id,json=workItemId,proto3" json:"work_item_id,omitempty"` // 项目空间名称
}

func (x *CreateSpaceWorkVersionRequestWorkItemSceneData) Reset() {
	*x = CreateSpaceWorkVersionRequestWorkItemSceneData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceWorkVersionRequestWorkItemSceneData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceWorkVersionRequestWorkItemSceneData) ProtoMessage() {}

func (x *CreateSpaceWorkVersionRequestWorkItemSceneData) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceWorkVersionRequestWorkItemSceneData.ProtoReflect.Descriptor instead.
func (*CreateSpaceWorkVersionRequestWorkItemSceneData) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSpaceWorkVersionRequestWorkItemSceneData) GetWorkItemId() int64 {
	if x != nil {
		return x.WorkItemId
	}
	return 0
}

type CreateSpaceWorkVersionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CreateSpaceWorkVersionReply_Error
	//	*CreateSpaceWorkVersionReply_Data
	Result isCreateSpaceWorkVersionReply_Result `protobuf_oneof:"result"`
}

func (x *CreateSpaceWorkVersionReply) Reset() {
	*x = CreateSpaceWorkVersionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceWorkVersionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceWorkVersionReply) ProtoMessage() {}

func (x *CreateSpaceWorkVersionReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceWorkVersionReply.ProtoReflect.Descriptor instead.
func (*CreateSpaceWorkVersionReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{6}
}

func (m *CreateSpaceWorkVersionReply) GetResult() isCreateSpaceWorkVersionReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CreateSpaceWorkVersionReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*CreateSpaceWorkVersionReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateSpaceWorkVersionReply) GetData() *bean.SpaceWorkVersion {
	if x, ok := x.GetResult().(*CreateSpaceWorkVersionReply_Data); ok {
		return x.Data
	}
	return nil
}

type isCreateSpaceWorkVersionReply_Result interface {
	isCreateSpaceWorkVersionReply_Result()
}

type CreateSpaceWorkVersionReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateSpaceWorkVersionReply_Data struct {
	Data *bean.SpaceWorkVersion `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateSpaceWorkVersionReply_Error) isCreateSpaceWorkVersionReply_Result() {}

func (*CreateSpaceWorkVersionReply_Data) isCreateSpaceWorkVersionReply_Result() {}

// 工作项版本-列表
type SpaceWorkVersionByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64   `protobuf:"zigzag64,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	Ids     []int64 `protobuf:"zigzag64,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SpaceWorkVersionByIdRequest) Reset() {
	*x = SpaceWorkVersionByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionByIdRequest) ProtoMessage() {}

func (x *SpaceWorkVersionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionByIdRequest.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionByIdRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{7}
}

func (x *SpaceWorkVersionByIdRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkVersionByIdRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SpaceWorkVersionByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SpaceWorkVersionByIdReply_Error
	//	*SpaceWorkVersionByIdReply_Data
	Result isSpaceWorkVersionByIdReply_Result `protobuf_oneof:"result"`
}

func (x *SpaceWorkVersionByIdReply) Reset() {
	*x = SpaceWorkVersionByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionByIdReply) ProtoMessage() {}

func (x *SpaceWorkVersionByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionByIdReply.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionByIdReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{8}
}

func (m *SpaceWorkVersionByIdReply) GetResult() isSpaceWorkVersionByIdReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SpaceWorkVersionByIdReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SpaceWorkVersionByIdReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SpaceWorkVersionByIdReply) GetData() *SpaceWorkVersionByIdReplyData {
	if x, ok := x.GetResult().(*SpaceWorkVersionByIdReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSpaceWorkVersionByIdReply_Result interface {
	isSpaceWorkVersionByIdReply_Result()
}

type SpaceWorkVersionByIdReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SpaceWorkVersionByIdReply_Data struct {
	Data *SpaceWorkVersionByIdReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SpaceWorkVersionByIdReply_Error) isSpaceWorkVersionByIdReply_Result() {}

func (*SpaceWorkVersionByIdReply_Data) isSpaceWorkVersionByIdReply_Result() {}

type SpaceWorkVersionByIdReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SpaceWorkVersionByIdReplyData_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SpaceWorkVersionByIdReplyData) Reset() {
	*x = SpaceWorkVersionByIdReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionByIdReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionByIdReplyData) ProtoMessage() {}

func (x *SpaceWorkVersionByIdReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionByIdReplyData.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionByIdReplyData) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{9}
}

func (x *SpaceWorkVersionByIdReplyData) GetList() []*SpaceWorkVersionByIdReplyData_Item {
	if x != nil {
		return x.List
	}
	return nil
}

type SpaceWorkVersionByIdReplyData_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId       int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                 //空间id
	VersionKey    string `protobuf:"bytes,10,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`          //版本KEY
	VersionName   string `protobuf:"bytes,3,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`        //版本名称
	VersionStatus int64  `protobuf:"varint,4,opt,name=version_status,json=versionStatus,proto3" json:"version_status,omitempty"` //版本状态
	Remark        string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                                     //备注
	Ranking       int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                                //排序
	CreatedAt     int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`           //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`           //更新时间
}

func (x *SpaceWorkVersionByIdReplyData_Item) Reset() {
	*x = SpaceWorkVersionByIdReplyData_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionByIdReplyData_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionByIdReplyData_Item) ProtoMessage() {}

func (x *SpaceWorkVersionByIdReplyData_Item) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionByIdReplyData_Item.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionByIdReplyData_Item) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{10}
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetVersionKey() string {
	if x != nil {
		return x.VersionKey
	}
	return ""
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetVersionStatus() int64 {
	if x != nil {
		return x.VersionStatus
	}
	return 0
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkVersionByIdReplyData_Item) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 工作项版本-列表
type SpaceWorkVersionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"zigzag64,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *SpaceWorkVersionListRequest) Reset() {
	*x = SpaceWorkVersionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionListRequest) ProtoMessage() {}

func (x *SpaceWorkVersionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionListRequest.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionListRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{11}
}

func (x *SpaceWorkVersionListRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

type SpaceWorkVersionListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SpaceWorkVersionListReply_Error
	//	*SpaceWorkVersionListReply_Data
	Result isSpaceWorkVersionListReply_Result `protobuf_oneof:"result"`
}

func (x *SpaceWorkVersionListReply) Reset() {
	*x = SpaceWorkVersionListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionListReply) ProtoMessage() {}

func (x *SpaceWorkVersionListReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionListReply.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionListReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{12}
}

func (m *SpaceWorkVersionListReply) GetResult() isSpaceWorkVersionListReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SpaceWorkVersionListReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SpaceWorkVersionListReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SpaceWorkVersionListReply) GetData() *SpaceWorkVersionListReplyData {
	if x, ok := x.GetResult().(*SpaceWorkVersionListReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSpaceWorkVersionListReply_Result interface {
	isSpaceWorkVersionListReply_Result()
}

type SpaceWorkVersionListReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SpaceWorkVersionListReply_Data struct {
	Data *SpaceWorkVersionListReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SpaceWorkVersionListReply_Error) isSpaceWorkVersionListReply_Result() {}

func (*SpaceWorkVersionListReply_Data) isSpaceWorkVersionListReply_Result() {}

type SpaceWorkVersionListReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SpaceWorkVersionListReplyData_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SpaceWorkVersionListReplyData) Reset() {
	*x = SpaceWorkVersionListReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionListReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionListReplyData) ProtoMessage() {}

func (x *SpaceWorkVersionListReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionListReplyData.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionListReplyData) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{13}
}

func (x *SpaceWorkVersionListReplyData) GetList() []*SpaceWorkVersionListReplyData_Item {
	if x != nil {
		return x.List
	}
	return nil
}

type SpaceWorkVersionListReplyData_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId       int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                 //空间id
	VersionKey    string `protobuf:"bytes,10,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`          //版本KEY
	VersionName   string `protobuf:"bytes,3,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`        //版本名称
	VersionStatus int64  `protobuf:"varint,4,opt,name=version_status,json=versionStatus,proto3" json:"version_status,omitempty"` //版本状态
	Remark        string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                                     //备注
	Ranking       int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                                //排序
	CreatedAt     int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`           //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`           //更新时间
}

func (x *SpaceWorkVersionListReplyData_Item) Reset() {
	*x = SpaceWorkVersionListReplyData_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionListReplyData_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionListReplyData_Item) ProtoMessage() {}

func (x *SpaceWorkVersionListReplyData_Item) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionListReplyData_Item.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionListReplyData_Item) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{14}
}

func (x *SpaceWorkVersionListReplyData_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkVersionListReplyData_Item) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkVersionListReplyData_Item) GetVersionKey() string {
	if x != nil {
		return x.VersionKey
	}
	return ""
}

func (x *SpaceWorkVersionListReplyData_Item) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *SpaceWorkVersionListReplyData_Item) GetVersionStatus() int64 {
	if x != nil {
		return x.VersionStatus
	}
	return 0
}

func (x *SpaceWorkVersionListReplyData_Item) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SpaceWorkVersionListReplyData_Item) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkVersionListReplyData_Item) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkVersionListReplyData_Item) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 工作项版本-名称修改
type ModifySpaceWorkVersionNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId     int64                                               `protobuf:"zigzag64,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	VersionName   string                                              `protobuf:"bytes,2,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	Scene         string                                              `protobuf:"bytes,3,opt,name=scene,proto3" json:"scene,omitempty"` // 场景类型 work_item
	WorkItemScene *ModifySpaceWorkVersionNameRequestWorkItemSceneData `protobuf:"bytes,5,opt,name=work_item_scene,json=workItemScene,proto3" json:"work_item_scene,omitempty"`
}

func (x *ModifySpaceWorkVersionNameRequest) Reset() {
	*x = ModifySpaceWorkVersionNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySpaceWorkVersionNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySpaceWorkVersionNameRequest) ProtoMessage() {}

func (x *ModifySpaceWorkVersionNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySpaceWorkVersionNameRequest.ProtoReflect.Descriptor instead.
func (*ModifySpaceWorkVersionNameRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{15}
}

func (x *ModifySpaceWorkVersionNameRequest) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *ModifySpaceWorkVersionNameRequest) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *ModifySpaceWorkVersionNameRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

func (x *ModifySpaceWorkVersionNameRequest) GetWorkItemScene() *ModifySpaceWorkVersionNameRequestWorkItemSceneData {
	if x != nil {
		return x.WorkItemScene
	}
	return nil
}

type ModifySpaceWorkVersionNameRequestWorkItemSceneData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkItemId int64 `protobuf:"zigzag64,1,opt,name=work_item_id,json=workItemId,proto3" json:"work_item_id,omitempty"` // 项目空间名称
}

func (x *ModifySpaceWorkVersionNameRequestWorkItemSceneData) Reset() {
	*x = ModifySpaceWorkVersionNameRequestWorkItemSceneData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySpaceWorkVersionNameRequestWorkItemSceneData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySpaceWorkVersionNameRequestWorkItemSceneData) ProtoMessage() {}

func (x *ModifySpaceWorkVersionNameRequestWorkItemSceneData) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySpaceWorkVersionNameRequestWorkItemSceneData.ProtoReflect.Descriptor instead.
func (*ModifySpaceWorkVersionNameRequestWorkItemSceneData) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{16}
}

func (x *ModifySpaceWorkVersionNameRequestWorkItemSceneData) GetWorkItemId() int64 {
	if x != nil {
		return x.WorkItemId
	}
	return 0
}

type ModifySpaceWorkVersionNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*ModifySpaceWorkVersionNameReply_Error
	//	*ModifySpaceWorkVersionNameReply_Data
	Result isModifySpaceWorkVersionNameReply_Result `protobuf_oneof:"result"`
}

func (x *ModifySpaceWorkVersionNameReply) Reset() {
	*x = ModifySpaceWorkVersionNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySpaceWorkVersionNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySpaceWorkVersionNameReply) ProtoMessage() {}

func (x *ModifySpaceWorkVersionNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySpaceWorkVersionNameReply.ProtoReflect.Descriptor instead.
func (*ModifySpaceWorkVersionNameReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{17}
}

func (m *ModifySpaceWorkVersionNameReply) GetResult() isModifySpaceWorkVersionNameReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ModifySpaceWorkVersionNameReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*ModifySpaceWorkVersionNameReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ModifySpaceWorkVersionNameReply) GetData() string {
	if x, ok := x.GetResult().(*ModifySpaceWorkVersionNameReply_Data); ok {
		return x.Data
	}
	return ""
}

type isModifySpaceWorkVersionNameReply_Result interface {
	isModifySpaceWorkVersionNameReply_Result()
}

type ModifySpaceWorkVersionNameReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ModifySpaceWorkVersionNameReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ModifySpaceWorkVersionNameReply_Error) isModifySpaceWorkVersionNameReply_Result() {}

func (*ModifySpaceWorkVersionNameReply_Data) isModifySpaceWorkVersionNameReply_Result() {}

// 工作项版本-删除
type DelSpaceWorkVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId   int64 `protobuf:"zigzag64,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	ToVersionId int64 `protobuf:"zigzag64,2,opt,name=to_version_id,json=toVersionId,proto3" json:"to_version_id,omitempty"`
}

func (x *DelSpaceWorkVersionRequest) Reset() {
	*x = DelSpaceWorkVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSpaceWorkVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSpaceWorkVersionRequest) ProtoMessage() {}

func (x *DelSpaceWorkVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSpaceWorkVersionRequest.ProtoReflect.Descriptor instead.
func (*DelSpaceWorkVersionRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{18}
}

func (x *DelSpaceWorkVersionRequest) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *DelSpaceWorkVersionRequest) GetToVersionId() int64 {
	if x != nil {
		return x.ToVersionId
	}
	return 0
}

type DelSpaceWorkVersionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*DelSpaceWorkVersionReply_Error
	//	*DelSpaceWorkVersionReply_Data
	Result isDelSpaceWorkVersionReply_Result `protobuf_oneof:"result"`
}

func (x *DelSpaceWorkVersionReply) Reset() {
	*x = DelSpaceWorkVersionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelSpaceWorkVersionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelSpaceWorkVersionReply) ProtoMessage() {}

func (x *DelSpaceWorkVersionReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelSpaceWorkVersionReply.ProtoReflect.Descriptor instead.
func (*DelSpaceWorkVersionReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{19}
}

func (m *DelSpaceWorkVersionReply) GetResult() isDelSpaceWorkVersionReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *DelSpaceWorkVersionReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*DelSpaceWorkVersionReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DelSpaceWorkVersionReply) GetData() string {
	if x, ok := x.GetResult().(*DelSpaceWorkVersionReply_Data); ok {
		return x.Data
	}
	return ""
}

type isDelSpaceWorkVersionReply_Result interface {
	isDelSpaceWorkVersionReply_Result()
}

type DelSpaceWorkVersionReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DelSpaceWorkVersionReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*DelSpaceWorkVersionReply_Error) isDelSpaceWorkVersionReply_Result() {}

func (*DelSpaceWorkVersionReply_Data) isDelSpaceWorkVersionReply_Result() {}

// 工作项版本-已关联的数量
type SpaceWorkVersionRelationCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId   int64 `protobuf:"zigzag64,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	VersionId int64 `protobuf:"zigzag64,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
}

func (x *SpaceWorkVersionRelationCountRequest) Reset() {
	*x = SpaceWorkVersionRelationCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionRelationCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionRelationCountRequest) ProtoMessage() {}

func (x *SpaceWorkVersionRelationCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionRelationCountRequest.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionRelationCountRequest) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{20}
}

func (x *SpaceWorkVersionRelationCountRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkVersionRelationCountRequest) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

type SpaceWorkVersionRelationCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SpaceWorkVersionRelationCountReply_Error
	//	*SpaceWorkVersionRelationCountReply_Data
	Result isSpaceWorkVersionRelationCountReply_Result `protobuf_oneof:"result"`
}

func (x *SpaceWorkVersionRelationCountReply) Reset() {
	*x = SpaceWorkVersionRelationCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersionRelationCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersionRelationCountReply) ProtoMessage() {}

func (x *SpaceWorkVersionRelationCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersionRelationCountReply.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersionRelationCountReply) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{21}
}

func (m *SpaceWorkVersionRelationCountReply) GetResult() isSpaceWorkVersionRelationCountReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SpaceWorkVersionRelationCountReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SpaceWorkVersionRelationCountReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SpaceWorkVersionRelationCountReply) GetData() int64 {
	if x, ok := x.GetResult().(*SpaceWorkVersionRelationCountReply_Data); ok {
		return x.Data
	}
	return 0
}

type isSpaceWorkVersionRelationCountReply_Result interface {
	isSpaceWorkVersionRelationCountReply_Result()
}

type SpaceWorkVersionRelationCountReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SpaceWorkVersionRelationCountReply_Data struct {
	Data int64 `protobuf:"zigzag64,2,opt,name=data,proto3,oneof"`
}

func (*SpaceWorkVersionRelationCountReply_Error) isSpaceWorkVersionRelationCountReply_Result() {}

func (*SpaceWorkVersionRelationCountReply_Data) isSpaceWorkVersionRelationCountReply_Result() {}

type SetSpaceWorkVersionRankingRequest_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Ranking int64 `protobuf:"varint,3,opt,name=ranking,proto3" json:"ranking,omitempty"`
}

func (x *SetSpaceWorkVersionRankingRequest_List) Reset() {
	*x = SetSpaceWorkVersionRankingRequest_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceWorkVersionRankingRequest_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceWorkVersionRankingRequest_List) ProtoMessage() {}

func (x *SetSpaceWorkVersionRankingRequest_List) ProtoReflect() protoreflect.Message {
	mi := &file_space_work_version_v1_space_work_version_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceWorkVersionRankingRequest_List.ProtoReflect.Descriptor instead.
func (*SetSpaceWorkVersionRankingRequest_List) Descriptor() ([]byte, []int) {
	return file_space_work_version_v1_space_work_version_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SetSpaceWorkVersionRankingRequest_List) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetSpaceWorkVersionRankingRequest_List) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

var File_space_work_version_v1_space_work_version_proto protoreflect.FileDescriptor

var file_space_work_version_v1_space_work_version_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x19, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x63, 0x6f, 0x6d,
	0x6d, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x62, 0x65,
	0x61, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7,
	0x01, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x55, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x30, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x6a, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x49, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x49, 0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x49, 0x64, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x49, 0x64, 0x78, 0x22, 0x4d, 0x0a, 0x18, 0x53,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x12, 0x71, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x22, 0x52, 0x0a, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x62, 0x65, 0x61, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4a, 0x0a, 0x1b, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x12, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x19, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x72, 0x0a, 0x1d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x22, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07,
	0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x1b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22,
	0x9e, 0x01, 0x0a, 0x19, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x72, 0x0a, 0x1d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x51, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x22, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xf2, 0x01, 0x0a, 0x21, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12,
	0x75, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x22, 0x56, 0x0a, 0x32, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0c,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x6a,
	0x0a, 0x1f, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5f, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b,
	0x74, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x60, 0x0a, 0x24, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x6d, 0x0a, 0x22, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x48,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x32, 0xef, 0x0b, 0x0a, 0x12, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0xb4, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a,
	0x22, 0x1d, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0xac, 0x01, 0x0a, 0x14, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01,
	0x2a, 0x22, 0x1b, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xad,
	0x01, 0x0a, 0x14, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a,
	0x22, 0x1c, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0xc5,
	0x01, 0x0a, 0x1a, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a,
	0x01, 0x2a, 0x22, 0x22, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x64, 0x65,
	0x6c, 0x12, 0xb3, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x35,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65,
	0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xd1, 0x01, 0x0a, 0x1d, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0xc5, 0x01, 0x0a, 0x1a,
	0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22,
	0x22, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x73, 0x65, 0x74, 0x42, 0x47, 0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_space_work_version_v1_space_work_version_proto_rawDescOnce sync.Once
	file_space_work_version_v1_space_work_version_proto_rawDescData = file_space_work_version_v1_space_work_version_proto_rawDesc
)

func file_space_work_version_v1_space_work_version_proto_rawDescGZIP() []byte {
	file_space_work_version_v1_space_work_version_proto_rawDescOnce.Do(func() {
		file_space_work_version_v1_space_work_version_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_work_version_v1_space_work_version_proto_rawDescData)
	})
	return file_space_work_version_v1_space_work_version_proto_rawDescData
}

var file_space_work_version_v1_space_work_version_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_space_work_version_v1_space_work_version_proto_goTypes = []interface{}{
	(*SetSpaceWorkVersionRankingRequest)(nil),                  // 0: api.space_work_version.v1.SetSpaceWorkVersionRankingRequest
	(*SetSpaceWorkVersionRankingReply)(nil),                    // 1: api.space_work_version.v1.SetSpaceWorkVersionRankingReply
	(*SetWorkVersionOrderRequest)(nil),                         // 2: api.space_work_version.v1.SetWorkVersionOrderRequest
	(*SetWorkVersionOrderReply)(nil),                           // 3: api.space_work_version.v1.SetWorkVersionOrderReply
	(*CreateSpaceWorkVersionRequest)(nil),                      // 4: api.space_work_version.v1.CreateSpaceWorkVersionRequest
	(*CreateSpaceWorkVersionRequestWorkItemSceneData)(nil),     // 5: api.space_work_version.v1.CreateSpaceWorkVersionRequestWorkItemSceneData
	(*CreateSpaceWorkVersionReply)(nil),                        // 6: api.space_work_version.v1.CreateSpaceWorkVersionReply
	(*SpaceWorkVersionByIdRequest)(nil),                        // 7: api.space_work_version.v1.SpaceWorkVersionByIdRequest
	(*SpaceWorkVersionByIdReply)(nil),                          // 8: api.space_work_version.v1.SpaceWorkVersionByIdReply
	(*SpaceWorkVersionByIdReplyData)(nil),                      // 9: api.space_work_version.v1.SpaceWorkVersionByIdReplyData
	(*SpaceWorkVersionByIdReplyData_Item)(nil),                 // 10: api.space_work_version.v1.SpaceWorkVersionByIdReplyData_Item
	(*SpaceWorkVersionListRequest)(nil),                        // 11: api.space_work_version.v1.SpaceWorkVersionListRequest
	(*SpaceWorkVersionListReply)(nil),                          // 12: api.space_work_version.v1.SpaceWorkVersionListReply
	(*SpaceWorkVersionListReplyData)(nil),                      // 13: api.space_work_version.v1.SpaceWorkVersionListReplyData
	(*SpaceWorkVersionListReplyData_Item)(nil),                 // 14: api.space_work_version.v1.SpaceWorkVersionListReplyData_Item
	(*ModifySpaceWorkVersionNameRequest)(nil),                  // 15: api.space_work_version.v1.ModifySpaceWorkVersionNameRequest
	(*ModifySpaceWorkVersionNameRequestWorkItemSceneData)(nil), // 16: api.space_work_version.v1.ModifySpaceWorkVersionNameRequestWorkItemSceneData
	(*ModifySpaceWorkVersionNameReply)(nil),                    // 17: api.space_work_version.v1.ModifySpaceWorkVersionNameReply
	(*DelSpaceWorkVersionRequest)(nil),                         // 18: api.space_work_version.v1.DelSpaceWorkVersionRequest
	(*DelSpaceWorkVersionReply)(nil),                           // 19: api.space_work_version.v1.DelSpaceWorkVersionReply
	(*SpaceWorkVersionRelationCountRequest)(nil),               // 20: api.space_work_version.v1.SpaceWorkVersionRelationCountRequest
	(*SpaceWorkVersionRelationCountReply)(nil),                 // 21: api.space_work_version.v1.SpaceWorkVersionRelationCountReply
	(*SetSpaceWorkVersionRankingRequest_List)(nil),             // 22: api.space_work_version.v1.SetSpaceWorkVersionRankingRequest.List
	(*comm.ErrorInfo)(nil),                                     // 23: comm.ErrorInfo
	(*bean.SpaceWorkVersion)(nil),                              // 24: server_go_base.bean.SpaceWorkVersion
}
var file_space_work_version_v1_space_work_version_proto_depIdxs = []int32{
	22, // 0: api.space_work_version.v1.SetSpaceWorkVersionRankingRequest.list:type_name -> api.space_work_version.v1.SetSpaceWorkVersionRankingRequest.List
	23, // 1: api.space_work_version.v1.SetSpaceWorkVersionRankingReply.error:type_name -> comm.ErrorInfo
	23, // 2: api.space_work_version.v1.SetWorkVersionOrderReply.error:type_name -> comm.ErrorInfo
	5,  // 3: api.space_work_version.v1.CreateSpaceWorkVersionRequest.work_item_scene:type_name -> api.space_work_version.v1.CreateSpaceWorkVersionRequestWorkItemSceneData
	23, // 4: api.space_work_version.v1.CreateSpaceWorkVersionReply.error:type_name -> comm.ErrorInfo
	24, // 5: api.space_work_version.v1.CreateSpaceWorkVersionReply.data:type_name -> server_go_base.bean.SpaceWorkVersion
	23, // 6: api.space_work_version.v1.SpaceWorkVersionByIdReply.error:type_name -> comm.ErrorInfo
	9,  // 7: api.space_work_version.v1.SpaceWorkVersionByIdReply.data:type_name -> api.space_work_version.v1.SpaceWorkVersionByIdReplyData
	10, // 8: api.space_work_version.v1.SpaceWorkVersionByIdReplyData.list:type_name -> api.space_work_version.v1.SpaceWorkVersionByIdReplyData_Item
	23, // 9: api.space_work_version.v1.SpaceWorkVersionListReply.error:type_name -> comm.ErrorInfo
	13, // 10: api.space_work_version.v1.SpaceWorkVersionListReply.data:type_name -> api.space_work_version.v1.SpaceWorkVersionListReplyData
	14, // 11: api.space_work_version.v1.SpaceWorkVersionListReplyData.list:type_name -> api.space_work_version.v1.SpaceWorkVersionListReplyData_Item
	16, // 12: api.space_work_version.v1.ModifySpaceWorkVersionNameRequest.work_item_scene:type_name -> api.space_work_version.v1.ModifySpaceWorkVersionNameRequestWorkItemSceneData
	23, // 13: api.space_work_version.v1.ModifySpaceWorkVersionNameReply.error:type_name -> comm.ErrorInfo
	23, // 14: api.space_work_version.v1.DelSpaceWorkVersionReply.error:type_name -> comm.ErrorInfo
	23, // 15: api.space_work_version.v1.SpaceWorkVersionRelationCountReply.error:type_name -> comm.ErrorInfo
	4,  // 16: api.space_work_version.v1.space_work_version.CreateSpaceWorkVersion:input_type -> api.space_work_version.v1.CreateSpaceWorkVersionRequest
	11, // 17: api.space_work_version.v1.space_work_version.SpaceWorkVersionList:input_type -> api.space_work_version.v1.SpaceWorkVersionListRequest
	7,  // 18: api.space_work_version.v1.space_work_version.SpaceWorkVersionById:input_type -> api.space_work_version.v1.SpaceWorkVersionByIdRequest
	15, // 19: api.space_work_version.v1.space_work_version.ModifySpaceWorkVersionName:input_type -> api.space_work_version.v1.ModifySpaceWorkVersionNameRequest
	18, // 20: api.space_work_version.v1.space_work_version.DelSpaceWorkVersion:input_type -> api.space_work_version.v1.DelSpaceWorkVersionRequest
	2,  // 21: api.space_work_version.v1.space_work_version.SetSpaceWorkVersionOrder:input_type -> api.space_work_version.v1.SetWorkVersionOrderRequest
	20, // 22: api.space_work_version.v1.space_work_version.SpaceWorkVersionRelationCount:input_type -> api.space_work_version.v1.SpaceWorkVersionRelationCountRequest
	0,  // 23: api.space_work_version.v1.space_work_version.SetSpaceWorkVersionRanking:input_type -> api.space_work_version.v1.SetSpaceWorkVersionRankingRequest
	6,  // 24: api.space_work_version.v1.space_work_version.CreateSpaceWorkVersion:output_type -> api.space_work_version.v1.CreateSpaceWorkVersionReply
	12, // 25: api.space_work_version.v1.space_work_version.SpaceWorkVersionList:output_type -> api.space_work_version.v1.SpaceWorkVersionListReply
	8,  // 26: api.space_work_version.v1.space_work_version.SpaceWorkVersionById:output_type -> api.space_work_version.v1.SpaceWorkVersionByIdReply
	17, // 27: api.space_work_version.v1.space_work_version.ModifySpaceWorkVersionName:output_type -> api.space_work_version.v1.ModifySpaceWorkVersionNameReply
	19, // 28: api.space_work_version.v1.space_work_version.DelSpaceWorkVersion:output_type -> api.space_work_version.v1.DelSpaceWorkVersionReply
	3,  // 29: api.space_work_version.v1.space_work_version.SetSpaceWorkVersionOrder:output_type -> api.space_work_version.v1.SetWorkVersionOrderReply
	21, // 30: api.space_work_version.v1.space_work_version.SpaceWorkVersionRelationCount:output_type -> api.space_work_version.v1.SpaceWorkVersionRelationCountReply
	1,  // 31: api.space_work_version.v1.space_work_version.SetSpaceWorkVersionRanking:output_type -> api.space_work_version.v1.SetSpaceWorkVersionRankingReply
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_space_work_version_v1_space_work_version_proto_init() }
func file_space_work_version_v1_space_work_version_proto_init() {
	if File_space_work_version_v1_space_work_version_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_space_work_version_v1_space_work_version_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceWorkVersionRankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceWorkVersionRankingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkVersionOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkVersionOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceWorkVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceWorkVersionRequestWorkItemSceneData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceWorkVersionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionByIdReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionByIdReplyData_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionListReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionListReplyData_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySpaceWorkVersionNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySpaceWorkVersionNameRequestWorkItemSceneData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySpaceWorkVersionNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSpaceWorkVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelSpaceWorkVersionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionRelationCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersionRelationCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_work_version_v1_space_work_version_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceWorkVersionRankingRequest_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SetSpaceWorkVersionRankingReply_Error)(nil),
		(*SetSpaceWorkVersionRankingReply_Data)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SetWorkVersionOrderReply_Error)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*CreateSpaceWorkVersionReply_Error)(nil),
		(*CreateSpaceWorkVersionReply_Data)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SpaceWorkVersionByIdReply_Error)(nil),
		(*SpaceWorkVersionByIdReply_Data)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*SpaceWorkVersionListReply_Error)(nil),
		(*SpaceWorkVersionListReply_Data)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*ModifySpaceWorkVersionNameReply_Error)(nil),
		(*ModifySpaceWorkVersionNameReply_Data)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*DelSpaceWorkVersionReply_Error)(nil),
		(*DelSpaceWorkVersionReply_Data)(nil),
	}
	file_space_work_version_v1_space_work_version_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*SpaceWorkVersionRelationCountReply_Error)(nil),
		(*SpaceWorkVersionRelationCountReply_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_work_version_v1_space_work_version_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_work_version_v1_space_work_version_proto_goTypes,
		DependencyIndexes: file_space_work_version_v1_space_work_version_proto_depIdxs,
		MessageInfos:      file_space_work_version_v1_space_work_version_proto_msgTypes,
	}.Build()
	File_space_work_version_v1_space_work_version_proto = out.File
	file_space_work_version_v1_space_work_version_proto_rawDesc = nil
	file_space_work_version_v1_space_work_version_proto_goTypes = nil
	file_space_work_version_v1_space_work_version_proto_depIdxs = nil
}
