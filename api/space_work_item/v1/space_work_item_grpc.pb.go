// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: space_work_item/v1/space_work_item.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SpaceWorkItem_CreateWorkItemV2_FullMethodName             = "/api.space_work_item.v1.space_work_item/CreateWorkItemV2"
	SpaceWorkItem_CreateWorkItemSubTask_FullMethodName        = "/api.space_work_item.v1.space_work_item/CreateWorkItemSubTask"
	SpaceWorkItem_GetWorkItemDetailV2_FullMethodName          = "/api.space_work_item.v1.space_work_item/GetWorkItemDetailV2"
	SpaceWorkItem_ConfirmWorkFlowMain_FullMethodName          = "/api.space_work_item.v1.space_work_item/ConfirmWorkFlowMain"
	SpaceWorkItem_ConfirmStateFlowMain_FullMethodName         = "/api.space_work_item.v1.space_work_item/ConfirmStateFlowMain"
	SpaceWorkItem_ConfirmSub_FullMethodName                   = "/api.space_work_item.v1.space_work_item/ConfirmSub"
	SpaceWorkItem_SetFlowMainDirector_FullMethodName          = "/api.space_work_item.v1.space_work_item/SetFlowMainDirector"
	SpaceWorkItem_SetSubDirector_FullMethodName               = "/api.space_work_item.v1.space_work_item/SetSubDirector"
	SpaceWorkItem_SetWorkItemToNewWorkObjectV2_FullMethodName = "/api.space_work_item.v1.space_work_item/SetWorkItemToNewWorkObjectV2"
	SpaceWorkItem_ModifyWorkItemPlanTimeV2_FullMethodName     = "/api.space_work_item.v1.space_work_item/ModifyWorkItemPlanTimeV2"
	SpaceWorkItem_ModifyWorkItemProcessRateV2_FullMethodName  = "/api.space_work_item.v1.space_work_item/ModifyWorkItemProcessRateV2"
	SpaceWorkItem_ModifyWorkItemPriorityV2_FullMethodName     = "/api.space_work_item.v1.space_work_item/ModifyWorkItemPriorityV2"
	SpaceWorkItem_ModifyWorkItemDescribeV2_FullMethodName     = "/api.space_work_item.v1.space_work_item/ModifyWorkItemDescribeV2"
	SpaceWorkItem_ModifyWorkItemNameV2_FullMethodName         = "/api.space_work_item.v1.space_work_item/ModifyWorkItemNameV2"
	SpaceWorkItem_SetWorkItemTagV2_FullMethodName             = "/api.space_work_item.v1.space_work_item/SetWorkItemTagV2"
	SpaceWorkItem_SetSpaceWorkItemFileInfoV2_FullMethodName   = "/api.space_work_item.v1.space_work_item/SetSpaceWorkItemFileInfoV2"
	SpaceWorkItem_DelSpaceWorkItemV2_FullMethodName           = "/api.space_work_item.v1.space_work_item/DelSpaceWorkItemV2"
	SpaceWorkItem_TerminateSpaceWorkItemV2_FullMethodName     = "/api.space_work_item.v1.space_work_item/TerminateSpaceWorkItemV2"
	SpaceWorkItem_RestartSpaceWorkItemV2_FullMethodName       = "/api.space_work_item.v1.space_work_item/RestartSpaceWorkItemV2"
	SpaceWorkItem_CloseSpaceWorkItemV2_FullMethodName         = "/api.space_work_item.v1.space_work_item/CloseSpaceWorkItemV2"
	SpaceWorkItem_RollbackWorkItemNodeStateV2_FullMethodName  = "/api.space_work_item.v1.space_work_item/RollbackWorkItemNodeStateV2"
	SpaceWorkItem_ResumeWorkItemV2_FullMethodName             = "/api.space_work_item.v1.space_work_item/ResumeWorkItemV2"
	SpaceWorkItem_AddWorkItemComment_FullMethodName           = "/api.space_work_item.v1.space_work_item/AddWorkItemComment"
	SpaceWorkItem_UpdateWorkItemComment_FullMethodName        = "/api.space_work_item.v1.space_work_item/UpdateWorkItemComment"
	SpaceWorkItem_DeleteWorkItemComment_FullMethodName        = "/api.space_work_item.v1.space_work_item/DeleteWorkItemComment"
	SpaceWorkItem_WorkItemCommentList_FullMethodName          = "/api.space_work_item.v1.space_work_item/WorkItemCommentList"
	SpaceWorkItem_CommentEmojiAdd_FullMethodName              = "/api.space_work_item.v1.space_work_item/CommentEmojiAdd"
	SpaceWorkItem_CommentEmojiRemove_FullMethodName           = "/api.space_work_item.v1.space_work_item/CommentEmojiRemove"
	SpaceWorkItem_ChangeWorkItemType_FullMethodName           = "/api.space_work_item.v1.space_work_item/ChangeWorkItemType"
	SpaceWorkItem_Follow_FullMethodName                       = "/api.space_work_item.v1.space_work_item/Follow"
	SpaceWorkItem_ChangeWorkItemVersion_FullMethodName        = "/api.space_work_item.v1.space_work_item/ChangeWorkItemVersion"
	SpaceWorkItem_ModifyWorkItemRemark_FullMethodName         = "/api.space_work_item.v1.space_work_item/ModifyWorkItemRemark"
	SpaceWorkItem_RemindWork_FullMethodName                   = "/api.space_work_item.v1.space_work_item/RemindWork"
	SpaceWorkItem_OperationPermissions_FullMethodName         = "/api.space_work_item.v1.space_work_item/OperationPermissions"
	SpaceWorkItem_SetWorkItemFollower_FullMethodName          = "/api.space_work_item.v1.space_work_item/SetWorkItemFollower"
)

// SpaceWorkItemClient is the client API for SpaceWorkItem service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SpaceWorkItemClient interface {
	CreateWorkItemV2(ctx context.Context, in *CreateWorkItemRequestV2, opts ...grpc.CallOption) (*CreateWorkItemReplyV2, error)
	CreateWorkItemSubTask(ctx context.Context, in *CreateWorkItemSubTaskRequest, opts ...grpc.CallOption) (*CreateWorkItemSubTaskReply, error)
	GetWorkItemDetailV2(ctx context.Context, in *GetWorkItemDetailRequestV2, opts ...grpc.CallOption) (*GetWorkItemDetailReplyV2, error)
	ConfirmWorkFlowMain(ctx context.Context, in *ConfirmWorkFlowMainRequest, opts ...grpc.CallOption) (*ConfirmWorkFlowMainReply, error)
	ConfirmStateFlowMain(ctx context.Context, in *ConfirmStateFlowMainRequest, opts ...grpc.CallOption) (*ConfirmStateFlowMainReply, error)
	ConfirmSub(ctx context.Context, in *ConfirmSubRequest, opts ...grpc.CallOption) (*ConfirmSubReply, error)
	SetFlowMainDirector(ctx context.Context, in *SetFlowMainDirectorRequest, opts ...grpc.CallOption) (*SetFlowMainDirectorReply, error)
	SetSubDirector(ctx context.Context, in *SetSubDirectorRequest, opts ...grpc.CallOption) (*SetSubDirectorReply, error)
	SetWorkItemToNewWorkObjectV2(ctx context.Context, in *SetWorkItemToNewWorkObjectRequest, opts ...grpc.CallOption) (*SetWorkItemToNewWorkObjectReply, error)
	ModifyWorkItemPlanTimeV2(ctx context.Context, in *ModifyWorkItemPlanTimeRequest, opts ...grpc.CallOption) (*ModifyWorkItemPlanTimeReply, error)
	ModifyWorkItemProcessRateV2(ctx context.Context, in *ModifyWorkItemProcessRateRequest, opts ...grpc.CallOption) (*ModifyWorkItemProcessRateReply, error)
	ModifyWorkItemPriorityV2(ctx context.Context, in *ModifyWorkItemPriorityRequest, opts ...grpc.CallOption) (*ModifyWorkItemPriorityReply, error)
	ModifyWorkItemDescribeV2(ctx context.Context, in *ModifyWorkItemDescribeRequest, opts ...grpc.CallOption) (*ModifyWorkItemDescribeReply, error)
	ModifyWorkItemNameV2(ctx context.Context, in *ModifyWorkItemNameRequest, opts ...grpc.CallOption) (*ModifyWorkItemNameReply, error)
	SetWorkItemTagV2(ctx context.Context, in *SetWorkItemTagRequest, opts ...grpc.CallOption) (*SetWorkItemTagReply, error)
	SetSpaceWorkItemFileInfoV2(ctx context.Context, in *SetSpaceWorkItemFileInfoRequest, opts ...grpc.CallOption) (*SetSpaceWorkItemFileInfoReply, error)
	DelSpaceWorkItemV2(ctx context.Context, in *DelSpaceWorkItemRequest, opts ...grpc.CallOption) (*DelSpaceWorkItemReply, error)
	TerminateSpaceWorkItemV2(ctx context.Context, in *TerminateSpaceWorkItemRequest, opts ...grpc.CallOption) (*TerminateSpaceWorkItemReply, error)
	RestartSpaceWorkItemV2(ctx context.Context, in *RestartSpaceWorkItemRequest, opts ...grpc.CallOption) (*RestartSpaceWorkItemReply, error)
	CloseSpaceWorkItemV2(ctx context.Context, in *CloseSpaceWorkItemRequest, opts ...grpc.CallOption) (*CloseSpaceWorkItemReply, error)
	RollbackWorkItemNodeStateV2(ctx context.Context, in *RollbackSpaceWorkItemRequest, opts ...grpc.CallOption) (*RollbackSpaceWorkItemReply, error)
	ResumeWorkItemV2(ctx context.Context, in *ResumeSpaceWorkItemRequest, opts ...grpc.CallOption) (*ResumeSpaceWorkItemReply, error)
	AddWorkItemComment(ctx context.Context, in *AddWorkItemCommentRequest, opts ...grpc.CallOption) (*AddWorkItemCommentReply, error)
	UpdateWorkItemComment(ctx context.Context, in *UpdateWorkItemCommentRequest, opts ...grpc.CallOption) (*UpdateWorkItemCommentReply, error)
	DeleteWorkItemComment(ctx context.Context, in *DeleteWorkItemCommentRequest, opts ...grpc.CallOption) (*DeleteWorkItemCommentReply, error)
	WorkItemCommentList(ctx context.Context, in *WorkItemCommentListRequest, opts ...grpc.CallOption) (*WorkItemCommentListReply, error)
	CommentEmojiAdd(ctx context.Context, in *CommentEmojiAddRequest, opts ...grpc.CallOption) (*CommentEmojiAddReply, error)
	CommentEmojiRemove(ctx context.Context, in *CommentEmojiRemoveRequest, opts ...grpc.CallOption) (*CommentEmojiRemoveReply, error)
	ChangeWorkItemType(ctx context.Context, in *ChangeWorkItemTypeRequest, opts ...grpc.CallOption) (*ChangeWorkItemTypeReply, error)
	Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*FollowReply, error)
	ChangeWorkItemVersion(ctx context.Context, in *ChangeWorkItemVersionRequest, opts ...grpc.CallOption) (*ChangeWorkItemVersionReply, error)
	ModifyWorkItemRemark(ctx context.Context, in *ModifyWorkItemRemarkRequest, opts ...grpc.CallOption) (*ModifyWorkItemRemarkReply, error)
	RemindWork(ctx context.Context, in *RemindWorkRequest, opts ...grpc.CallOption) (*RemindWorkReply, error)
	OperationPermissions(ctx context.Context, in *OperationPermissionsRequest, opts ...grpc.CallOption) (*OperationPermissionsReply, error)
	SetWorkItemFollower(ctx context.Context, in *SetWorkItemFollowerRequest, opts ...grpc.CallOption) (*SetWorkItemFollowerReply, error)
}

type spaceWorkItemClient struct {
	cc grpc.ClientConnInterface
}

func NewSpaceWorkItemClient(cc grpc.ClientConnInterface) SpaceWorkItemClient {
	return &spaceWorkItemClient{cc}
}

func (c *spaceWorkItemClient) CreateWorkItemV2(ctx context.Context, in *CreateWorkItemRequestV2, opts ...grpc.CallOption) (*CreateWorkItemReplyV2, error) {
	out := new(CreateWorkItemReplyV2)
	err := c.cc.Invoke(ctx, SpaceWorkItem_CreateWorkItemV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) CreateWorkItemSubTask(ctx context.Context, in *CreateWorkItemSubTaskRequest, opts ...grpc.CallOption) (*CreateWorkItemSubTaskReply, error) {
	out := new(CreateWorkItemSubTaskReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_CreateWorkItemSubTask_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) GetWorkItemDetailV2(ctx context.Context, in *GetWorkItemDetailRequestV2, opts ...grpc.CallOption) (*GetWorkItemDetailReplyV2, error) {
	out := new(GetWorkItemDetailReplyV2)
	err := c.cc.Invoke(ctx, SpaceWorkItem_GetWorkItemDetailV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ConfirmWorkFlowMain(ctx context.Context, in *ConfirmWorkFlowMainRequest, opts ...grpc.CallOption) (*ConfirmWorkFlowMainReply, error) {
	out := new(ConfirmWorkFlowMainReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ConfirmWorkFlowMain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ConfirmStateFlowMain(ctx context.Context, in *ConfirmStateFlowMainRequest, opts ...grpc.CallOption) (*ConfirmStateFlowMainReply, error) {
	out := new(ConfirmStateFlowMainReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ConfirmStateFlowMain_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ConfirmSub(ctx context.Context, in *ConfirmSubRequest, opts ...grpc.CallOption) (*ConfirmSubReply, error) {
	out := new(ConfirmSubReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ConfirmSub_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) SetFlowMainDirector(ctx context.Context, in *SetFlowMainDirectorRequest, opts ...grpc.CallOption) (*SetFlowMainDirectorReply, error) {
	out := new(SetFlowMainDirectorReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_SetFlowMainDirector_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) SetSubDirector(ctx context.Context, in *SetSubDirectorRequest, opts ...grpc.CallOption) (*SetSubDirectorReply, error) {
	out := new(SetSubDirectorReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_SetSubDirector_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) SetWorkItemToNewWorkObjectV2(ctx context.Context, in *SetWorkItemToNewWorkObjectRequest, opts ...grpc.CallOption) (*SetWorkItemToNewWorkObjectReply, error) {
	out := new(SetWorkItemToNewWorkObjectReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_SetWorkItemToNewWorkObjectV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ModifyWorkItemPlanTimeV2(ctx context.Context, in *ModifyWorkItemPlanTimeRequest, opts ...grpc.CallOption) (*ModifyWorkItemPlanTimeReply, error) {
	out := new(ModifyWorkItemPlanTimeReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ModifyWorkItemPlanTimeV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ModifyWorkItemProcessRateV2(ctx context.Context, in *ModifyWorkItemProcessRateRequest, opts ...grpc.CallOption) (*ModifyWorkItemProcessRateReply, error) {
	out := new(ModifyWorkItemProcessRateReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ModifyWorkItemProcessRateV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ModifyWorkItemPriorityV2(ctx context.Context, in *ModifyWorkItemPriorityRequest, opts ...grpc.CallOption) (*ModifyWorkItemPriorityReply, error) {
	out := new(ModifyWorkItemPriorityReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ModifyWorkItemPriorityV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ModifyWorkItemDescribeV2(ctx context.Context, in *ModifyWorkItemDescribeRequest, opts ...grpc.CallOption) (*ModifyWorkItemDescribeReply, error) {
	out := new(ModifyWorkItemDescribeReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ModifyWorkItemDescribeV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ModifyWorkItemNameV2(ctx context.Context, in *ModifyWorkItemNameRequest, opts ...grpc.CallOption) (*ModifyWorkItemNameReply, error) {
	out := new(ModifyWorkItemNameReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ModifyWorkItemNameV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) SetWorkItemTagV2(ctx context.Context, in *SetWorkItemTagRequest, opts ...grpc.CallOption) (*SetWorkItemTagReply, error) {
	out := new(SetWorkItemTagReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_SetWorkItemTagV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) SetSpaceWorkItemFileInfoV2(ctx context.Context, in *SetSpaceWorkItemFileInfoRequest, opts ...grpc.CallOption) (*SetSpaceWorkItemFileInfoReply, error) {
	out := new(SetSpaceWorkItemFileInfoReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_SetSpaceWorkItemFileInfoV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) DelSpaceWorkItemV2(ctx context.Context, in *DelSpaceWorkItemRequest, opts ...grpc.CallOption) (*DelSpaceWorkItemReply, error) {
	out := new(DelSpaceWorkItemReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_DelSpaceWorkItemV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) TerminateSpaceWorkItemV2(ctx context.Context, in *TerminateSpaceWorkItemRequest, opts ...grpc.CallOption) (*TerminateSpaceWorkItemReply, error) {
	out := new(TerminateSpaceWorkItemReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_TerminateSpaceWorkItemV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) RestartSpaceWorkItemV2(ctx context.Context, in *RestartSpaceWorkItemRequest, opts ...grpc.CallOption) (*RestartSpaceWorkItemReply, error) {
	out := new(RestartSpaceWorkItemReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_RestartSpaceWorkItemV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) CloseSpaceWorkItemV2(ctx context.Context, in *CloseSpaceWorkItemRequest, opts ...grpc.CallOption) (*CloseSpaceWorkItemReply, error) {
	out := new(CloseSpaceWorkItemReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_CloseSpaceWorkItemV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) RollbackWorkItemNodeStateV2(ctx context.Context, in *RollbackSpaceWorkItemRequest, opts ...grpc.CallOption) (*RollbackSpaceWorkItemReply, error) {
	out := new(RollbackSpaceWorkItemReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_RollbackWorkItemNodeStateV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ResumeWorkItemV2(ctx context.Context, in *ResumeSpaceWorkItemRequest, opts ...grpc.CallOption) (*ResumeSpaceWorkItemReply, error) {
	out := new(ResumeSpaceWorkItemReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ResumeWorkItemV2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) AddWorkItemComment(ctx context.Context, in *AddWorkItemCommentRequest, opts ...grpc.CallOption) (*AddWorkItemCommentReply, error) {
	out := new(AddWorkItemCommentReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_AddWorkItemComment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) UpdateWorkItemComment(ctx context.Context, in *UpdateWorkItemCommentRequest, opts ...grpc.CallOption) (*UpdateWorkItemCommentReply, error) {
	out := new(UpdateWorkItemCommentReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_UpdateWorkItemComment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) DeleteWorkItemComment(ctx context.Context, in *DeleteWorkItemCommentRequest, opts ...grpc.CallOption) (*DeleteWorkItemCommentReply, error) {
	out := new(DeleteWorkItemCommentReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_DeleteWorkItemComment_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) WorkItemCommentList(ctx context.Context, in *WorkItemCommentListRequest, opts ...grpc.CallOption) (*WorkItemCommentListReply, error) {
	out := new(WorkItemCommentListReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_WorkItemCommentList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) CommentEmojiAdd(ctx context.Context, in *CommentEmojiAddRequest, opts ...grpc.CallOption) (*CommentEmojiAddReply, error) {
	out := new(CommentEmojiAddReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_CommentEmojiAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) CommentEmojiRemove(ctx context.Context, in *CommentEmojiRemoveRequest, opts ...grpc.CallOption) (*CommentEmojiRemoveReply, error) {
	out := new(CommentEmojiRemoveReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_CommentEmojiRemove_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ChangeWorkItemType(ctx context.Context, in *ChangeWorkItemTypeRequest, opts ...grpc.CallOption) (*ChangeWorkItemTypeReply, error) {
	out := new(ChangeWorkItemTypeReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ChangeWorkItemType_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*FollowReply, error) {
	out := new(FollowReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_Follow_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ChangeWorkItemVersion(ctx context.Context, in *ChangeWorkItemVersionRequest, opts ...grpc.CallOption) (*ChangeWorkItemVersionReply, error) {
	out := new(ChangeWorkItemVersionReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ChangeWorkItemVersion_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) ModifyWorkItemRemark(ctx context.Context, in *ModifyWorkItemRemarkRequest, opts ...grpc.CallOption) (*ModifyWorkItemRemarkReply, error) {
	out := new(ModifyWorkItemRemarkReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_ModifyWorkItemRemark_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) RemindWork(ctx context.Context, in *RemindWorkRequest, opts ...grpc.CallOption) (*RemindWorkReply, error) {
	out := new(RemindWorkReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_RemindWork_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) OperationPermissions(ctx context.Context, in *OperationPermissionsRequest, opts ...grpc.CallOption) (*OperationPermissionsReply, error) {
	out := new(OperationPermissionsReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_OperationPermissions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkItemClient) SetWorkItemFollower(ctx context.Context, in *SetWorkItemFollowerRequest, opts ...grpc.CallOption) (*SetWorkItemFollowerReply, error) {
	out := new(SetWorkItemFollowerReply)
	err := c.cc.Invoke(ctx, SpaceWorkItem_SetWorkItemFollower_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceWorkItemServer is the server API for SpaceWorkItem service.
// All implementations must embed UnimplementedSpaceWorkItemServer
// for forward compatibility
type SpaceWorkItemServer interface {
	CreateWorkItemV2(context.Context, *CreateWorkItemRequestV2) (*CreateWorkItemReplyV2, error)
	CreateWorkItemSubTask(context.Context, *CreateWorkItemSubTaskRequest) (*CreateWorkItemSubTaskReply, error)
	GetWorkItemDetailV2(context.Context, *GetWorkItemDetailRequestV2) (*GetWorkItemDetailReplyV2, error)
	ConfirmWorkFlowMain(context.Context, *ConfirmWorkFlowMainRequest) (*ConfirmWorkFlowMainReply, error)
	ConfirmStateFlowMain(context.Context, *ConfirmStateFlowMainRequest) (*ConfirmStateFlowMainReply, error)
	ConfirmSub(context.Context, *ConfirmSubRequest) (*ConfirmSubReply, error)
	SetFlowMainDirector(context.Context, *SetFlowMainDirectorRequest) (*SetFlowMainDirectorReply, error)
	SetSubDirector(context.Context, *SetSubDirectorRequest) (*SetSubDirectorReply, error)
	SetWorkItemToNewWorkObjectV2(context.Context, *SetWorkItemToNewWorkObjectRequest) (*SetWorkItemToNewWorkObjectReply, error)
	ModifyWorkItemPlanTimeV2(context.Context, *ModifyWorkItemPlanTimeRequest) (*ModifyWorkItemPlanTimeReply, error)
	ModifyWorkItemProcessRateV2(context.Context, *ModifyWorkItemProcessRateRequest) (*ModifyWorkItemProcessRateReply, error)
	ModifyWorkItemPriorityV2(context.Context, *ModifyWorkItemPriorityRequest) (*ModifyWorkItemPriorityReply, error)
	ModifyWorkItemDescribeV2(context.Context, *ModifyWorkItemDescribeRequest) (*ModifyWorkItemDescribeReply, error)
	ModifyWorkItemNameV2(context.Context, *ModifyWorkItemNameRequest) (*ModifyWorkItemNameReply, error)
	SetWorkItemTagV2(context.Context, *SetWorkItemTagRequest) (*SetWorkItemTagReply, error)
	SetSpaceWorkItemFileInfoV2(context.Context, *SetSpaceWorkItemFileInfoRequest) (*SetSpaceWorkItemFileInfoReply, error)
	DelSpaceWorkItemV2(context.Context, *DelSpaceWorkItemRequest) (*DelSpaceWorkItemReply, error)
	TerminateSpaceWorkItemV2(context.Context, *TerminateSpaceWorkItemRequest) (*TerminateSpaceWorkItemReply, error)
	RestartSpaceWorkItemV2(context.Context, *RestartSpaceWorkItemRequest) (*RestartSpaceWorkItemReply, error)
	CloseSpaceWorkItemV2(context.Context, *CloseSpaceWorkItemRequest) (*CloseSpaceWorkItemReply, error)
	RollbackWorkItemNodeStateV2(context.Context, *RollbackSpaceWorkItemRequest) (*RollbackSpaceWorkItemReply, error)
	ResumeWorkItemV2(context.Context, *ResumeSpaceWorkItemRequest) (*ResumeSpaceWorkItemReply, error)
	AddWorkItemComment(context.Context, *AddWorkItemCommentRequest) (*AddWorkItemCommentReply, error)
	UpdateWorkItemComment(context.Context, *UpdateWorkItemCommentRequest) (*UpdateWorkItemCommentReply, error)
	DeleteWorkItemComment(context.Context, *DeleteWorkItemCommentRequest) (*DeleteWorkItemCommentReply, error)
	WorkItemCommentList(context.Context, *WorkItemCommentListRequest) (*WorkItemCommentListReply, error)
	CommentEmojiAdd(context.Context, *CommentEmojiAddRequest) (*CommentEmojiAddReply, error)
	CommentEmojiRemove(context.Context, *CommentEmojiRemoveRequest) (*CommentEmojiRemoveReply, error)
	ChangeWorkItemType(context.Context, *ChangeWorkItemTypeRequest) (*ChangeWorkItemTypeReply, error)
	Follow(context.Context, *FollowRequest) (*FollowReply, error)
	ChangeWorkItemVersion(context.Context, *ChangeWorkItemVersionRequest) (*ChangeWorkItemVersionReply, error)
	ModifyWorkItemRemark(context.Context, *ModifyWorkItemRemarkRequest) (*ModifyWorkItemRemarkReply, error)
	RemindWork(context.Context, *RemindWorkRequest) (*RemindWorkReply, error)
	OperationPermissions(context.Context, *OperationPermissionsRequest) (*OperationPermissionsReply, error)
	SetWorkItemFollower(context.Context, *SetWorkItemFollowerRequest) (*SetWorkItemFollowerReply, error)
	mustEmbedUnimplementedSpaceWorkItemServer()
}

// UnimplementedSpaceWorkItemServer must be embedded to have forward compatible implementations.
type UnimplementedSpaceWorkItemServer struct {
}

func (UnimplementedSpaceWorkItemServer) CreateWorkItemV2(context.Context, *CreateWorkItemRequestV2) (*CreateWorkItemReplyV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkItemV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) CreateWorkItemSubTask(context.Context, *CreateWorkItemSubTaskRequest) (*CreateWorkItemSubTaskReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkItemSubTask not implemented")
}
func (UnimplementedSpaceWorkItemServer) GetWorkItemDetailV2(context.Context, *GetWorkItemDetailRequestV2) (*GetWorkItemDetailReplyV2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkItemDetailV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ConfirmWorkFlowMain(context.Context, *ConfirmWorkFlowMainRequest) (*ConfirmWorkFlowMainReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmWorkFlowMain not implemented")
}
func (UnimplementedSpaceWorkItemServer) ConfirmStateFlowMain(context.Context, *ConfirmStateFlowMainRequest) (*ConfirmStateFlowMainReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmStateFlowMain not implemented")
}
func (UnimplementedSpaceWorkItemServer) ConfirmSub(context.Context, *ConfirmSubRequest) (*ConfirmSubReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmSub not implemented")
}
func (UnimplementedSpaceWorkItemServer) SetFlowMainDirector(context.Context, *SetFlowMainDirectorRequest) (*SetFlowMainDirectorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetFlowMainDirector not implemented")
}
func (UnimplementedSpaceWorkItemServer) SetSubDirector(context.Context, *SetSubDirectorRequest) (*SetSubDirectorReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSubDirector not implemented")
}
func (UnimplementedSpaceWorkItemServer) SetWorkItemToNewWorkObjectV2(context.Context, *SetWorkItemToNewWorkObjectRequest) (*SetWorkItemToNewWorkObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWorkItemToNewWorkObjectV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ModifyWorkItemPlanTimeV2(context.Context, *ModifyWorkItemPlanTimeRequest) (*ModifyWorkItemPlanTimeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWorkItemPlanTimeV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ModifyWorkItemProcessRateV2(context.Context, *ModifyWorkItemProcessRateRequest) (*ModifyWorkItemProcessRateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWorkItemProcessRateV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ModifyWorkItemPriorityV2(context.Context, *ModifyWorkItemPriorityRequest) (*ModifyWorkItemPriorityReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWorkItemPriorityV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ModifyWorkItemDescribeV2(context.Context, *ModifyWorkItemDescribeRequest) (*ModifyWorkItemDescribeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWorkItemDescribeV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ModifyWorkItemNameV2(context.Context, *ModifyWorkItemNameRequest) (*ModifyWorkItemNameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWorkItemNameV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) SetWorkItemTagV2(context.Context, *SetWorkItemTagRequest) (*SetWorkItemTagReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWorkItemTagV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) SetSpaceWorkItemFileInfoV2(context.Context, *SetSpaceWorkItemFileInfoRequest) (*SetSpaceWorkItemFileInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceWorkItemFileInfoV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) DelSpaceWorkItemV2(context.Context, *DelSpaceWorkItemRequest) (*DelSpaceWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelSpaceWorkItemV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) TerminateSpaceWorkItemV2(context.Context, *TerminateSpaceWorkItemRequest) (*TerminateSpaceWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateSpaceWorkItemV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) RestartSpaceWorkItemV2(context.Context, *RestartSpaceWorkItemRequest) (*RestartSpaceWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartSpaceWorkItemV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) CloseSpaceWorkItemV2(context.Context, *CloseSpaceWorkItemRequest) (*CloseSpaceWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseSpaceWorkItemV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) RollbackWorkItemNodeStateV2(context.Context, *RollbackSpaceWorkItemRequest) (*RollbackSpaceWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackWorkItemNodeStateV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) ResumeWorkItemV2(context.Context, *ResumeSpaceWorkItemRequest) (*ResumeSpaceWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeWorkItemV2 not implemented")
}
func (UnimplementedSpaceWorkItemServer) AddWorkItemComment(context.Context, *AddWorkItemCommentRequest) (*AddWorkItemCommentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddWorkItemComment not implemented")
}
func (UnimplementedSpaceWorkItemServer) UpdateWorkItemComment(context.Context, *UpdateWorkItemCommentRequest) (*UpdateWorkItemCommentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkItemComment not implemented")
}
func (UnimplementedSpaceWorkItemServer) DeleteWorkItemComment(context.Context, *DeleteWorkItemCommentRequest) (*DeleteWorkItemCommentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkItemComment not implemented")
}
func (UnimplementedSpaceWorkItemServer) WorkItemCommentList(context.Context, *WorkItemCommentListRequest) (*WorkItemCommentListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkItemCommentList not implemented")
}
func (UnimplementedSpaceWorkItemServer) CommentEmojiAdd(context.Context, *CommentEmojiAddRequest) (*CommentEmojiAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentEmojiAdd not implemented")
}
func (UnimplementedSpaceWorkItemServer) CommentEmojiRemove(context.Context, *CommentEmojiRemoveRequest) (*CommentEmojiRemoveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentEmojiRemove not implemented")
}
func (UnimplementedSpaceWorkItemServer) ChangeWorkItemType(context.Context, *ChangeWorkItemTypeRequest) (*ChangeWorkItemTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeWorkItemType not implemented")
}
func (UnimplementedSpaceWorkItemServer) Follow(context.Context, *FollowRequest) (*FollowReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Follow not implemented")
}
func (UnimplementedSpaceWorkItemServer) ChangeWorkItemVersion(context.Context, *ChangeWorkItemVersionRequest) (*ChangeWorkItemVersionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeWorkItemVersion not implemented")
}
func (UnimplementedSpaceWorkItemServer) ModifyWorkItemRemark(context.Context, *ModifyWorkItemRemarkRequest) (*ModifyWorkItemRemarkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyWorkItemRemark not implemented")
}
func (UnimplementedSpaceWorkItemServer) RemindWork(context.Context, *RemindWorkRequest) (*RemindWorkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemindWork not implemented")
}
func (UnimplementedSpaceWorkItemServer) OperationPermissions(context.Context, *OperationPermissionsRequest) (*OperationPermissionsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OperationPermissions not implemented")
}
func (UnimplementedSpaceWorkItemServer) SetWorkItemFollower(context.Context, *SetWorkItemFollowerRequest) (*SetWorkItemFollowerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWorkItemFollower not implemented")
}
func (UnimplementedSpaceWorkItemServer) mustEmbedUnimplementedSpaceWorkItemServer() {}

// UnsafeSpaceWorkItemServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SpaceWorkItemServer will
// result in compilation errors.
type UnsafeSpaceWorkItemServer interface {
	mustEmbedUnimplementedSpaceWorkItemServer()
}

func RegisterSpaceWorkItemServer(s grpc.ServiceRegistrar, srv SpaceWorkItemServer) {
	s.RegisterService(&SpaceWorkItem_ServiceDesc, srv)
}

func _SpaceWorkItem_CreateWorkItemV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkItemRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).CreateWorkItemV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_CreateWorkItemV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).CreateWorkItemV2(ctx, req.(*CreateWorkItemRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_CreateWorkItemSubTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkItemSubTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).CreateWorkItemSubTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_CreateWorkItemSubTask_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).CreateWorkItemSubTask(ctx, req.(*CreateWorkItemSubTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_GetWorkItemDetailV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkItemDetailRequestV2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).GetWorkItemDetailV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_GetWorkItemDetailV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).GetWorkItemDetailV2(ctx, req.(*GetWorkItemDetailRequestV2))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ConfirmWorkFlowMain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmWorkFlowMainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ConfirmWorkFlowMain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ConfirmWorkFlowMain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ConfirmWorkFlowMain(ctx, req.(*ConfirmWorkFlowMainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ConfirmStateFlowMain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmStateFlowMainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ConfirmStateFlowMain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ConfirmStateFlowMain_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ConfirmStateFlowMain(ctx, req.(*ConfirmStateFlowMainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ConfirmSub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmSubRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ConfirmSub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ConfirmSub_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ConfirmSub(ctx, req.(*ConfirmSubRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_SetFlowMainDirector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetFlowMainDirectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).SetFlowMainDirector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_SetFlowMainDirector_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).SetFlowMainDirector(ctx, req.(*SetFlowMainDirectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_SetSubDirector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSubDirectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).SetSubDirector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_SetSubDirector_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).SetSubDirector(ctx, req.(*SetSubDirectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_SetWorkItemToNewWorkObjectV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkItemToNewWorkObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).SetWorkItemToNewWorkObjectV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_SetWorkItemToNewWorkObjectV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).SetWorkItemToNewWorkObjectV2(ctx, req.(*SetWorkItemToNewWorkObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ModifyWorkItemPlanTimeV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWorkItemPlanTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ModifyWorkItemPlanTimeV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ModifyWorkItemPlanTimeV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ModifyWorkItemPlanTimeV2(ctx, req.(*ModifyWorkItemPlanTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ModifyWorkItemProcessRateV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWorkItemProcessRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ModifyWorkItemProcessRateV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ModifyWorkItemProcessRateV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ModifyWorkItemProcessRateV2(ctx, req.(*ModifyWorkItemProcessRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ModifyWorkItemPriorityV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWorkItemPriorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ModifyWorkItemPriorityV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ModifyWorkItemPriorityV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ModifyWorkItemPriorityV2(ctx, req.(*ModifyWorkItemPriorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ModifyWorkItemDescribeV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWorkItemDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ModifyWorkItemDescribeV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ModifyWorkItemDescribeV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ModifyWorkItemDescribeV2(ctx, req.(*ModifyWorkItemDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ModifyWorkItemNameV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWorkItemNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ModifyWorkItemNameV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ModifyWorkItemNameV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ModifyWorkItemNameV2(ctx, req.(*ModifyWorkItemNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_SetWorkItemTagV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkItemTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).SetWorkItemTagV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_SetWorkItemTagV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).SetWorkItemTagV2(ctx, req.(*SetWorkItemTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_SetSpaceWorkItemFileInfoV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpaceWorkItemFileInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).SetSpaceWorkItemFileInfoV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_SetSpaceWorkItemFileInfoV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).SetSpaceWorkItemFileInfoV2(ctx, req.(*SetSpaceWorkItemFileInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_DelSpaceWorkItemV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelSpaceWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).DelSpaceWorkItemV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_DelSpaceWorkItemV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).DelSpaceWorkItemV2(ctx, req.(*DelSpaceWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_TerminateSpaceWorkItemV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateSpaceWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).TerminateSpaceWorkItemV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_TerminateSpaceWorkItemV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).TerminateSpaceWorkItemV2(ctx, req.(*TerminateSpaceWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_RestartSpaceWorkItemV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestartSpaceWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).RestartSpaceWorkItemV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_RestartSpaceWorkItemV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).RestartSpaceWorkItemV2(ctx, req.(*RestartSpaceWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_CloseSpaceWorkItemV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseSpaceWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).CloseSpaceWorkItemV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_CloseSpaceWorkItemV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).CloseSpaceWorkItemV2(ctx, req.(*CloseSpaceWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_RollbackWorkItemNodeStateV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackSpaceWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).RollbackWorkItemNodeStateV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_RollbackWorkItemNodeStateV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).RollbackWorkItemNodeStateV2(ctx, req.(*RollbackSpaceWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ResumeWorkItemV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeSpaceWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ResumeWorkItemV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ResumeWorkItemV2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ResumeWorkItemV2(ctx, req.(*ResumeSpaceWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_AddWorkItemComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddWorkItemCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).AddWorkItemComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_AddWorkItemComment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).AddWorkItemComment(ctx, req.(*AddWorkItemCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_UpdateWorkItemComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkItemCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).UpdateWorkItemComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_UpdateWorkItemComment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).UpdateWorkItemComment(ctx, req.(*UpdateWorkItemCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_DeleteWorkItemComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWorkItemCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).DeleteWorkItemComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_DeleteWorkItemComment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).DeleteWorkItemComment(ctx, req.(*DeleteWorkItemCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_WorkItemCommentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkItemCommentListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).WorkItemCommentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_WorkItemCommentList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).WorkItemCommentList(ctx, req.(*WorkItemCommentListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_CommentEmojiAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentEmojiAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).CommentEmojiAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_CommentEmojiAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).CommentEmojiAdd(ctx, req.(*CommentEmojiAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_CommentEmojiRemove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentEmojiRemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).CommentEmojiRemove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_CommentEmojiRemove_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).CommentEmojiRemove(ctx, req.(*CommentEmojiRemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ChangeWorkItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeWorkItemTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ChangeWorkItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ChangeWorkItemType_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ChangeWorkItemType(ctx, req.(*ChangeWorkItemTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_Follow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).Follow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_Follow_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).Follow(ctx, req.(*FollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ChangeWorkItemVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeWorkItemVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ChangeWorkItemVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ChangeWorkItemVersion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ChangeWorkItemVersion(ctx, req.(*ChangeWorkItemVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_ModifyWorkItemRemark_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyWorkItemRemarkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).ModifyWorkItemRemark(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_ModifyWorkItemRemark_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).ModifyWorkItemRemark(ctx, req.(*ModifyWorkItemRemarkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_RemindWork_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemindWorkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).RemindWork(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_RemindWork_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).RemindWork(ctx, req.(*RemindWorkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_OperationPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OperationPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).OperationPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_OperationPermissions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).OperationPermissions(ctx, req.(*OperationPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkItem_SetWorkItemFollower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkItemFollowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkItemServer).SetWorkItemFollower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkItem_SetWorkItemFollower_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkItemServer).SetWorkItemFollower(ctx, req.(*SetWorkItemFollowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SpaceWorkItem_ServiceDesc is the grpc.ServiceDesc for SpaceWorkItem service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SpaceWorkItem_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.space_work_item.v1.space_work_item",
	HandlerType: (*SpaceWorkItemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkItemV2",
			Handler:    _SpaceWorkItem_CreateWorkItemV2_Handler,
		},
		{
			MethodName: "CreateWorkItemSubTask",
			Handler:    _SpaceWorkItem_CreateWorkItemSubTask_Handler,
		},
		{
			MethodName: "GetWorkItemDetailV2",
			Handler:    _SpaceWorkItem_GetWorkItemDetailV2_Handler,
		},
		{
			MethodName: "ConfirmWorkFlowMain",
			Handler:    _SpaceWorkItem_ConfirmWorkFlowMain_Handler,
		},
		{
			MethodName: "ConfirmStateFlowMain",
			Handler:    _SpaceWorkItem_ConfirmStateFlowMain_Handler,
		},
		{
			MethodName: "ConfirmSub",
			Handler:    _SpaceWorkItem_ConfirmSub_Handler,
		},
		{
			MethodName: "SetFlowMainDirector",
			Handler:    _SpaceWorkItem_SetFlowMainDirector_Handler,
		},
		{
			MethodName: "SetSubDirector",
			Handler:    _SpaceWorkItem_SetSubDirector_Handler,
		},
		{
			MethodName: "SetWorkItemToNewWorkObjectV2",
			Handler:    _SpaceWorkItem_SetWorkItemToNewWorkObjectV2_Handler,
		},
		{
			MethodName: "ModifyWorkItemPlanTimeV2",
			Handler:    _SpaceWorkItem_ModifyWorkItemPlanTimeV2_Handler,
		},
		{
			MethodName: "ModifyWorkItemProcessRateV2",
			Handler:    _SpaceWorkItem_ModifyWorkItemProcessRateV2_Handler,
		},
		{
			MethodName: "ModifyWorkItemPriorityV2",
			Handler:    _SpaceWorkItem_ModifyWorkItemPriorityV2_Handler,
		},
		{
			MethodName: "ModifyWorkItemDescribeV2",
			Handler:    _SpaceWorkItem_ModifyWorkItemDescribeV2_Handler,
		},
		{
			MethodName: "ModifyWorkItemNameV2",
			Handler:    _SpaceWorkItem_ModifyWorkItemNameV2_Handler,
		},
		{
			MethodName: "SetWorkItemTagV2",
			Handler:    _SpaceWorkItem_SetWorkItemTagV2_Handler,
		},
		{
			MethodName: "SetSpaceWorkItemFileInfoV2",
			Handler:    _SpaceWorkItem_SetSpaceWorkItemFileInfoV2_Handler,
		},
		{
			MethodName: "DelSpaceWorkItemV2",
			Handler:    _SpaceWorkItem_DelSpaceWorkItemV2_Handler,
		},
		{
			MethodName: "TerminateSpaceWorkItemV2",
			Handler:    _SpaceWorkItem_TerminateSpaceWorkItemV2_Handler,
		},
		{
			MethodName: "RestartSpaceWorkItemV2",
			Handler:    _SpaceWorkItem_RestartSpaceWorkItemV2_Handler,
		},
		{
			MethodName: "CloseSpaceWorkItemV2",
			Handler:    _SpaceWorkItem_CloseSpaceWorkItemV2_Handler,
		},
		{
			MethodName: "RollbackWorkItemNodeStateV2",
			Handler:    _SpaceWorkItem_RollbackWorkItemNodeStateV2_Handler,
		},
		{
			MethodName: "ResumeWorkItemV2",
			Handler:    _SpaceWorkItem_ResumeWorkItemV2_Handler,
		},
		{
			MethodName: "AddWorkItemComment",
			Handler:    _SpaceWorkItem_AddWorkItemComment_Handler,
		},
		{
			MethodName: "UpdateWorkItemComment",
			Handler:    _SpaceWorkItem_UpdateWorkItemComment_Handler,
		},
		{
			MethodName: "DeleteWorkItemComment",
			Handler:    _SpaceWorkItem_DeleteWorkItemComment_Handler,
		},
		{
			MethodName: "WorkItemCommentList",
			Handler:    _SpaceWorkItem_WorkItemCommentList_Handler,
		},
		{
			MethodName: "CommentEmojiAdd",
			Handler:    _SpaceWorkItem_CommentEmojiAdd_Handler,
		},
		{
			MethodName: "CommentEmojiRemove",
			Handler:    _SpaceWorkItem_CommentEmojiRemove_Handler,
		},
		{
			MethodName: "ChangeWorkItemType",
			Handler:    _SpaceWorkItem_ChangeWorkItemType_Handler,
		},
		{
			MethodName: "Follow",
			Handler:    _SpaceWorkItem_Follow_Handler,
		},
		{
			MethodName: "ChangeWorkItemVersion",
			Handler:    _SpaceWorkItem_ChangeWorkItemVersion_Handler,
		},
		{
			MethodName: "ModifyWorkItemRemark",
			Handler:    _SpaceWorkItem_ModifyWorkItemRemark_Handler,
		},
		{
			MethodName: "RemindWork",
			Handler:    _SpaceWorkItem_RemindWork_Handler,
		},
		{
			MethodName: "OperationPermissions",
			Handler:    _SpaceWorkItem_OperationPermissions_Handler,
		},
		{
			MethodName: "SetWorkItemFollower",
			Handler:    _SpaceWorkItem_SetWorkItemFollower_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "space_work_item/v1/space_work_item.proto",
}
