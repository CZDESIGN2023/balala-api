// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: space/v1/space.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Space_CreateSpace_FullMethodName                     = "/api.space.v1.space/CreateSpace"
	Space_SetSpaceDescribe_FullMethodName                = "/api.space.v1.space/SetSpaceDescribe"
	Space_SetSpaceBaseInfo_FullMethodName                = "/api.space.v1.space/SetSpaceBaseInfo"
	Space_GetSpaceInfo_FullMethodName                    = "/api.space.v1.space/GetSpaceInfo"
	Space_SpaceList_FullMethodName                       = "/api.space.v1.space/SpaceList"
	Space_DelSpace_FullMethodName                        = "/api.space.v1.space/DelSpace"
	Space_QuitMySpace_FullMethodName                     = "/api.space.v1.space/QuitMySpace"
	Space_TransferSpaceOwnership_FullMethodName          = "/api.space.v1.space/TransferSpaceOwnership"
	Space_SetNotify_FullMethodName                       = "/api.space.v1.space/SetNotify"
	Space_CreateMemberCategory_FullMethodName            = "/api.space.v1.space/CreateMemberCategory"
	Space_ModifyMemberCategoryInfo_FullMethodName        = "/api.space.v1.space/ModifyMemberCategoryInfo"
	Space_SetMemberToMemberCategory_FullMethodName       = "/api.space.v1.space/SetMemberToMemberCategory"
	Space_SetWorkingDay_FullMethodName                   = "/api.space.v1.space/SetWorkingDay"
	Space_SetCommentDeletable_FullMethodName             = "/api.space.v1.space/SetCommentDeletable"
	Space_GetMemberCategoryDetailList_FullMethodName     = "/api.space.v1.space/GetMemberCategoryDetailList"
	Space_DeleteMemberCategory_FullMethodName            = "/api.space.v1.space/DeleteMemberCategory"
	Space_SetName_FullMethodName                         = "/api.space.v1.space/SetName"
	Space_SearchWorkItem_FullMethodName                  = "/api.space.v1.space/SearchWorkItem"
	Space_SortWorkItemType_FullMethodName                = "/api.space.v1.space/SortWorkItemType"
	Space_GetWorkItemTypes_FullMethodName                = "/api.space.v1.space/GetWorkItemTypes"
	Space_GetTempConfig_FullMethodName                   = "/api.space.v1.space/GetTempConfig"
	Space_SetTempConfig_FullMethodName                   = "/api.space.v1.space/SetTempConfig"
	Space_DelTempConfig_FullMethodName                   = "/api.space.v1.space/DelTempConfig"
	Space_Copy_FullMethodName                            = "/api.space.v1.space/Copy"
	Space_SetCommentDeletableWhenArchived_FullMethodName = "/api.space.v1.space/SetCommentDeletableWhenArchived"
	Space_SetCommentShowPos_FullMethodName               = "/api.space.v1.space/SetCommentShowPos"
)

// SpaceClient is the client API for Space service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SpaceClient interface {
	// 在space後初始化使用 (長連接模擬短連接請求)
	CreateSpace(ctx context.Context, in *CreateSpaceRequest, opts ...grpc.CallOption) (*CreateSpaceReply, error)
	SetSpaceDescribe(ctx context.Context, in *SetSpaceDescribeRequest, opts ...grpc.CallOption) (*SetSpaceDescribeReply, error)
	SetSpaceBaseInfo(ctx context.Context, in *SetSpaceBaseInfoRequest, opts ...grpc.CallOption) (*SetSpaceBaseInfoReply, error)
	GetSpaceInfo(ctx context.Context, in *GetSpaceInfoRequest, opts ...grpc.CallOption) (*GetSpaceInfoReply, error)
	SpaceList(ctx context.Context, in *SpaceListRequest, opts ...grpc.CallOption) (*SpaceListReply, error)
	DelSpace(ctx context.Context, in *DelSpaceRequest, opts ...grpc.CallOption) (*DelSpaceReply, error)
	QuitMySpace(ctx context.Context, in *QuitMySpaceRequest, opts ...grpc.CallOption) (*QuitMySpaceReply, error)
	TransferSpaceOwnership(ctx context.Context, in *TransferSpaceOwnershipRequest, opts ...grpc.CallOption) (*TransferSpaceOwnershipReply, error)
	SetNotify(ctx context.Context, in *SetNotifyRequest, opts ...grpc.CallOption) (*SetNotifyReply, error)
	CreateMemberCategory(ctx context.Context, in *CreateMemberCategoryRequest, opts ...grpc.CallOption) (*CreateMemberCategoryReply, error)
	ModifyMemberCategoryInfo(ctx context.Context, in *ModifyMemberCategoryRequest, opts ...grpc.CallOption) (*ModifyMemberCategoryReply, error)
	SetMemberToMemberCategory(ctx context.Context, in *SetMemberToMemberCategoryRequest, opts ...grpc.CallOption) (*SetMemberToMemberCategoryReply, error)
	SetWorkingDay(ctx context.Context, in *SetWorkingDayRequest, opts ...grpc.CallOption) (*SetWorkingDayReply, error)
	SetCommentDeletable(ctx context.Context, in *SetCommentDeletableRequest, opts ...grpc.CallOption) (*SetCommentDeletableReply, error)
	GetMemberCategoryDetailList(ctx context.Context, in *GetMemberCategoryDetailListRequest, opts ...grpc.CallOption) (*GetMemberCategoryDetailListReply, error)
	DeleteMemberCategory(ctx context.Context, in *DeleteMemberCategoryRequest, opts ...grpc.CallOption) (*DeleteMemberCategoryReply, error)
	SetName(ctx context.Context, in *SetNameRequest, opts ...grpc.CallOption) (*SetNameReply, error)
	SearchWorkItem(ctx context.Context, in *SearchWorkItemRequest, opts ...grpc.CallOption) (*SearchWorkItemReply, error)
	SortWorkItemType(ctx context.Context, in *SortWorkItemTypeRequest, opts ...grpc.CallOption) (*SortWorkItemTypeReply, error)
	GetWorkItemTypes(ctx context.Context, in *GetWorkItemTypesRequest, opts ...grpc.CallOption) (*GetWorkItemTypesReply, error)
	GetTempConfig(ctx context.Context, in *GetTempConfigRequest, opts ...grpc.CallOption) (*GetTempConfigReply, error)
	SetTempConfig(ctx context.Context, in *SetTempConfigRequest, opts ...grpc.CallOption) (*SetTempConfigReply, error)
	DelTempConfig(ctx context.Context, in *DelTempConfigRequest, opts ...grpc.CallOption) (*DelTempConfigReply, error)
	Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyReply, error)
	SetCommentDeletableWhenArchived(ctx context.Context, in *SetCommentDeletableWhenArchivedRequest, opts ...grpc.CallOption) (*SetCommentDeletableWhenArchivedReply, error)
	SetCommentShowPos(ctx context.Context, in *SetCommentShowPosRequest, opts ...grpc.CallOption) (*SetCommentShowPosReply, error)
}

type spaceClient struct {
	cc grpc.ClientConnInterface
}

func NewSpaceClient(cc grpc.ClientConnInterface) SpaceClient {
	return &spaceClient{cc}
}

func (c *spaceClient) CreateSpace(ctx context.Context, in *CreateSpaceRequest, opts ...grpc.CallOption) (*CreateSpaceReply, error) {
	out := new(CreateSpaceReply)
	err := c.cc.Invoke(ctx, Space_CreateSpace_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetSpaceDescribe(ctx context.Context, in *SetSpaceDescribeRequest, opts ...grpc.CallOption) (*SetSpaceDescribeReply, error) {
	out := new(SetSpaceDescribeReply)
	err := c.cc.Invoke(ctx, Space_SetSpaceDescribe_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetSpaceBaseInfo(ctx context.Context, in *SetSpaceBaseInfoRequest, opts ...grpc.CallOption) (*SetSpaceBaseInfoReply, error) {
	out := new(SetSpaceBaseInfoReply)
	err := c.cc.Invoke(ctx, Space_SetSpaceBaseInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) GetSpaceInfo(ctx context.Context, in *GetSpaceInfoRequest, opts ...grpc.CallOption) (*GetSpaceInfoReply, error) {
	out := new(GetSpaceInfoReply)
	err := c.cc.Invoke(ctx, Space_GetSpaceInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SpaceList(ctx context.Context, in *SpaceListRequest, opts ...grpc.CallOption) (*SpaceListReply, error) {
	out := new(SpaceListReply)
	err := c.cc.Invoke(ctx, Space_SpaceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) DelSpace(ctx context.Context, in *DelSpaceRequest, opts ...grpc.CallOption) (*DelSpaceReply, error) {
	out := new(DelSpaceReply)
	err := c.cc.Invoke(ctx, Space_DelSpace_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) QuitMySpace(ctx context.Context, in *QuitMySpaceRequest, opts ...grpc.CallOption) (*QuitMySpaceReply, error) {
	out := new(QuitMySpaceReply)
	err := c.cc.Invoke(ctx, Space_QuitMySpace_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) TransferSpaceOwnership(ctx context.Context, in *TransferSpaceOwnershipRequest, opts ...grpc.CallOption) (*TransferSpaceOwnershipReply, error) {
	out := new(TransferSpaceOwnershipReply)
	err := c.cc.Invoke(ctx, Space_TransferSpaceOwnership_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetNotify(ctx context.Context, in *SetNotifyRequest, opts ...grpc.CallOption) (*SetNotifyReply, error) {
	out := new(SetNotifyReply)
	err := c.cc.Invoke(ctx, Space_SetNotify_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) CreateMemberCategory(ctx context.Context, in *CreateMemberCategoryRequest, opts ...grpc.CallOption) (*CreateMemberCategoryReply, error) {
	out := new(CreateMemberCategoryReply)
	err := c.cc.Invoke(ctx, Space_CreateMemberCategory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) ModifyMemberCategoryInfo(ctx context.Context, in *ModifyMemberCategoryRequest, opts ...grpc.CallOption) (*ModifyMemberCategoryReply, error) {
	out := new(ModifyMemberCategoryReply)
	err := c.cc.Invoke(ctx, Space_ModifyMemberCategoryInfo_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetMemberToMemberCategory(ctx context.Context, in *SetMemberToMemberCategoryRequest, opts ...grpc.CallOption) (*SetMemberToMemberCategoryReply, error) {
	out := new(SetMemberToMemberCategoryReply)
	err := c.cc.Invoke(ctx, Space_SetMemberToMemberCategory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetWorkingDay(ctx context.Context, in *SetWorkingDayRequest, opts ...grpc.CallOption) (*SetWorkingDayReply, error) {
	out := new(SetWorkingDayReply)
	err := c.cc.Invoke(ctx, Space_SetWorkingDay_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetCommentDeletable(ctx context.Context, in *SetCommentDeletableRequest, opts ...grpc.CallOption) (*SetCommentDeletableReply, error) {
	out := new(SetCommentDeletableReply)
	err := c.cc.Invoke(ctx, Space_SetCommentDeletable_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) GetMemberCategoryDetailList(ctx context.Context, in *GetMemberCategoryDetailListRequest, opts ...grpc.CallOption) (*GetMemberCategoryDetailListReply, error) {
	out := new(GetMemberCategoryDetailListReply)
	err := c.cc.Invoke(ctx, Space_GetMemberCategoryDetailList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) DeleteMemberCategory(ctx context.Context, in *DeleteMemberCategoryRequest, opts ...grpc.CallOption) (*DeleteMemberCategoryReply, error) {
	out := new(DeleteMemberCategoryReply)
	err := c.cc.Invoke(ctx, Space_DeleteMemberCategory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetName(ctx context.Context, in *SetNameRequest, opts ...grpc.CallOption) (*SetNameReply, error) {
	out := new(SetNameReply)
	err := c.cc.Invoke(ctx, Space_SetName_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SearchWorkItem(ctx context.Context, in *SearchWorkItemRequest, opts ...grpc.CallOption) (*SearchWorkItemReply, error) {
	out := new(SearchWorkItemReply)
	err := c.cc.Invoke(ctx, Space_SearchWorkItem_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SortWorkItemType(ctx context.Context, in *SortWorkItemTypeRequest, opts ...grpc.CallOption) (*SortWorkItemTypeReply, error) {
	out := new(SortWorkItemTypeReply)
	err := c.cc.Invoke(ctx, Space_SortWorkItemType_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) GetWorkItemTypes(ctx context.Context, in *GetWorkItemTypesRequest, opts ...grpc.CallOption) (*GetWorkItemTypesReply, error) {
	out := new(GetWorkItemTypesReply)
	err := c.cc.Invoke(ctx, Space_GetWorkItemTypes_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) GetTempConfig(ctx context.Context, in *GetTempConfigRequest, opts ...grpc.CallOption) (*GetTempConfigReply, error) {
	out := new(GetTempConfigReply)
	err := c.cc.Invoke(ctx, Space_GetTempConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetTempConfig(ctx context.Context, in *SetTempConfigRequest, opts ...grpc.CallOption) (*SetTempConfigReply, error) {
	out := new(SetTempConfigReply)
	err := c.cc.Invoke(ctx, Space_SetTempConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) DelTempConfig(ctx context.Context, in *DelTempConfigRequest, opts ...grpc.CallOption) (*DelTempConfigReply, error) {
	out := new(DelTempConfigReply)
	err := c.cc.Invoke(ctx, Space_DelTempConfig_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) Copy(ctx context.Context, in *CopyRequest, opts ...grpc.CallOption) (*CopyReply, error) {
	out := new(CopyReply)
	err := c.cc.Invoke(ctx, Space_Copy_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetCommentDeletableWhenArchived(ctx context.Context, in *SetCommentDeletableWhenArchivedRequest, opts ...grpc.CallOption) (*SetCommentDeletableWhenArchivedReply, error) {
	out := new(SetCommentDeletableWhenArchivedReply)
	err := c.cc.Invoke(ctx, Space_SetCommentDeletableWhenArchived_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceClient) SetCommentShowPos(ctx context.Context, in *SetCommentShowPosRequest, opts ...grpc.CallOption) (*SetCommentShowPosReply, error) {
	out := new(SetCommentShowPosReply)
	err := c.cc.Invoke(ctx, Space_SetCommentShowPos_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceServer is the server API for Space service.
// All implementations must embed UnimplementedSpaceServer
// for forward compatibility
type SpaceServer interface {
	// 在space後初始化使用 (長連接模擬短連接請求)
	CreateSpace(context.Context, *CreateSpaceRequest) (*CreateSpaceReply, error)
	SetSpaceDescribe(context.Context, *SetSpaceDescribeRequest) (*SetSpaceDescribeReply, error)
	SetSpaceBaseInfo(context.Context, *SetSpaceBaseInfoRequest) (*SetSpaceBaseInfoReply, error)
	GetSpaceInfo(context.Context, *GetSpaceInfoRequest) (*GetSpaceInfoReply, error)
	SpaceList(context.Context, *SpaceListRequest) (*SpaceListReply, error)
	DelSpace(context.Context, *DelSpaceRequest) (*DelSpaceReply, error)
	QuitMySpace(context.Context, *QuitMySpaceRequest) (*QuitMySpaceReply, error)
	TransferSpaceOwnership(context.Context, *TransferSpaceOwnershipRequest) (*TransferSpaceOwnershipReply, error)
	SetNotify(context.Context, *SetNotifyRequest) (*SetNotifyReply, error)
	CreateMemberCategory(context.Context, *CreateMemberCategoryRequest) (*CreateMemberCategoryReply, error)
	ModifyMemberCategoryInfo(context.Context, *ModifyMemberCategoryRequest) (*ModifyMemberCategoryReply, error)
	SetMemberToMemberCategory(context.Context, *SetMemberToMemberCategoryRequest) (*SetMemberToMemberCategoryReply, error)
	SetWorkingDay(context.Context, *SetWorkingDayRequest) (*SetWorkingDayReply, error)
	SetCommentDeletable(context.Context, *SetCommentDeletableRequest) (*SetCommentDeletableReply, error)
	GetMemberCategoryDetailList(context.Context, *GetMemberCategoryDetailListRequest) (*GetMemberCategoryDetailListReply, error)
	DeleteMemberCategory(context.Context, *DeleteMemberCategoryRequest) (*DeleteMemberCategoryReply, error)
	SetName(context.Context, *SetNameRequest) (*SetNameReply, error)
	SearchWorkItem(context.Context, *SearchWorkItemRequest) (*SearchWorkItemReply, error)
	SortWorkItemType(context.Context, *SortWorkItemTypeRequest) (*SortWorkItemTypeReply, error)
	GetWorkItemTypes(context.Context, *GetWorkItemTypesRequest) (*GetWorkItemTypesReply, error)
	GetTempConfig(context.Context, *GetTempConfigRequest) (*GetTempConfigReply, error)
	SetTempConfig(context.Context, *SetTempConfigRequest) (*SetTempConfigReply, error)
	DelTempConfig(context.Context, *DelTempConfigRequest) (*DelTempConfigReply, error)
	Copy(context.Context, *CopyRequest) (*CopyReply, error)
	SetCommentDeletableWhenArchived(context.Context, *SetCommentDeletableWhenArchivedRequest) (*SetCommentDeletableWhenArchivedReply, error)
	SetCommentShowPos(context.Context, *SetCommentShowPosRequest) (*SetCommentShowPosReply, error)
	mustEmbedUnimplementedSpaceServer()
}

// UnimplementedSpaceServer must be embedded to have forward compatible implementations.
type UnimplementedSpaceServer struct {
}

func (UnimplementedSpaceServer) CreateSpace(context.Context, *CreateSpaceRequest) (*CreateSpaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSpace not implemented")
}
func (UnimplementedSpaceServer) SetSpaceDescribe(context.Context, *SetSpaceDescribeRequest) (*SetSpaceDescribeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceDescribe not implemented")
}
func (UnimplementedSpaceServer) SetSpaceBaseInfo(context.Context, *SetSpaceBaseInfoRequest) (*SetSpaceBaseInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceBaseInfo not implemented")
}
func (UnimplementedSpaceServer) GetSpaceInfo(context.Context, *GetSpaceInfoRequest) (*GetSpaceInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpaceInfo not implemented")
}
func (UnimplementedSpaceServer) SpaceList(context.Context, *SpaceListRequest) (*SpaceListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceList not implemented")
}
func (UnimplementedSpaceServer) DelSpace(context.Context, *DelSpaceRequest) (*DelSpaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelSpace not implemented")
}
func (UnimplementedSpaceServer) QuitMySpace(context.Context, *QuitMySpaceRequest) (*QuitMySpaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuitMySpace not implemented")
}
func (UnimplementedSpaceServer) TransferSpaceOwnership(context.Context, *TransferSpaceOwnershipRequest) (*TransferSpaceOwnershipReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferSpaceOwnership not implemented")
}
func (UnimplementedSpaceServer) SetNotify(context.Context, *SetNotifyRequest) (*SetNotifyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNotify not implemented")
}
func (UnimplementedSpaceServer) CreateMemberCategory(context.Context, *CreateMemberCategoryRequest) (*CreateMemberCategoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMemberCategory not implemented")
}
func (UnimplementedSpaceServer) ModifyMemberCategoryInfo(context.Context, *ModifyMemberCategoryRequest) (*ModifyMemberCategoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyMemberCategoryInfo not implemented")
}
func (UnimplementedSpaceServer) SetMemberToMemberCategory(context.Context, *SetMemberToMemberCategoryRequest) (*SetMemberToMemberCategoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMemberToMemberCategory not implemented")
}
func (UnimplementedSpaceServer) SetWorkingDay(context.Context, *SetWorkingDayRequest) (*SetWorkingDayReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWorkingDay not implemented")
}
func (UnimplementedSpaceServer) SetCommentDeletable(context.Context, *SetCommentDeletableRequest) (*SetCommentDeletableReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCommentDeletable not implemented")
}
func (UnimplementedSpaceServer) GetMemberCategoryDetailList(context.Context, *GetMemberCategoryDetailListRequest) (*GetMemberCategoryDetailListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMemberCategoryDetailList not implemented")
}
func (UnimplementedSpaceServer) DeleteMemberCategory(context.Context, *DeleteMemberCategoryRequest) (*DeleteMemberCategoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMemberCategory not implemented")
}
func (UnimplementedSpaceServer) SetName(context.Context, *SetNameRequest) (*SetNameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetName not implemented")
}
func (UnimplementedSpaceServer) SearchWorkItem(context.Context, *SearchWorkItemRequest) (*SearchWorkItemReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchWorkItem not implemented")
}
func (UnimplementedSpaceServer) SortWorkItemType(context.Context, *SortWorkItemTypeRequest) (*SortWorkItemTypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortWorkItemType not implemented")
}
func (UnimplementedSpaceServer) GetWorkItemTypes(context.Context, *GetWorkItemTypesRequest) (*GetWorkItemTypesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkItemTypes not implemented")
}
func (UnimplementedSpaceServer) GetTempConfig(context.Context, *GetTempConfigRequest) (*GetTempConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTempConfig not implemented")
}
func (UnimplementedSpaceServer) SetTempConfig(context.Context, *SetTempConfigRequest) (*SetTempConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTempConfig not implemented")
}
func (UnimplementedSpaceServer) DelTempConfig(context.Context, *DelTempConfigRequest) (*DelTempConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelTempConfig not implemented")
}
func (UnimplementedSpaceServer) Copy(context.Context, *CopyRequest) (*CopyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Copy not implemented")
}
func (UnimplementedSpaceServer) SetCommentDeletableWhenArchived(context.Context, *SetCommentDeletableWhenArchivedRequest) (*SetCommentDeletableWhenArchivedReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCommentDeletableWhenArchived not implemented")
}
func (UnimplementedSpaceServer) SetCommentShowPos(context.Context, *SetCommentShowPosRequest) (*SetCommentShowPosReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCommentShowPos not implemented")
}
func (UnimplementedSpaceServer) mustEmbedUnimplementedSpaceServer() {}

// UnsafeSpaceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SpaceServer will
// result in compilation errors.
type UnsafeSpaceServer interface {
	mustEmbedUnimplementedSpaceServer()
}

func RegisterSpaceServer(s grpc.ServiceRegistrar, srv SpaceServer) {
	s.RegisterService(&Space_ServiceDesc, srv)
}

func _Space_CreateSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSpaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).CreateSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_CreateSpace_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).CreateSpace(ctx, req.(*CreateSpaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetSpaceDescribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpaceDescribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetSpaceDescribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetSpaceDescribe_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetSpaceDescribe(ctx, req.(*SetSpaceDescribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetSpaceBaseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpaceBaseInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetSpaceBaseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetSpaceBaseInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetSpaceBaseInfo(ctx, req.(*SetSpaceBaseInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_GetSpaceInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpaceInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).GetSpaceInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_GetSpaceInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).GetSpaceInfo(ctx, req.(*GetSpaceInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SpaceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpaceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SpaceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SpaceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SpaceList(ctx, req.(*SpaceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_DelSpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelSpaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).DelSpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_DelSpace_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).DelSpace(ctx, req.(*DelSpaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_QuitMySpace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuitMySpaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).QuitMySpace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_QuitMySpace_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).QuitMySpace(ctx, req.(*QuitMySpaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_TransferSpaceOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferSpaceOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).TransferSpaceOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_TransferSpaceOwnership_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).TransferSpaceOwnership(ctx, req.(*TransferSpaceOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetNotify_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetNotify(ctx, req.(*SetNotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_CreateMemberCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMemberCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).CreateMemberCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_CreateMemberCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).CreateMemberCategory(ctx, req.(*CreateMemberCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_ModifyMemberCategoryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyMemberCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).ModifyMemberCategoryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_ModifyMemberCategoryInfo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).ModifyMemberCategoryInfo(ctx, req.(*ModifyMemberCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetMemberToMemberCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMemberToMemberCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetMemberToMemberCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetMemberToMemberCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetMemberToMemberCategory(ctx, req.(*SetMemberToMemberCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetWorkingDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkingDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetWorkingDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetWorkingDay_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetWorkingDay(ctx, req.(*SetWorkingDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetCommentDeletable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCommentDeletableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetCommentDeletable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetCommentDeletable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetCommentDeletable(ctx, req.(*SetCommentDeletableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_GetMemberCategoryDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMemberCategoryDetailListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).GetMemberCategoryDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_GetMemberCategoryDetailList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).GetMemberCategoryDetailList(ctx, req.(*GetMemberCategoryDetailListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_DeleteMemberCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMemberCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).DeleteMemberCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_DeleteMemberCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).DeleteMemberCategory(ctx, req.(*DeleteMemberCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetName(ctx, req.(*SetNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SearchWorkItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchWorkItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SearchWorkItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SearchWorkItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SearchWorkItem(ctx, req.(*SearchWorkItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SortWorkItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortWorkItemTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SortWorkItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SortWorkItemType_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SortWorkItemType(ctx, req.(*SortWorkItemTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_GetWorkItemTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkItemTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).GetWorkItemTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_GetWorkItemTypes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).GetWorkItemTypes(ctx, req.(*GetWorkItemTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_GetTempConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTempConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).GetTempConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_GetTempConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).GetTempConfig(ctx, req.(*GetTempConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetTempConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTempConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetTempConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetTempConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetTempConfig(ctx, req.(*SetTempConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_DelTempConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelTempConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).DelTempConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_DelTempConfig_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).DelTempConfig(ctx, req.(*DelTempConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_Copy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).Copy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_Copy_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).Copy(ctx, req.(*CopyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetCommentDeletableWhenArchived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCommentDeletableWhenArchivedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetCommentDeletableWhenArchived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetCommentDeletableWhenArchived_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetCommentDeletableWhenArchived(ctx, req.(*SetCommentDeletableWhenArchivedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Space_SetCommentShowPos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCommentShowPosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceServer).SetCommentShowPos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Space_SetCommentShowPos_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceServer).SetCommentShowPos(ctx, req.(*SetCommentShowPosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Space_ServiceDesc is the grpc.ServiceDesc for Space service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Space_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.space.v1.space",
	HandlerType: (*SpaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSpace",
			Handler:    _Space_CreateSpace_Handler,
		},
		{
			MethodName: "SetSpaceDescribe",
			Handler:    _Space_SetSpaceDescribe_Handler,
		},
		{
			MethodName: "SetSpaceBaseInfo",
			Handler:    _Space_SetSpaceBaseInfo_Handler,
		},
		{
			MethodName: "GetSpaceInfo",
			Handler:    _Space_GetSpaceInfo_Handler,
		},
		{
			MethodName: "SpaceList",
			Handler:    _Space_SpaceList_Handler,
		},
		{
			MethodName: "DelSpace",
			Handler:    _Space_DelSpace_Handler,
		},
		{
			MethodName: "QuitMySpace",
			Handler:    _Space_QuitMySpace_Handler,
		},
		{
			MethodName: "TransferSpaceOwnership",
			Handler:    _Space_TransferSpaceOwnership_Handler,
		},
		{
			MethodName: "SetNotify",
			Handler:    _Space_SetNotify_Handler,
		},
		{
			MethodName: "CreateMemberCategory",
			Handler:    _Space_CreateMemberCategory_Handler,
		},
		{
			MethodName: "ModifyMemberCategoryInfo",
			Handler:    _Space_ModifyMemberCategoryInfo_Handler,
		},
		{
			MethodName: "SetMemberToMemberCategory",
			Handler:    _Space_SetMemberToMemberCategory_Handler,
		},
		{
			MethodName: "SetWorkingDay",
			Handler:    _Space_SetWorkingDay_Handler,
		},
		{
			MethodName: "SetCommentDeletable",
			Handler:    _Space_SetCommentDeletable_Handler,
		},
		{
			MethodName: "GetMemberCategoryDetailList",
			Handler:    _Space_GetMemberCategoryDetailList_Handler,
		},
		{
			MethodName: "DeleteMemberCategory",
			Handler:    _Space_DeleteMemberCategory_Handler,
		},
		{
			MethodName: "SetName",
			Handler:    _Space_SetName_Handler,
		},
		{
			MethodName: "SearchWorkItem",
			Handler:    _Space_SearchWorkItem_Handler,
		},
		{
			MethodName: "SortWorkItemType",
			Handler:    _Space_SortWorkItemType_Handler,
		},
		{
			MethodName: "GetWorkItemTypes",
			Handler:    _Space_GetWorkItemTypes_Handler,
		},
		{
			MethodName: "GetTempConfig",
			Handler:    _Space_GetTempConfig_Handler,
		},
		{
			MethodName: "SetTempConfig",
			Handler:    _Space_SetTempConfig_Handler,
		},
		{
			MethodName: "DelTempConfig",
			Handler:    _Space_DelTempConfig_Handler,
		},
		{
			MethodName: "Copy",
			Handler:    _Space_Copy_Handler,
		},
		{
			MethodName: "SetCommentDeletableWhenArchived",
			Handler:    _Space_SetCommentDeletableWhenArchived_Handler,
		},
		{
			MethodName: "SetCommentShowPos",
			Handler:    _Space_SetCommentShowPos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "space/v1/space.proto",
}
