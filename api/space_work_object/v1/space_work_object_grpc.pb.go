// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: space_work_object/v1/space_work_object.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SpaceWorkObject_CreateSpaceWorkObject_FullMethodName     = "/api.space_work_object.v1.space_work_object/CreateSpaceWorkObject"
	SpaceWorkObject_SpaceWorkObjectList_FullMethodName       = "/api.space_work_object.v1.space_work_object/SpaceWorkObjectList"
	SpaceWorkObject_SpaceWorkObjectById_FullMethodName       = "/api.space_work_object.v1.space_work_object/SpaceWorkObjectById"
	SpaceWorkObject_ModifySpaceWorkObjectName_FullMethodName = "/api.space_work_object.v1.space_work_object/ModifySpaceWorkObjectName"
	SpaceWorkObject_DelSpaceWorkObject_FullMethodName        = "/api.space_work_object.v1.space_work_object/DelSpaceWorkObject"
	SpaceWorkObject_DelSpaceWorkObject2_FullMethodName       = "/api.space_work_object.v1.space_work_object/DelSpaceWorkObject2"
	SpaceWorkObject_SetOrder_FullMethodName                  = "/api.space_work_object.v1.space_work_object/SetOrder"
	SpaceWorkObject_SetSpaceWorkObjectRanking_FullMethodName = "/api.space_work_object.v1.space_work_object/SetSpaceWorkObjectRanking"
)

// SpaceWorkObjectClient is the client API for SpaceWorkObject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SpaceWorkObjectClient interface {
	CreateSpaceWorkObject(ctx context.Context, in *CreateSpaceWorkObjectRequest, opts ...grpc.CallOption) (*CreateSpaceWorkObjectReply, error)
	SpaceWorkObjectList(ctx context.Context, in *SpaceWorkObjectListRequest, opts ...grpc.CallOption) (*SpaceWorkObjectListReply, error)
	SpaceWorkObjectById(ctx context.Context, in *SpaceWorkObjectByIdRequest, opts ...grpc.CallOption) (*SpaceWorkObjectByIdReply, error)
	ModifySpaceWorkObjectName(ctx context.Context, in *ModifySpaceWorkObjectNameRequest, opts ...grpc.CallOption) (*ModifySpaceWorkObjectNameReply, error)
	DelSpaceWorkObject(ctx context.Context, in *DelSpaceWorkObjectRequest, opts ...grpc.CallOption) (*DelSpaceWorkObjectReply, error)
	DelSpaceWorkObject2(ctx context.Context, in *DelSpaceWorkObjectRequest2, opts ...grpc.CallOption) (*DelSpaceWorkObjectReply, error)
	SetOrder(ctx context.Context, in *SetWorkObjectOrderRequest, opts ...grpc.CallOption) (*SetWorkObjectOrderReply, error)
	SetSpaceWorkObjectRanking(ctx context.Context, in *SetSpaceWorkObjectRankingRequest, opts ...grpc.CallOption) (*SetSpaceWorkObjectRankingReply, error)
}

type spaceWorkObjectClient struct {
	cc grpc.ClientConnInterface
}

func NewSpaceWorkObjectClient(cc grpc.ClientConnInterface) SpaceWorkObjectClient {
	return &spaceWorkObjectClient{cc}
}

func (c *spaceWorkObjectClient) CreateSpaceWorkObject(ctx context.Context, in *CreateSpaceWorkObjectRequest, opts ...grpc.CallOption) (*CreateSpaceWorkObjectReply, error) {
	out := new(CreateSpaceWorkObjectReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_CreateSpaceWorkObject_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) SpaceWorkObjectList(ctx context.Context, in *SpaceWorkObjectListRequest, opts ...grpc.CallOption) (*SpaceWorkObjectListReply, error) {
	out := new(SpaceWorkObjectListReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_SpaceWorkObjectList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) SpaceWorkObjectById(ctx context.Context, in *SpaceWorkObjectByIdRequest, opts ...grpc.CallOption) (*SpaceWorkObjectByIdReply, error) {
	out := new(SpaceWorkObjectByIdReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_SpaceWorkObjectById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) ModifySpaceWorkObjectName(ctx context.Context, in *ModifySpaceWorkObjectNameRequest, opts ...grpc.CallOption) (*ModifySpaceWorkObjectNameReply, error) {
	out := new(ModifySpaceWorkObjectNameReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_ModifySpaceWorkObjectName_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) DelSpaceWorkObject(ctx context.Context, in *DelSpaceWorkObjectRequest, opts ...grpc.CallOption) (*DelSpaceWorkObjectReply, error) {
	out := new(DelSpaceWorkObjectReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_DelSpaceWorkObject_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) DelSpaceWorkObject2(ctx context.Context, in *DelSpaceWorkObjectRequest2, opts ...grpc.CallOption) (*DelSpaceWorkObjectReply, error) {
	out := new(DelSpaceWorkObjectReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_DelSpaceWorkObject2_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) SetOrder(ctx context.Context, in *SetWorkObjectOrderRequest, opts ...grpc.CallOption) (*SetWorkObjectOrderReply, error) {
	out := new(SetWorkObjectOrderReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_SetOrder_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spaceWorkObjectClient) SetSpaceWorkObjectRanking(ctx context.Context, in *SetSpaceWorkObjectRankingRequest, opts ...grpc.CallOption) (*SetSpaceWorkObjectRankingReply, error) {
	out := new(SetSpaceWorkObjectRankingReply)
	err := c.cc.Invoke(ctx, SpaceWorkObject_SetSpaceWorkObjectRanking_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpaceWorkObjectServer is the server API for SpaceWorkObject service.
// All implementations must embed UnimplementedSpaceWorkObjectServer
// for forward compatibility
type SpaceWorkObjectServer interface {
	CreateSpaceWorkObject(context.Context, *CreateSpaceWorkObjectRequest) (*CreateSpaceWorkObjectReply, error)
	SpaceWorkObjectList(context.Context, *SpaceWorkObjectListRequest) (*SpaceWorkObjectListReply, error)
	SpaceWorkObjectById(context.Context, *SpaceWorkObjectByIdRequest) (*SpaceWorkObjectByIdReply, error)
	ModifySpaceWorkObjectName(context.Context, *ModifySpaceWorkObjectNameRequest) (*ModifySpaceWorkObjectNameReply, error)
	DelSpaceWorkObject(context.Context, *DelSpaceWorkObjectRequest) (*DelSpaceWorkObjectReply, error)
	DelSpaceWorkObject2(context.Context, *DelSpaceWorkObjectRequest2) (*DelSpaceWorkObjectReply, error)
	SetOrder(context.Context, *SetWorkObjectOrderRequest) (*SetWorkObjectOrderReply, error)
	SetSpaceWorkObjectRanking(context.Context, *SetSpaceWorkObjectRankingRequest) (*SetSpaceWorkObjectRankingReply, error)
	mustEmbedUnimplementedSpaceWorkObjectServer()
}

// UnimplementedSpaceWorkObjectServer must be embedded to have forward compatible implementations.
type UnimplementedSpaceWorkObjectServer struct {
}

func (UnimplementedSpaceWorkObjectServer) CreateSpaceWorkObject(context.Context, *CreateSpaceWorkObjectRequest) (*CreateSpaceWorkObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSpaceWorkObject not implemented")
}
func (UnimplementedSpaceWorkObjectServer) SpaceWorkObjectList(context.Context, *SpaceWorkObjectListRequest) (*SpaceWorkObjectListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceWorkObjectList not implemented")
}
func (UnimplementedSpaceWorkObjectServer) SpaceWorkObjectById(context.Context, *SpaceWorkObjectByIdRequest) (*SpaceWorkObjectByIdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpaceWorkObjectById not implemented")
}
func (UnimplementedSpaceWorkObjectServer) ModifySpaceWorkObjectName(context.Context, *ModifySpaceWorkObjectNameRequest) (*ModifySpaceWorkObjectNameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifySpaceWorkObjectName not implemented")
}
func (UnimplementedSpaceWorkObjectServer) DelSpaceWorkObject(context.Context, *DelSpaceWorkObjectRequest) (*DelSpaceWorkObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelSpaceWorkObject not implemented")
}
func (UnimplementedSpaceWorkObjectServer) DelSpaceWorkObject2(context.Context, *DelSpaceWorkObjectRequest2) (*DelSpaceWorkObjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelSpaceWorkObject2 not implemented")
}
func (UnimplementedSpaceWorkObjectServer) SetOrder(context.Context, *SetWorkObjectOrderRequest) (*SetWorkObjectOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrder not implemented")
}
func (UnimplementedSpaceWorkObjectServer) SetSpaceWorkObjectRanking(context.Context, *SetSpaceWorkObjectRankingRequest) (*SetSpaceWorkObjectRankingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceWorkObjectRanking not implemented")
}
func (UnimplementedSpaceWorkObjectServer) mustEmbedUnimplementedSpaceWorkObjectServer() {}

// UnsafeSpaceWorkObjectServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SpaceWorkObjectServer will
// result in compilation errors.
type UnsafeSpaceWorkObjectServer interface {
	mustEmbedUnimplementedSpaceWorkObjectServer()
}

func RegisterSpaceWorkObjectServer(s grpc.ServiceRegistrar, srv SpaceWorkObjectServer) {
	s.RegisterService(&SpaceWorkObject_ServiceDesc, srv)
}

func _SpaceWorkObject_CreateSpaceWorkObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSpaceWorkObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).CreateSpaceWorkObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_CreateSpaceWorkObject_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).CreateSpaceWorkObject(ctx, req.(*CreateSpaceWorkObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_SpaceWorkObjectList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpaceWorkObjectListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).SpaceWorkObjectList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_SpaceWorkObjectList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).SpaceWorkObjectList(ctx, req.(*SpaceWorkObjectListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_SpaceWorkObjectById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpaceWorkObjectByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).SpaceWorkObjectById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_SpaceWorkObjectById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).SpaceWorkObjectById(ctx, req.(*SpaceWorkObjectByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_ModifySpaceWorkObjectName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifySpaceWorkObjectNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).ModifySpaceWorkObjectName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_ModifySpaceWorkObjectName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).ModifySpaceWorkObjectName(ctx, req.(*ModifySpaceWorkObjectNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_DelSpaceWorkObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelSpaceWorkObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).DelSpaceWorkObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_DelSpaceWorkObject_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).DelSpaceWorkObject(ctx, req.(*DelSpaceWorkObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_DelSpaceWorkObject2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelSpaceWorkObjectRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).DelSpaceWorkObject2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_DelSpaceWorkObject2_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).DelSpaceWorkObject2(ctx, req.(*DelSpaceWorkObjectRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_SetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetWorkObjectOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).SetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_SetOrder_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).SetOrder(ctx, req.(*SetWorkObjectOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpaceWorkObject_SetSpaceWorkObjectRanking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpaceWorkObjectRankingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpaceWorkObjectServer).SetSpaceWorkObjectRanking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SpaceWorkObject_SetSpaceWorkObjectRanking_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpaceWorkObjectServer).SetSpaceWorkObjectRanking(ctx, req.(*SetSpaceWorkObjectRankingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SpaceWorkObject_ServiceDesc is the grpc.ServiceDesc for SpaceWorkObject service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SpaceWorkObject_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.space_work_object.v1.space_work_object",
	HandlerType: (*SpaceWorkObjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSpaceWorkObject",
			Handler:    _SpaceWorkObject_CreateSpaceWorkObject_Handler,
		},
		{
			MethodName: "SpaceWorkObjectList",
			Handler:    _SpaceWorkObject_SpaceWorkObjectList_Handler,
		},
		{
			MethodName: "SpaceWorkObjectById",
			Handler:    _SpaceWorkObject_SpaceWorkObjectById_Handler,
		},
		{
			MethodName: "ModifySpaceWorkObjectName",
			Handler:    _SpaceWorkObject_ModifySpaceWorkObjectName_Handler,
		},
		{
			MethodName: "DelSpaceWorkObject",
			Handler:    _SpaceWorkObject_DelSpaceWorkObject_Handler,
		},
		{
			MethodName: "DelSpaceWorkObject2",
			Handler:    _SpaceWorkObject_DelSpaceWorkObject2_Handler,
		},
		{
			MethodName: "SetOrder",
			Handler:    _SpaceWorkObject_SetOrder_Handler,
		},
		{
			MethodName: "SetSpaceWorkObjectRanking",
			Handler:    _SpaceWorkObject_SetSpaceWorkObjectRanking_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "space_work_object/v1/space_work_object.proto",
}
