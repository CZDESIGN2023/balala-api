// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: work_item_status/v1/work_item_status.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	WorkItemStatus_QSpaceWorkItemStatusList_FullMethodName      = "/api.work_item_status.v1.WorkItemStatus/QSpaceWorkItemStatusList"
	WorkItemStatus_SetSpaceWorkItemStatusRanking_FullMethodName = "/api.work_item_status.v1.WorkItemStatus/SetSpaceWorkItemStatusRanking"
	WorkItemStatus_SetSpaceWorkItemStatusName_FullMethodName    = "/api.work_item_status.v1.WorkItemStatus/SetSpaceWorkItemStatusName"
	WorkItemStatus_DelSpaceWorkItemStatus_FullMethodName        = "/api.work_item_status.v1.WorkItemStatus/DelSpaceWorkItemStatus"
	WorkItemStatus_CreateSpaceWorkItemStatus_FullMethodName     = "/api.work_item_status.v1.WorkItemStatus/CreateSpaceWorkItemStatus"
	WorkItemStatus_QSpaceWorkItemStatusById_FullMethodName      = "/api.work_item_status.v1.WorkItemStatus/QSpaceWorkItemStatusById"
	WorkItemStatus_GetWorkItemRelationCount_FullMethodName      = "/api.work_item_status.v1.WorkItemStatus/GetWorkItemRelationCount"
	WorkItemStatus_GetTemplateRelationCount_FullMethodName      = "/api.work_item_status.v1.WorkItemStatus/GetTemplateRelationCount"
)

// WorkItemStatusClient is the client API for WorkItemStatus service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WorkItemStatusClient interface {
	QSpaceWorkItemStatusList(ctx context.Context, in *SpaceWorkItemStatusListRequest, opts ...grpc.CallOption) (*SpaceWorkItemStatusListReply, error)
	SetSpaceWorkItemStatusRanking(ctx context.Context, in *SetSpaceWorkItemStatusRankingRequest, opts ...grpc.CallOption) (*SetSpaceWorkItemStatusRankingReply, error)
	SetSpaceWorkItemStatusName(ctx context.Context, in *SetSpaceWorkItemStatusNameRequest, opts ...grpc.CallOption) (*SetSpaceWorkItemStatusNameReply, error)
	DelSpaceWorkItemStatus(ctx context.Context, in *DelSpaceWorkItemStatusRequest, opts ...grpc.CallOption) (*DelSpaceWorkItemStatusReply, error)
	CreateSpaceWorkItemStatus(ctx context.Context, in *CreateSpaceWorkItemStatusRequest, opts ...grpc.CallOption) (*CreateSpaceWorkItemStatusReply, error)
	QSpaceWorkItemStatusById(ctx context.Context, in *QSpaceWorkItemStatusByIdRequest, opts ...grpc.CallOption) (*QSpaceWorkItemStatusByIdReply, error)
	GetWorkItemRelationCount(ctx context.Context, in *GetWorkItemRelationCountRequest, opts ...grpc.CallOption) (*GetWorkItemRelationCountReply, error)
	GetTemplateRelationCount(ctx context.Context, in *GetTemplateRelationCountRequest, opts ...grpc.CallOption) (*GetTemplateRelationCountReply, error)
}

type workItemStatusClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkItemStatusClient(cc grpc.ClientConnInterface) WorkItemStatusClient {
	return &workItemStatusClient{cc}
}

func (c *workItemStatusClient) QSpaceWorkItemStatusList(ctx context.Context, in *SpaceWorkItemStatusListRequest, opts ...grpc.CallOption) (*SpaceWorkItemStatusListReply, error) {
	out := new(SpaceWorkItemStatusListReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_QSpaceWorkItemStatusList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) SetSpaceWorkItemStatusRanking(ctx context.Context, in *SetSpaceWorkItemStatusRankingRequest, opts ...grpc.CallOption) (*SetSpaceWorkItemStatusRankingReply, error) {
	out := new(SetSpaceWorkItemStatusRankingReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_SetSpaceWorkItemStatusRanking_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) SetSpaceWorkItemStatusName(ctx context.Context, in *SetSpaceWorkItemStatusNameRequest, opts ...grpc.CallOption) (*SetSpaceWorkItemStatusNameReply, error) {
	out := new(SetSpaceWorkItemStatusNameReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_SetSpaceWorkItemStatusName_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) DelSpaceWorkItemStatus(ctx context.Context, in *DelSpaceWorkItemStatusRequest, opts ...grpc.CallOption) (*DelSpaceWorkItemStatusReply, error) {
	out := new(DelSpaceWorkItemStatusReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_DelSpaceWorkItemStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) CreateSpaceWorkItemStatus(ctx context.Context, in *CreateSpaceWorkItemStatusRequest, opts ...grpc.CallOption) (*CreateSpaceWorkItemStatusReply, error) {
	out := new(CreateSpaceWorkItemStatusReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_CreateSpaceWorkItemStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) QSpaceWorkItemStatusById(ctx context.Context, in *QSpaceWorkItemStatusByIdRequest, opts ...grpc.CallOption) (*QSpaceWorkItemStatusByIdReply, error) {
	out := new(QSpaceWorkItemStatusByIdReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_QSpaceWorkItemStatusById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) GetWorkItemRelationCount(ctx context.Context, in *GetWorkItemRelationCountRequest, opts ...grpc.CallOption) (*GetWorkItemRelationCountReply, error) {
	out := new(GetWorkItemRelationCountReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_GetWorkItemRelationCount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workItemStatusClient) GetTemplateRelationCount(ctx context.Context, in *GetTemplateRelationCountRequest, opts ...grpc.CallOption) (*GetTemplateRelationCountReply, error) {
	out := new(GetTemplateRelationCountReply)
	err := c.cc.Invoke(ctx, WorkItemStatus_GetTemplateRelationCount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkItemStatusServer is the server API for WorkItemStatus service.
// All implementations must embed UnimplementedWorkItemStatusServer
// for forward compatibility
type WorkItemStatusServer interface {
	QSpaceWorkItemStatusList(context.Context, *SpaceWorkItemStatusListRequest) (*SpaceWorkItemStatusListReply, error)
	SetSpaceWorkItemStatusRanking(context.Context, *SetSpaceWorkItemStatusRankingRequest) (*SetSpaceWorkItemStatusRankingReply, error)
	SetSpaceWorkItemStatusName(context.Context, *SetSpaceWorkItemStatusNameRequest) (*SetSpaceWorkItemStatusNameReply, error)
	DelSpaceWorkItemStatus(context.Context, *DelSpaceWorkItemStatusRequest) (*DelSpaceWorkItemStatusReply, error)
	CreateSpaceWorkItemStatus(context.Context, *CreateSpaceWorkItemStatusRequest) (*CreateSpaceWorkItemStatusReply, error)
	QSpaceWorkItemStatusById(context.Context, *QSpaceWorkItemStatusByIdRequest) (*QSpaceWorkItemStatusByIdReply, error)
	GetWorkItemRelationCount(context.Context, *GetWorkItemRelationCountRequest) (*GetWorkItemRelationCountReply, error)
	GetTemplateRelationCount(context.Context, *GetTemplateRelationCountRequest) (*GetTemplateRelationCountReply, error)
	mustEmbedUnimplementedWorkItemStatusServer()
}

// UnimplementedWorkItemStatusServer must be embedded to have forward compatible implementations.
type UnimplementedWorkItemStatusServer struct {
}

func (UnimplementedWorkItemStatusServer) QSpaceWorkItemStatusList(context.Context, *SpaceWorkItemStatusListRequest) (*SpaceWorkItemStatusListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QSpaceWorkItemStatusList not implemented")
}
func (UnimplementedWorkItemStatusServer) SetSpaceWorkItemStatusRanking(context.Context, *SetSpaceWorkItemStatusRankingRequest) (*SetSpaceWorkItemStatusRankingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceWorkItemStatusRanking not implemented")
}
func (UnimplementedWorkItemStatusServer) SetSpaceWorkItemStatusName(context.Context, *SetSpaceWorkItemStatusNameRequest) (*SetSpaceWorkItemStatusNameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSpaceWorkItemStatusName not implemented")
}
func (UnimplementedWorkItemStatusServer) DelSpaceWorkItemStatus(context.Context, *DelSpaceWorkItemStatusRequest) (*DelSpaceWorkItemStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelSpaceWorkItemStatus not implemented")
}
func (UnimplementedWorkItemStatusServer) CreateSpaceWorkItemStatus(context.Context, *CreateSpaceWorkItemStatusRequest) (*CreateSpaceWorkItemStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSpaceWorkItemStatus not implemented")
}
func (UnimplementedWorkItemStatusServer) QSpaceWorkItemStatusById(context.Context, *QSpaceWorkItemStatusByIdRequest) (*QSpaceWorkItemStatusByIdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QSpaceWorkItemStatusById not implemented")
}
func (UnimplementedWorkItemStatusServer) GetWorkItemRelationCount(context.Context, *GetWorkItemRelationCountRequest) (*GetWorkItemRelationCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkItemRelationCount not implemented")
}
func (UnimplementedWorkItemStatusServer) GetTemplateRelationCount(context.Context, *GetTemplateRelationCountRequest) (*GetTemplateRelationCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTemplateRelationCount not implemented")
}
func (UnimplementedWorkItemStatusServer) mustEmbedUnimplementedWorkItemStatusServer() {}

// UnsafeWorkItemStatusServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WorkItemStatusServer will
// result in compilation errors.
type UnsafeWorkItemStatusServer interface {
	mustEmbedUnimplementedWorkItemStatusServer()
}

func RegisterWorkItemStatusServer(s grpc.ServiceRegistrar, srv WorkItemStatusServer) {
	s.RegisterService(&WorkItemStatus_ServiceDesc, srv)
}

func _WorkItemStatus_QSpaceWorkItemStatusList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpaceWorkItemStatusListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).QSpaceWorkItemStatusList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_QSpaceWorkItemStatusList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).QSpaceWorkItemStatusList(ctx, req.(*SpaceWorkItemStatusListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_SetSpaceWorkItemStatusRanking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpaceWorkItemStatusRankingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).SetSpaceWorkItemStatusRanking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_SetSpaceWorkItemStatusRanking_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).SetSpaceWorkItemStatusRanking(ctx, req.(*SetSpaceWorkItemStatusRankingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_SetSpaceWorkItemStatusName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSpaceWorkItemStatusNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).SetSpaceWorkItemStatusName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_SetSpaceWorkItemStatusName_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).SetSpaceWorkItemStatusName(ctx, req.(*SetSpaceWorkItemStatusNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_DelSpaceWorkItemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelSpaceWorkItemStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).DelSpaceWorkItemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_DelSpaceWorkItemStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).DelSpaceWorkItemStatus(ctx, req.(*DelSpaceWorkItemStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_CreateSpaceWorkItemStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSpaceWorkItemStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).CreateSpaceWorkItemStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_CreateSpaceWorkItemStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).CreateSpaceWorkItemStatus(ctx, req.(*CreateSpaceWorkItemStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_QSpaceWorkItemStatusById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QSpaceWorkItemStatusByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).QSpaceWorkItemStatusById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_QSpaceWorkItemStatusById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).QSpaceWorkItemStatusById(ctx, req.(*QSpaceWorkItemStatusByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_GetWorkItemRelationCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkItemRelationCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).GetWorkItemRelationCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_GetWorkItemRelationCount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).GetWorkItemRelationCount(ctx, req.(*GetWorkItemRelationCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkItemStatus_GetTemplateRelationCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTemplateRelationCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkItemStatusServer).GetTemplateRelationCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WorkItemStatus_GetTemplateRelationCount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkItemStatusServer).GetTemplateRelationCount(ctx, req.(*GetTemplateRelationCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// WorkItemStatus_ServiceDesc is the grpc.ServiceDesc for WorkItemStatus service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WorkItemStatus_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.work_item_status.v1.WorkItemStatus",
	HandlerType: (*WorkItemStatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QSpaceWorkItemStatusList",
			Handler:    _WorkItemStatus_QSpaceWorkItemStatusList_Handler,
		},
		{
			MethodName: "SetSpaceWorkItemStatusRanking",
			Handler:    _WorkItemStatus_SetSpaceWorkItemStatusRanking_Handler,
		},
		{
			MethodName: "SetSpaceWorkItemStatusName",
			Handler:    _WorkItemStatus_SetSpaceWorkItemStatusName_Handler,
		},
		{
			MethodName: "DelSpaceWorkItemStatus",
			Handler:    _WorkItemStatus_DelSpaceWorkItemStatus_Handler,
		},
		{
			MethodName: "CreateSpaceWorkItemStatus",
			Handler:    _WorkItemStatus_CreateSpaceWorkItemStatus_Handler,
		},
		{
			MethodName: "QSpaceWorkItemStatusById",
			Handler:    _WorkItemStatus_QSpaceWorkItemStatusById_Handler,
		},
		{
			MethodName: "GetWorkItemRelationCount",
			Handler:    _WorkItemStatus_GetWorkItemRelationCount_Handler,
		},
		{
			MethodName: "GetTemplateRelationCount",
			Handler:    _WorkItemStatus_GetTemplateRelationCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "work_item_status/v1/work_item_status.proto",
}
