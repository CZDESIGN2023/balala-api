// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: upload/v1/upload.proto

package v1

import (
	comm "go-cs/api/comm"
	bean "go-cs/internal/bean"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 上传状态
type UploadStatus int32

const (
	UploadStatus_UPLOAD_STATUS_UNKNOWN   UploadStatus = 0 // 未定義
	UploadStatus_UPLOAD_STATUS_INIT      UploadStatus = 1 // 初始化
	UploadStatus_UPLOAD_STATUS_UPLOADING UploadStatus = 2 // 上传中
	UploadStatus_UPLOAD_STATUS_SUCCESS   UploadStatus = 3 // 成功
	UploadStatus_UPLOAD_STATUS_FAILD     UploadStatus = 4 // 失败
	UploadStatus_UPLOAD_STATUS_MACHINING UploadStatus = 5 // 处理中（转码等）
	UploadStatus_UPLOAD_STATUS_WILL_DEL  UploadStatus = 6 // 待删
)

// Enum value maps for UploadStatus.
var (
	UploadStatus_name = map[int32]string{
		0: "UPLOAD_STATUS_UNKNOWN",
		1: "UPLOAD_STATUS_INIT",
		2: "UPLOAD_STATUS_UPLOADING",
		3: "UPLOAD_STATUS_SUCCESS",
		4: "UPLOAD_STATUS_FAILD",
		5: "UPLOAD_STATUS_MACHINING",
		6: "UPLOAD_STATUS_WILL_DEL",
	}
	UploadStatus_value = map[string]int32{
		"UPLOAD_STATUS_UNKNOWN":   0,
		"UPLOAD_STATUS_INIT":      1,
		"UPLOAD_STATUS_UPLOADING": 2,
		"UPLOAD_STATUS_SUCCESS":   3,
		"UPLOAD_STATUS_FAILD":     4,
		"UPLOAD_STATUS_MACHINING": 5,
		"UPLOAD_STATUS_WILL_DEL":  6,
	}
)

func (x UploadStatus) Enum() *UploadStatus {
	p := new(UploadStatus)
	*p = x
	return p
}

func (x UploadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_upload_v1_upload_proto_enumTypes[0].Descriptor()
}

func (UploadStatus) Type() protoreflect.EnumType {
	return &file_upload_v1_upload_proto_enumTypes[0]
}

func (x UploadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadStatus.Descriptor instead.
func (UploadStatus) EnumDescriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{0}
}

// 文件类型
type FileType int32

const (
	FileType_FILE_TYPE_UNKNOWN FileType = 0 // 未定義
	FileType_FILE_TYPE_PIC     FileType = 1 // 图片
	FileType_FILE_TYPE_VIDEO   FileType = 2 // 视频
	FileType_FILE_TYPE_AUDIO   FileType = 3 // 音频
	FileType_FILE_TYPE_TEXT    FileType = 4 // 文本
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "FILE_TYPE_UNKNOWN",
		1: "FILE_TYPE_PIC",
		2: "FILE_TYPE_VIDEO",
		3: "FILE_TYPE_AUDIO",
		4: "FILE_TYPE_TEXT",
	}
	FileType_value = map[string]int32{
		"FILE_TYPE_UNKNOWN": 0,
		"FILE_TYPE_PIC":     1,
		"FILE_TYPE_VIDEO":   2,
		"FILE_TYPE_AUDIO":   3,
		"FILE_TYPE_TEXT":    4,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_upload_v1_upload_proto_enumTypes[1].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_upload_v1_upload_proto_enumTypes[1]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{1}
}

type AddFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash   string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size   int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Unique string `protobuf:"bytes,4,opt,name=unique,proto3" json:"unique,omitempty"` // 上传标识
}

func (x *AddFileInfo) Reset() {
	*x = AddFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileInfo) ProtoMessage() {}

func (x *AddFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileInfo.ProtoReflect.Descriptor instead.
func (*AddFileInfo) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{0}
}

func (x *AddFileInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *AddFileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddFileInfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AddFileInfo) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

type AddFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`                             // 上传后的资源id
	Status    int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`                       // 上传状态
	UploadUrl string `protobuf:"bytes,3,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"` // 上传路径
	Unique    string `protobuf:"bytes,4,opt,name=unique,proto3" json:"unique,omitempty"`                        // 上传标识
}

func (x *AddFileReply) Reset() {
	*x = AddFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileReply) ProtoMessage() {}

func (x *AddFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileReply.ProtoReflect.Descriptor instead.
func (*AddFileReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{1}
}

func (x *AddFileReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddFileReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddFileReply) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *AddFileReply) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

type GetFileInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"zigzag64,1,rep,packed,name=ids,proto3" json:"ids,omitempty"` // 资源id
}

func (x *GetFileInfoRequest) Reset() {
	*x = GetFileInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoRequest) ProtoMessage() {}

func (x *GetFileInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoRequest.ProtoReflect.Descriptor instead.
func (*GetFileInfoRequest) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileInfoRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetFileInfoReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo []*bean.FileInfo `protobuf:"bytes,1,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
}

func (x *GetFileInfoReplyData) Reset() {
	*x = GetFileInfoReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoReplyData) ProtoMessage() {}

func (x *GetFileInfoReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoReplyData.ProtoReflect.Descriptor instead.
func (*GetFileInfoReplyData) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{3}
}

func (x *GetFileInfoReplyData) GetFileInfo() []*bean.FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type GetFileInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetFileInfoReply_Error
	//	*GetFileInfoReply_Data
	Result isGetFileInfoReply_Result `protobuf_oneof:"result"`
}

func (x *GetFileInfoReply) Reset() {
	*x = GetFileInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoReply) ProtoMessage() {}

func (x *GetFileInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoReply.ProtoReflect.Descriptor instead.
func (*GetFileInfoReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{4}
}

func (m *GetFileInfoReply) GetResult() isGetFileInfoReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetFileInfoReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetFileInfoReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetFileInfoReply) GetData() *GetFileInfoReplyData {
	if x, ok := x.GetResult().(*GetFileInfoReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetFileInfoReply_Result interface {
	isGetFileInfoReply_Result()
}

type GetFileInfoReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetFileInfoReply_Data struct {
	Data *GetFileInfoReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetFileInfoReply_Error) isGetFileInfoReply_Result() {}

func (*GetFileInfoReply_Data) isGetFileInfoReply_Result() {}

// 上傳檔案回應資料格式
type UploadFileReplyDataRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // fileId
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 上传状态, 參考UploadStatus
}

func (x *UploadFileReplyDataRow) Reset() {
	*x = UploadFileReplyDataRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReplyDataRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReplyDataRow) ProtoMessage() {}

func (x *UploadFileReplyDataRow) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReplyDataRow.ProtoReflect.Descriptor instead.
func (*UploadFileReplyDataRow) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileReplyDataRow) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadFileReplyDataRow) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *UploadFileReplyDataRow) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type UploadFileReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*UploadFileReplyDataRow `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UploadFileReplyData) Reset() {
	*x = UploadFileReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReplyData) ProtoMessage() {}

func (x *UploadFileReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReplyData.ProtoReflect.Descriptor instead.
func (*UploadFileReplyData) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{6}
}

func (x *UploadFileReplyData) GetList() []*UploadFileReplyDataRow {
	if x != nil {
		return x.List
	}
	return nil
}

type UploadFileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*UploadFileReply_Error
	//	*UploadFileReply_Data
	Result isUploadFileReply_Result `protobuf_oneof:"result"`
}

func (x *UploadFileReply) Reset() {
	*x = UploadFileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_upload_v1_upload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReply) ProtoMessage() {}

func (x *UploadFileReply) ProtoReflect() protoreflect.Message {
	mi := &file_upload_v1_upload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReply.ProtoReflect.Descriptor instead.
func (*UploadFileReply) Descriptor() ([]byte, []int) {
	return file_upload_v1_upload_proto_rawDescGZIP(), []int{7}
}

func (m *UploadFileReply) GetResult() isUploadFileReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *UploadFileReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*UploadFileReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *UploadFileReply) GetData() *UploadFileReplyData {
	if x, ok := x.GetResult().(*UploadFileReply_Data); ok {
		return x.Data
	}
	return nil
}

type isUploadFileReply_Result interface {
	isUploadFileReply_Result()
}

type UploadFileReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type UploadFileReply_Data struct {
	Data *UploadFileReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*UploadFileReply_Error) isUploadFileReply_Result() {}

func (*UploadFileReply_Data) isUploadFileReply_Result() {}

var File_upload_v1_upload_proto protoreflect.FileDescriptor

var file_upload_v1_upload_proto_rawDesc = []byte{
	0x0a, 0x16, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x6d, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x12, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x62, 0x65, 0x61, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x50, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x7e, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2a, 0xcb, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x44, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x4c, 0x4f, 0x41,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x49, 0x4c, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x10, 0x06,
	0x2a, 0x72, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x49, 0x43, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x03,
	0x12, 0x12, 0x0a, 0x0e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45,
	0x58, 0x54, 0x10, 0x04, 0x42, 0x29, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x16, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_upload_v1_upload_proto_rawDescOnce sync.Once
	file_upload_v1_upload_proto_rawDescData = file_upload_v1_upload_proto_rawDesc
)

func file_upload_v1_upload_proto_rawDescGZIP() []byte {
	file_upload_v1_upload_proto_rawDescOnce.Do(func() {
		file_upload_v1_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_upload_v1_upload_proto_rawDescData)
	})
	return file_upload_v1_upload_proto_rawDescData
}

var file_upload_v1_upload_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_upload_v1_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_upload_v1_upload_proto_goTypes = []interface{}{
	(UploadStatus)(0),              // 0: api.upload.v1.UploadStatus
	(FileType)(0),                  // 1: api.upload.v1.FileType
	(*AddFileInfo)(nil),            // 2: api.upload.v1.AddFileInfo
	(*AddFileReply)(nil),           // 3: api.upload.v1.AddFileReply
	(*GetFileInfoRequest)(nil),     // 4: api.upload.v1.GetFileInfoRequest
	(*GetFileInfoReplyData)(nil),   // 5: api.upload.v1.GetFileInfoReplyData
	(*GetFileInfoReply)(nil),       // 6: api.upload.v1.GetFileInfoReply
	(*UploadFileReplyDataRow)(nil), // 7: api.upload.v1.UploadFileReplyDataRow
	(*UploadFileReplyData)(nil),    // 8: api.upload.v1.UploadFileReplyData
	(*UploadFileReply)(nil),        // 9: api.upload.v1.UploadFileReply
	(*bean.FileInfo)(nil),          // 10: server_go_base.bean.FileInfo
	(*comm.ErrorInfo)(nil),         // 11: comm.ErrorInfo
}
var file_upload_v1_upload_proto_depIdxs = []int32{
	10, // 0: api.upload.v1.GetFileInfoReplyData.fileInfo:type_name -> server_go_base.bean.FileInfo
	11, // 1: api.upload.v1.GetFileInfoReply.error:type_name -> comm.ErrorInfo
	5,  // 2: api.upload.v1.GetFileInfoReply.data:type_name -> api.upload.v1.GetFileInfoReplyData
	7,  // 3: api.upload.v1.UploadFileReplyData.list:type_name -> api.upload.v1.UploadFileReplyDataRow
	11, // 4: api.upload.v1.UploadFileReply.error:type_name -> comm.ErrorInfo
	8,  // 5: api.upload.v1.UploadFileReply.data:type_name -> api.upload.v1.UploadFileReplyData
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_upload_v1_upload_proto_init() }
func file_upload_v1_upload_proto_init() {
	if File_upload_v1_upload_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_upload_v1_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReplyDataRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_upload_v1_upload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_upload_v1_upload_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetFileInfoReply_Error)(nil),
		(*GetFileInfoReply_Data)(nil),
	}
	file_upload_v1_upload_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UploadFileReply_Error)(nil),
		(*UploadFileReply_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_upload_v1_upload_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_upload_v1_upload_proto_goTypes,
		DependencyIndexes: file_upload_v1_upload_proto_depIdxs,
		EnumInfos:         file_upload_v1_upload_proto_enumTypes,
		MessageInfos:      file_upload_v1_upload_proto_msgTypes,
	}.Build()
	File_upload_v1_upload_proto = out.File
	file_upload_v1_upload_proto_rawDesc = nil
	file_upload_v1_upload_proto_goTypes = nil
	file_upload_v1_upload_proto_depIdxs = nil
}
