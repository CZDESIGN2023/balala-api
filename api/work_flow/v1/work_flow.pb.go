// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: work_flow/v1/work_flow.proto

package v1

import (
	comm "go-cs/api/comm"
	rsp "go-cs/internal/bean/vo/rsp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取负责人关
type GetOwnerRuleRelationTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId  int64 `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	OwnerUid int64 `protobuf:"varint,2,opt,name=ownerUid,proto3" json:"ownerUid,omitempty"`
}

func (x *GetOwnerRuleRelationTemplateRequest) Reset() {
	*x = GetOwnerRuleRelationTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnerRuleRelationTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnerRuleRelationTemplateRequest) ProtoMessage() {}

func (x *GetOwnerRuleRelationTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnerRuleRelationTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetOwnerRuleRelationTemplateRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{0}
}

func (x *GetOwnerRuleRelationTemplateRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetOwnerRuleRelationTemplateRequest) GetOwnerUid() int64 {
	if x != nil {
		return x.OwnerUid
	}
	return 0
}

type GetOwnerRuleRelationTemplateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetOwnerRuleRelationTemplateReply_Error
	//	*GetOwnerRuleRelationTemplateReply_Data
	Result isGetOwnerRuleRelationTemplateReply_Result `protobuf_oneof:"result"`
}

func (x *GetOwnerRuleRelationTemplateReply) Reset() {
	*x = GetOwnerRuleRelationTemplateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnerRuleRelationTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnerRuleRelationTemplateReply) ProtoMessage() {}

func (x *GetOwnerRuleRelationTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnerRuleRelationTemplateReply.ProtoReflect.Descriptor instead.
func (*GetOwnerRuleRelationTemplateReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{1}
}

func (m *GetOwnerRuleRelationTemplateReply) GetResult() isGetOwnerRuleRelationTemplateReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetOwnerRuleRelationTemplateReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetOwnerRuleRelationTemplateReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetOwnerRuleRelationTemplateReply) GetData() *GetOwnerRuleRelationTemplateReplyData {
	if x, ok := x.GetResult().(*GetOwnerRuleRelationTemplateReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetOwnerRuleRelationTemplateReply_Result interface {
	isGetOwnerRuleRelationTemplateReply_Result()
}

type GetOwnerRuleRelationTemplateReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetOwnerRuleRelationTemplateReply_Data struct {
	Data *GetOwnerRuleRelationTemplateReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetOwnerRuleRelationTemplateReply_Error) isGetOwnerRuleRelationTemplateReply_Result() {}

func (*GetOwnerRuleRelationTemplateReply_Data) isGetOwnerRuleRelationTemplateReply_Result() {}

type GetOwnerRuleRelationTemplateReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetOwnerRuleRelationTemplateReplyData_Template `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetOwnerRuleRelationTemplateReplyData) Reset() {
	*x = GetOwnerRuleRelationTemplateReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnerRuleRelationTemplateReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnerRuleRelationTemplateReplyData) ProtoMessage() {}

func (x *GetOwnerRuleRelationTemplateReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnerRuleRelationTemplateReplyData.ProtoReflect.Descriptor instead.
func (*GetOwnerRuleRelationTemplateReplyData) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{2}
}

func (x *GetOwnerRuleRelationTemplateReplyData) GetList() []*GetOwnerRuleRelationTemplateReplyData_Template {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取关联的任务数量
type GetWorkItemRelationCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Id      int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Scene   string `protobuf:"bytes,3,opt,name=scene,proto3" json:"scene,omitempty"`
}

func (x *GetWorkItemRelationCountRequest) Reset() {
	*x = GetWorkItemRelationCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkItemRelationCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkItemRelationCountRequest) ProtoMessage() {}

func (x *GetWorkItemRelationCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkItemRelationCountRequest.ProtoReflect.Descriptor instead.
func (*GetWorkItemRelationCountRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{3}
}

func (x *GetWorkItemRelationCountRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetWorkItemRelationCountRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetWorkItemRelationCountRequest) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

type GetWorkItemRelationCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetWorkItemRelationCountReply_Error
	//	*GetWorkItemRelationCountReply_Data
	Result isGetWorkItemRelationCountReply_Result `protobuf_oneof:"result"`
}

func (x *GetWorkItemRelationCountReply) Reset() {
	*x = GetWorkItemRelationCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkItemRelationCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkItemRelationCountReply) ProtoMessage() {}

func (x *GetWorkItemRelationCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkItemRelationCountReply.ProtoReflect.Descriptor instead.
func (*GetWorkItemRelationCountReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{4}
}

func (m *GetWorkItemRelationCountReply) GetResult() isGetWorkItemRelationCountReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetWorkItemRelationCountReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetWorkItemRelationCountReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetWorkItemRelationCountReply) GetData() *GetWorkItemRelationCountReplyData {
	if x, ok := x.GetResult().(*GetWorkItemRelationCountReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetWorkItemRelationCountReply_Result interface {
	isGetWorkItemRelationCountReply_Result()
}

type GetWorkItemRelationCountReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetWorkItemRelationCountReply_Data struct {
	Data *GetWorkItemRelationCountReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetWorkItemRelationCountReply_Error) isGetWorkItemRelationCountReply_Result() {}

func (*GetWorkItemRelationCountReply_Data) isGetWorkItemRelationCountReply_Result() {}

type GetWorkItemRelationCountReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetWorkItemRelationCountReplyData) Reset() {
	*x = GetWorkItemRelationCountReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkItemRelationCountReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkItemRelationCountReplyData) ProtoMessage() {}

func (x *GetWorkItemRelationCountReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkItemRelationCountReplyData.ProtoReflect.Descriptor instead.
func (*GetWorkItemRelationCountReplyData) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{5}
}

func (x *GetWorkItemRelationCountReplyData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 工作流列表
type SpaceWorkFlowByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64   `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Ids     []int64 `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SpaceWorkFlowByIdRequest) Reset() {
	*x = SpaceWorkFlowByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowByIdRequest) ProtoMessage() {}

func (x *SpaceWorkFlowByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowByIdRequest.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowByIdRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{6}
}

func (x *SpaceWorkFlowByIdRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowByIdRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SpaceWorkFlowByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SpaceWorkFlowByIdReply_Error
	//	*SpaceWorkFlowByIdReply_Data
	Result isSpaceWorkFlowByIdReply_Result `protobuf_oneof:"result"`
}

func (x *SpaceWorkFlowByIdReply) Reset() {
	*x = SpaceWorkFlowByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowByIdReply) ProtoMessage() {}

func (x *SpaceWorkFlowByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowByIdReply.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowByIdReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{7}
}

func (m *SpaceWorkFlowByIdReply) GetResult() isSpaceWorkFlowByIdReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SpaceWorkFlowByIdReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SpaceWorkFlowByIdReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SpaceWorkFlowByIdReply) GetData() *SpaceWorkFlowByIdReplyData {
	if x, ok := x.GetResult().(*SpaceWorkFlowByIdReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSpaceWorkFlowByIdReply_Result interface {
	isSpaceWorkFlowByIdReply_Result()
}

type SpaceWorkFlowByIdReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SpaceWorkFlowByIdReply_Data struct {
	Data *SpaceWorkFlowByIdReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SpaceWorkFlowByIdReply_Error) isSpaceWorkFlowByIdReply_Result() {}

func (*SpaceWorkFlowByIdReply_Data) isSpaceWorkFlowByIdReply_Result() {}

type SpaceWorkFlowByIdReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SpaceWorkFlowByIdReplyData_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SpaceWorkFlowByIdReplyData) Reset() {
	*x = SpaceWorkFlowByIdReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowByIdReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowByIdReplyData) ProtoMessage() {}

func (x *SpaceWorkFlowByIdReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowByIdReplyData.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowByIdReplyData) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{8}
}

func (x *SpaceWorkFlowByIdReplyData) GetList() []*SpaceWorkFlowByIdReplyData_Item {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceWorkFlowByIdReplyData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SpaceWorkFlowByIdReplyData_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId        int64  `protobuf:"zigzag64,4,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	WorkItemTypeId int64  `protobuf:"zigzag64,5,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	Name           string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Key            string `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	FlowMode       string `protobuf:"bytes,8,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	Version        int64  `protobuf:"zigzag64,9,opt,name=version,proto3" json:"version,omitempty"`
	TemplateId     int64  `protobuf:"zigzag64,10,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Ranking        int64  `protobuf:"zigzag64,11,opt,name=ranking,proto3" json:"ranking,omitempty"`
	CreatedAt      int64  `protobuf:"zigzag64,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64  `protobuf:"zigzag64,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *SpaceWorkFlowByIdReplyData_Item) Reset() {
	*x = SpaceWorkFlowByIdReplyData_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowByIdReplyData_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowByIdReplyData_Item) ProtoMessage() {}

func (x *SpaceWorkFlowByIdReplyData_Item) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowByIdReplyData_Item.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowByIdReplyData_Item) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{9}
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkFlowByIdReplyData_Item) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 修改工作流名称
type SetWorkFlowNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64  `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetWorkFlowNameRequest) Reset() {
	*x = SetWorkFlowNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowNameRequest) ProtoMessage() {}

func (x *SetWorkFlowNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowNameRequest.ProtoReflect.Descriptor instead.
func (*SetWorkFlowNameRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{10}
}

func (x *SetWorkFlowNameRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SetWorkFlowNameRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SetWorkFlowNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetWorkFlowNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetWorkFlowNameReply_Error
	//	*SetWorkFlowNameReply_Data
	Result isSetWorkFlowNameReply_Result `protobuf_oneof:"result"`
}

func (x *SetWorkFlowNameReply) Reset() {
	*x = SetWorkFlowNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowNameReply) ProtoMessage() {}

func (x *SetWorkFlowNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowNameReply.ProtoReflect.Descriptor instead.
func (*SetWorkFlowNameReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{11}
}

func (m *SetWorkFlowNameReply) GetResult() isSetWorkFlowNameReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetWorkFlowNameReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetWorkFlowNameReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetWorkFlowNameReply) GetData() string {
	if x, ok := x.GetResult().(*SetWorkFlowNameReply_Data); ok {
		return x.Data
	}
	return ""
}

type isSetWorkFlowNameReply_Result interface {
	isSetWorkFlowNameReply_Result()
}

type SetWorkFlowNameReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetWorkFlowNameReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=Data,proto3,oneof"`
}

func (*SetWorkFlowNameReply_Error) isSetWorkFlowNameReply_Result() {}

func (*SetWorkFlowNameReply_Data) isSetWorkFlowNameReply_Result() {}

// 工作流列表
type SpaceWorkFlowListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId  int64  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	FlowMode string `protobuf:"bytes,2,opt,name=flowMode,proto3" json:"flowMode,omitempty"` // state_flow | work_flow
}

func (x *SpaceWorkFlowListRequest) Reset() {
	*x = SpaceWorkFlowListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowListRequest) ProtoMessage() {}

func (x *SpaceWorkFlowListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowListRequest.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowListRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{12}
}

func (x *SpaceWorkFlowListRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowListRequest) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

type SpaceWorkFlowListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SpaceWorkFlowListReply_Error
	//	*SpaceWorkFlowListReply_Data
	Result isSpaceWorkFlowListReply_Result `protobuf_oneof:"result"`
}

func (x *SpaceWorkFlowListReply) Reset() {
	*x = SpaceWorkFlowListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowListReply) ProtoMessage() {}

func (x *SpaceWorkFlowListReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowListReply.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowListReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{13}
}

func (m *SpaceWorkFlowListReply) GetResult() isSpaceWorkFlowListReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SpaceWorkFlowListReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SpaceWorkFlowListReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SpaceWorkFlowListReply) GetData() *SpaceWorkFlowListReplyReplyData {
	if x, ok := x.GetResult().(*SpaceWorkFlowListReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSpaceWorkFlowListReply_Result interface {
	isSpaceWorkFlowListReply_Result()
}

type SpaceWorkFlowListReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SpaceWorkFlowListReply_Data struct {
	Data *SpaceWorkFlowListReplyReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SpaceWorkFlowListReply_Error) isSpaceWorkFlowListReply_Result() {}

func (*SpaceWorkFlowListReply_Data) isSpaceWorkFlowListReply_Result() {}

type SpaceWorkFlowListReplyReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SpaceWorkFlowListReplyReplyData_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SpaceWorkFlowListReplyReplyData) Reset() {
	*x = SpaceWorkFlowListReplyReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowListReplyReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowListReplyReplyData) ProtoMessage() {}

func (x *SpaceWorkFlowListReplyReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowListReplyReplyData.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowListReplyReplyData) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{14}
}

func (x *SpaceWorkFlowListReplyReplyData) GetList() []*SpaceWorkFlowListReplyReplyData_Item {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceWorkFlowListReplyReplyData) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SpaceWorkFlowListReplyReplyData_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId        int64  `protobuf:"zigzag64,4,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	WorkItemTypeId int64  `protobuf:"zigzag64,5,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	Name           string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Key            string `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`
	FlowMode       string `protobuf:"bytes,8,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	Version        int64  `protobuf:"zigzag64,9,opt,name=version,proto3" json:"version,omitempty"`
	TemplateId     int64  `protobuf:"zigzag64,10,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Ranking        int64  `protobuf:"zigzag64,11,opt,name=ranking,proto3" json:"ranking,omitempty"`
	CreatedAt      int64  `protobuf:"zigzag64,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64  `protobuf:"zigzag64,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status         int64  `protobuf:"zigzag64,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SpaceWorkFlowListReplyReplyData_Item) Reset() {
	*x = SpaceWorkFlowListReplyReplyData_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowListReplyReplyData_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowListReplyReplyData_Item) ProtoMessage() {}

func (x *SpaceWorkFlowListReplyReplyData_Item) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowListReplyReplyData_Item.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowListReplyReplyData_Item) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{15}
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkFlowListReplyReplyData_Item) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// -- 拷贝流程
type CopyWorkFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64  `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status  int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CopyWorkFlowRequest) Reset() {
	*x = CopyWorkFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyWorkFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyWorkFlowRequest) ProtoMessage() {}

func (x *CopyWorkFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyWorkFlowRequest.ProtoReflect.Descriptor instead.
func (*CopyWorkFlowRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{16}
}

func (x *CopyWorkFlowRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *CopyWorkFlowRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *CopyWorkFlowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CopyWorkFlowRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type CopyWorkFlowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CopyWorkFlowReply_Error
	//	*CopyWorkFlowReply_Data
	Result isCopyWorkFlowReply_Result `protobuf_oneof:"result"`
}

func (x *CopyWorkFlowReply) Reset() {
	*x = CopyWorkFlowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyWorkFlowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyWorkFlowReply) ProtoMessage() {}

func (x *CopyWorkFlowReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyWorkFlowReply.ProtoReflect.Descriptor instead.
func (*CopyWorkFlowReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{17}
}

func (m *CopyWorkFlowReply) GetResult() isCopyWorkFlowReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CopyWorkFlowReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*CopyWorkFlowReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CopyWorkFlowReply) GetData() *CopyWorkFlowReplyData {
	if x, ok := x.GetResult().(*CopyWorkFlowReply_Data); ok {
		return x.Data
	}
	return nil
}

type isCopyWorkFlowReply_Result interface {
	isCopyWorkFlowReply_Result()
}

type CopyWorkFlowReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CopyWorkFlowReply_Data struct {
	Data *CopyWorkFlowReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CopyWorkFlowReply_Error) isCopyWorkFlowReply_Result() {}

func (*CopyWorkFlowReply_Data) isCopyWorkFlowReply_Result() {}

type CopyWorkFlowReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId int64 `protobuf:"varint,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *CopyWorkFlowReplyData) Reset() {
	*x = CopyWorkFlowReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyWorkFlowReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyWorkFlowReplyData) ProtoMessage() {}

func (x *CopyWorkFlowReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyWorkFlowReplyData.ProtoReflect.Descriptor instead.
func (*CopyWorkFlowReplyData) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{18}
}

func (x *CopyWorkFlowReplyData) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

// -- 启用/禁用流程
type SetWorkFlowStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64 `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Status  int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetWorkFlowStatusRequest) Reset() {
	*x = SetWorkFlowStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowStatusRequest) ProtoMessage() {}

func (x *SetWorkFlowStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowStatusRequest.ProtoReflect.Descriptor instead.
func (*SetWorkFlowStatusRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{19}
}

func (x *SetWorkFlowStatusRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SetWorkFlowStatusRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SetWorkFlowStatusRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetWorkFlowStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetWorkFlowStatusReply_Error
	//	*SetWorkFlowStatusReply_Data
	Result isSetWorkFlowStatusReply_Result `protobuf_oneof:"result"`
}

func (x *SetWorkFlowStatusReply) Reset() {
	*x = SetWorkFlowStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowStatusReply) ProtoMessage() {}

func (x *SetWorkFlowStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowStatusReply.ProtoReflect.Descriptor instead.
func (*SetWorkFlowStatusReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{20}
}

func (m *SetWorkFlowStatusReply) GetResult() isSetWorkFlowStatusReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetWorkFlowStatusReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetWorkFlowStatusReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetWorkFlowStatusReply) GetData() string {
	if x, ok := x.GetResult().(*SetWorkFlowStatusReply_Data); ok {
		return x.Data
	}
	return ""
}

type isSetWorkFlowStatusReply_Result interface {
	isSetWorkFlowStatusReply_Result()
}

type SetWorkFlowStatusReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetWorkFlowStatusReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=Data,proto3,oneof"`
}

func (*SetWorkFlowStatusReply_Error) isSetWorkFlowStatusReply_Result() {}

func (*SetWorkFlowStatusReply_Data) isSetWorkFlowStatusReply_Result() {}

// -- 删除工作流程
type DelWorkFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64 `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *DelWorkFlowRequest) Reset() {
	*x = DelWorkFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWorkFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWorkFlowRequest) ProtoMessage() {}

func (x *DelWorkFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWorkFlowRequest.ProtoReflect.Descriptor instead.
func (*DelWorkFlowRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{21}
}

func (x *DelWorkFlowRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *DelWorkFlowRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

type DelWorkFlowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*DelWorkFlowReply_Error
	//	*DelWorkFlowReply_Data
	Result isDelWorkFlowReply_Result `protobuf_oneof:"result"`
}

func (x *DelWorkFlowReply) Reset() {
	*x = DelWorkFlowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelWorkFlowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWorkFlowReply) ProtoMessage() {}

func (x *DelWorkFlowReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWorkFlowReply.ProtoReflect.Descriptor instead.
func (*DelWorkFlowReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{22}
}

func (m *DelWorkFlowReply) GetResult() isDelWorkFlowReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *DelWorkFlowReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*DelWorkFlowReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *DelWorkFlowReply) GetData() string {
	if x, ok := x.GetResult().(*DelWorkFlowReply_Data); ok {
		return x.Data
	}
	return ""
}

type isDelWorkFlowReply_Result interface {
	isDelWorkFlowReply_Result()
}

type DelWorkFlowReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DelWorkFlowReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=Data,proto3,oneof"`
}

func (*DelWorkFlowReply_Error) isDelWorkFlowReply_Result() {}

func (*DelWorkFlowReply_Data) isDelWorkFlowReply_Result() {}

// -- 获取工作流程详情
type GetWorkFlowTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId    int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	TemplateId int64 `protobuf:"varint,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
}

func (x *GetWorkFlowTemplateRequest) Reset() {
	*x = GetWorkFlowTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkFlowTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkFlowTemplateRequest) ProtoMessage() {}

func (x *GetWorkFlowTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkFlowTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetWorkFlowTemplateRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{23}
}

func (x *GetWorkFlowTemplateRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetWorkFlowTemplateRequest) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

type GetWorkFlowTemplateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetWorkFlowTemplateReply_Error
	//	*GetWorkFlowTemplateReply_Data
	Result isGetWorkFlowTemplateReply_Result `protobuf_oneof:"result"`
}

func (x *GetWorkFlowTemplateReply) Reset() {
	*x = GetWorkFlowTemplateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkFlowTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkFlowTemplateReply) ProtoMessage() {}

func (x *GetWorkFlowTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkFlowTemplateReply.ProtoReflect.Descriptor instead.
func (*GetWorkFlowTemplateReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{24}
}

func (m *GetWorkFlowTemplateReply) GetResult() isGetWorkFlowTemplateReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetWorkFlowTemplateReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetWorkFlowTemplateReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetWorkFlowTemplateReply) GetData() *rsp.WorkFlowInfo {
	if x, ok := x.GetResult().(*GetWorkFlowTemplateReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetWorkFlowTemplateReply_Result interface {
	isGetWorkFlowTemplateReply_Result()
}

type GetWorkFlowTemplateReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetWorkFlowTemplateReply_Data struct {
	Data *rsp.WorkFlowInfo `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetWorkFlowTemplateReply_Error) isGetWorkFlowTemplateReply_Result() {}

func (*GetWorkFlowTemplateReply_Data) isGetWorkFlowTemplateReply_Result() {}

// -- 获取工作流程详情
type GetWorkFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64 `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *GetWorkFlowRequest) Reset() {
	*x = GetWorkFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkFlowRequest) ProtoMessage() {}

func (x *GetWorkFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkFlowRequest.ProtoReflect.Descriptor instead.
func (*GetWorkFlowRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{25}
}

func (x *GetWorkFlowRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetWorkFlowRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

type GetWorkFlowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetWorkFlowReply_Error
	//	*GetWorkFlowReply_Data
	Result isGetWorkFlowReply_Result `protobuf_oneof:"result"`
}

func (x *GetWorkFlowReply) Reset() {
	*x = GetWorkFlowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkFlowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkFlowReply) ProtoMessage() {}

func (x *GetWorkFlowReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkFlowReply.ProtoReflect.Descriptor instead.
func (*GetWorkFlowReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{26}
}

func (m *GetWorkFlowReply) GetResult() isGetWorkFlowReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetWorkFlowReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetWorkFlowReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetWorkFlowReply) GetData() *rsp.WorkFlowInfo {
	if x, ok := x.GetResult().(*GetWorkFlowReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetWorkFlowReply_Result interface {
	isGetWorkFlowReply_Result()
}

type GetWorkFlowReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetWorkFlowReply_Data struct {
	Data *rsp.WorkFlowInfo `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetWorkFlowReply_Error) isGetWorkFlowReply_Result() {}

func (*GetWorkFlowReply_Data) isGetWorkFlowReply_Result() {}

// -- 创建工作流程
type CreateWorkFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// int64 work_item_type_id = 2;  以后扩展
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status   int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	FlowMode string `protobuf:"bytes,4,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
}

func (x *CreateWorkFlowRequest) Reset() {
	*x = CreateWorkFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkFlowRequest) ProtoMessage() {}

func (x *CreateWorkFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkFlowRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkFlowRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{27}
}

func (x *CreateWorkFlowRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *CreateWorkFlowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkFlowRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateWorkFlowRequest) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

type CreateWorkFlowReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CreateWorkFlowReply_Error
	//	*CreateWorkFlowReply_Data
	Result isCreateWorkFlowReply_Result `protobuf_oneof:"result"`
}

func (x *CreateWorkFlowReply) Reset() {
	*x = CreateWorkFlowReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkFlowReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkFlowReply) ProtoMessage() {}

func (x *CreateWorkFlowReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkFlowReply.ProtoReflect.Descriptor instead.
func (*CreateWorkFlowReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{28}
}

func (m *CreateWorkFlowReply) GetResult() isCreateWorkFlowReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CreateWorkFlowReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*CreateWorkFlowReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CreateWorkFlowReply) GetData() *CreateWorkFlowReplyData {
	if x, ok := x.GetResult().(*CreateWorkFlowReply_Data); ok {
		return x.Data
	}
	return nil
}

type isCreateWorkFlowReply_Result interface {
	isCreateWorkFlowReply_Result()
}

type CreateWorkFlowReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CreateWorkFlowReply_Data struct {
	Data *CreateWorkFlowReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CreateWorkFlowReply_Error) isCreateWorkFlowReply_Result() {}

func (*CreateWorkFlowReply_Data) isCreateWorkFlowReply_Result() {}

type CreateWorkFlowReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId int64 `protobuf:"varint,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *CreateWorkFlowReplyData) Reset() {
	*x = CreateWorkFlowReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkFlowReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkFlowReplyData) ProtoMessage() {}

func (x *CreateWorkFlowReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkFlowReplyData.ProtoReflect.Descriptor instead.
func (*CreateWorkFlowReplyData) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{29}
}

func (x *CreateWorkFlowReplyData) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

// --保存流程模版配置
type SaveWorkFlowTemplateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64  `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Config  string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SaveWorkFlowTemplateConfigRequest) Reset() {
	*x = SaveWorkFlowTemplateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveWorkFlowTemplateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveWorkFlowTemplateConfigRequest) ProtoMessage() {}

func (x *SaveWorkFlowTemplateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveWorkFlowTemplateConfigRequest.ProtoReflect.Descriptor instead.
func (*SaveWorkFlowTemplateConfigRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{30}
}

func (x *SaveWorkFlowTemplateConfigRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SaveWorkFlowTemplateConfigRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SaveWorkFlowTemplateConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type SaveWorkFlowTemplateConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SaveWorkFlowTemplateConfigReply_Error
	//	*SaveWorkFlowTemplateConfigReply_Data
	Result isSaveWorkFlowTemplateConfigReply_Result `protobuf_oneof:"result"`
}

func (x *SaveWorkFlowTemplateConfigReply) Reset() {
	*x = SaveWorkFlowTemplateConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveWorkFlowTemplateConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveWorkFlowTemplateConfigReply) ProtoMessage() {}

func (x *SaveWorkFlowTemplateConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveWorkFlowTemplateConfigReply.ProtoReflect.Descriptor instead.
func (*SaveWorkFlowTemplateConfigReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{31}
}

func (m *SaveWorkFlowTemplateConfigReply) GetResult() isSaveWorkFlowTemplateConfigReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SaveWorkFlowTemplateConfigReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SaveWorkFlowTemplateConfigReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SaveWorkFlowTemplateConfigReply) GetData() string {
	if x, ok := x.GetResult().(*SaveWorkFlowTemplateConfigReply_Data); ok {
		return x.Data
	}
	return ""
}

type isSaveWorkFlowTemplateConfigReply_Result interface {
	isSaveWorkFlowTemplateConfigReply_Result()
}

type SaveWorkFlowTemplateConfigReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SaveWorkFlowTemplateConfigReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SaveWorkFlowTemplateConfigReply_Error) isSaveWorkFlowTemplateConfigReply_Result() {}

func (*SaveWorkFlowTemplateConfigReply_Data) isSaveWorkFlowTemplateConfigReply_Result() {}

// --保存状态流程模版配置
type SaveStateFlowTemplateConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	FlowId  int64  `protobuf:"varint,2,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Config  string `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *SaveStateFlowTemplateConfigRequest) Reset() {
	*x = SaveStateFlowTemplateConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveStateFlowTemplateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveStateFlowTemplateConfigRequest) ProtoMessage() {}

func (x *SaveStateFlowTemplateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveStateFlowTemplateConfigRequest.ProtoReflect.Descriptor instead.
func (*SaveStateFlowTemplateConfigRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{32}
}

func (x *SaveStateFlowTemplateConfigRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SaveStateFlowTemplateConfigRequest) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SaveStateFlowTemplateConfigRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

type SaveStateFlowTemplateConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SaveStateFlowTemplateConfigReply_Error
	//	*SaveStateFlowTemplateConfigReply_Data
	Result isSaveStateFlowTemplateConfigReply_Result `protobuf_oneof:"result"`
}

func (x *SaveStateFlowTemplateConfigReply) Reset() {
	*x = SaveStateFlowTemplateConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveStateFlowTemplateConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveStateFlowTemplateConfigReply) ProtoMessage() {}

func (x *SaveStateFlowTemplateConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveStateFlowTemplateConfigReply.ProtoReflect.Descriptor instead.
func (*SaveStateFlowTemplateConfigReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{33}
}

func (m *SaveStateFlowTemplateConfigReply) GetResult() isSaveStateFlowTemplateConfigReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SaveStateFlowTemplateConfigReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SaveStateFlowTemplateConfigReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SaveStateFlowTemplateConfigReply) GetData() string {
	if x, ok := x.GetResult().(*SaveStateFlowTemplateConfigReply_Data); ok {
		return x.Data
	}
	return ""
}

type isSaveStateFlowTemplateConfigReply_Result interface {
	isSaveStateFlowTemplateConfigReply_Result()
}

type SaveStateFlowTemplateConfigReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SaveStateFlowTemplateConfigReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SaveStateFlowTemplateConfigReply_Error) isSaveStateFlowTemplateConfigReply_Result() {}

func (*SaveStateFlowTemplateConfigReply_Data) isSaveStateFlowTemplateConfigReply_Result() {}

// ---设置工作流排序
type SetWorkFlowRankingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64                             `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	List    []*SetWorkFlowRankingRequest_List `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SetWorkFlowRankingRequest) Reset() {
	*x = SetWorkFlowRankingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowRankingRequest) ProtoMessage() {}

func (x *SetWorkFlowRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowRankingRequest.ProtoReflect.Descriptor instead.
func (*SetWorkFlowRankingRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{34}
}

func (x *SetWorkFlowRankingRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SetWorkFlowRankingRequest) GetList() []*SetWorkFlowRankingRequest_List {
	if x != nil {
		return x.List
	}
	return nil
}

type SetWorkFlowRankingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetWorkFlowRankingReply_Error
	//	*SetWorkFlowRankingReply_Data
	Result isSetWorkFlowRankingReply_Result `protobuf_oneof:"result"`
}

func (x *SetWorkFlowRankingReply) Reset() {
	*x = SetWorkFlowRankingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowRankingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowRankingReply) ProtoMessage() {}

func (x *SetWorkFlowRankingReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowRankingReply.ProtoReflect.Descriptor instead.
func (*SetWorkFlowRankingReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{35}
}

func (m *SetWorkFlowRankingReply) GetResult() isSetWorkFlowRankingReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetWorkFlowRankingReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetWorkFlowRankingReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetWorkFlowRankingReply) GetData() string {
	if x, ok := x.GetResult().(*SetWorkFlowRankingReply_Data); ok {
		return x.Data
	}
	return ""
}

type isSetWorkFlowRankingReply_Result interface {
	isSetWorkFlowRankingReply_Result()
}

type SetWorkFlowRankingReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetWorkFlowRankingReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SetWorkFlowRankingReply_Error) isSetWorkFlowRankingReply_Result() {}

func (*SetWorkFlowRankingReply_Data) isSetWorkFlowRankingReply_Result() {}

// 工作流列表(视图)
type SpaceWorkFlowPageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Status  int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SpaceWorkFlowPageListRequest) Reset() {
	*x = SpaceWorkFlowPageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowPageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowPageListRequest) ProtoMessage() {}

func (x *SpaceWorkFlowPageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowPageListRequest.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowPageListRequest) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{36}
}

func (x *SpaceWorkFlowPageListRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowPageListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SpaceWorkFlowPageListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SpaceWorkFlowPageListReply_Error
	//	*SpaceWorkFlowPageListReply_Data
	Result isSpaceWorkFlowPageListReply_Result `protobuf_oneof:"result"`
}

func (x *SpaceWorkFlowPageListReply) Reset() {
	*x = SpaceWorkFlowPageListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowPageListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowPageListReply) ProtoMessage() {}

func (x *SpaceWorkFlowPageListReply) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowPageListReply.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowPageListReply) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{37}
}

func (m *SpaceWorkFlowPageListReply) GetResult() isSpaceWorkFlowPageListReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SpaceWorkFlowPageListReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SpaceWorkFlowPageListReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SpaceWorkFlowPageListReply) GetData() *SpaceWorkFlowPageListReplyResult {
	if x, ok := x.GetResult().(*SpaceWorkFlowPageListReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSpaceWorkFlowPageListReply_Result interface {
	isSpaceWorkFlowPageListReply_Result()
}

type SpaceWorkFlowPageListReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SpaceWorkFlowPageListReply_Data struct {
	Data *SpaceWorkFlowPageListReplyResult `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SpaceWorkFlowPageListReply_Error) isSpaceWorkFlowPageListReply_Result() {}

func (*SpaceWorkFlowPageListReply_Data) isSpaceWorkFlowPageListReply_Result() {}

type SpaceWorkFlowPageListReplyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*SpaceWorkFlowPageListReplyResult_Item `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32                                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SpaceWorkFlowPageListReplyResult) Reset() {
	*x = SpaceWorkFlowPageListReplyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowPageListReplyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowPageListReplyResult) ProtoMessage() {}

func (x *SpaceWorkFlowPageListReplyResult) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowPageListReplyResult.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowPageListReplyResult) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{38}
}

func (x *SpaceWorkFlowPageListReplyResult) GetList() []*SpaceWorkFlowPageListReplyResult_Item {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceWorkFlowPageListReplyResult) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type WorkFlowConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes       []*WorkFlowConf_Node       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Connections []*WorkFlowConf_Connection `protobuf:"bytes,2,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *WorkFlowConf) Reset() {
	*x = WorkFlowConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowConf) ProtoMessage() {}

func (x *WorkFlowConf) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowConf.ProtoReflect.Descriptor instead.
func (*WorkFlowConf) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{39}
}

func (x *WorkFlowConf) GetNodes() []*WorkFlowConf_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *WorkFlowConf) GetConnections() []*WorkFlowConf_Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type StateFlowConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateFlowNodes          []*StateFlowConf_Node       `protobuf:"bytes,1,rep,name=stateFlowNodes,proto3" json:"stateFlowNodes,omitempty"`
	StateFlowTransitionRule []*StateFlowConf_Connection `protobuf:"bytes,2,rep,name=StateFlowTransitionRule,proto3" json:"StateFlowTransitionRule,omitempty"`
}

func (x *StateFlowConf) Reset() {
	*x = StateFlowConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowConf) ProtoMessage() {}

func (x *StateFlowConf) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowConf.ProtoReflect.Descriptor instead.
func (*StateFlowConf) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{40}
}

func (x *StateFlowConf) GetStateFlowNodes() []*StateFlowConf_Node {
	if x != nil {
		return x.StateFlowNodes
	}
	return nil
}

func (x *StateFlowConf) GetStateFlowTransitionRule() []*StateFlowConf_Connection {
	if x != nil {
		return x.StateFlowTransitionRule
	}
	return nil
}

type GetOwnerRuleRelationTemplateReplyData_Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetOwnerRuleRelationTemplateReplyData_Template) Reset() {
	*x = GetOwnerRuleRelationTemplateReplyData_Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnerRuleRelationTemplateReplyData_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnerRuleRelationTemplateReplyData_Template) ProtoMessage() {}

func (x *GetOwnerRuleRelationTemplateReplyData_Template) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnerRuleRelationTemplateReplyData_Template.ProtoReflect.Descriptor instead.
func (*GetOwnerRuleRelationTemplateReplyData_Template) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GetOwnerRuleRelationTemplateReplyData_Template) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetOwnerRuleRelationTemplateReplyData_Template) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetWorkFlowRankingRequest_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Ranking int64 `protobuf:"varint,3,opt,name=ranking,proto3" json:"ranking,omitempty"`
}

func (x *SetWorkFlowRankingRequest_List) Reset() {
	*x = SetWorkFlowRankingRequest_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWorkFlowRankingRequest_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWorkFlowRankingRequest_List) ProtoMessage() {}

func (x *SetWorkFlowRankingRequest_List) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWorkFlowRankingRequest_List.ProtoReflect.Descriptor instead.
func (*SetWorkFlowRankingRequest_List) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{34, 0}
}

func (x *SetWorkFlowRankingRequest_List) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetWorkFlowRankingRequest_List) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

type SpaceWorkFlowPageListReplyResult_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        int64          `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Version       int64          `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	TemplateId    int64          `protobuf:"varint,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	SpaceId       int64          `protobuf:"varint,6,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	CreatedAt     int64          `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64          `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserId        int64          `protobuf:"varint,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsSys         int64          `protobuf:"varint,11,opt,name=is_sys,json=isSys,proto3" json:"is_sys,omitempty"`
	Ranking       int64          `protobuf:"varint,12,opt,name=ranking,proto3" json:"ranking,omitempty"`
	FlowMode      string         `protobuf:"bytes,13,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	WorkFlowConf  *WorkFlowConf  `protobuf:"bytes,10,opt,name=work_flow_conf,json=workFlowConf,proto3" json:"work_flow_conf,omitempty"`
	StateFlowConf *StateFlowConf `protobuf:"bytes,14,opt,name=state_flow_conf,json=stateFlowConf,proto3" json:"state_flow_conf,omitempty"`
}

func (x *SpaceWorkFlowPageListReplyResult_Item) Reset() {
	*x = SpaceWorkFlowPageListReplyResult_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowPageListReplyResult_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowPageListReplyResult_Item) ProtoMessage() {}

func (x *SpaceWorkFlowPageListReplyResult_Item) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowPageListReplyResult_Item.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowPageListReplyResult_Item) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{38, 0}
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetIsSys() int64 {
	if x != nil {
		return x.IsSys
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetWorkFlowConf() *WorkFlowConf {
	if x != nil {
		return x.WorkFlowConf
	}
	return nil
}

func (x *SpaceWorkFlowPageListReplyResult_Item) GetStateFlowConf() *StateFlowConf {
	if x != nil {
		return x.StateFlowConf
	}
	return nil
}

type WorkFlowConf_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *WorkFlowConf_Node) Reset() {
	*x = WorkFlowConf_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowConf_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowConf_Node) ProtoMessage() {}

func (x *WorkFlowConf_Node) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowConf_Node.ProtoReflect.Descriptor instead.
func (*WorkFlowConf_Node) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{39, 0}
}

func (x *WorkFlowConf_Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkFlowConf_Node) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WorkFlowConf_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始节点编码
	StartNode string `protobuf:"bytes,1,opt,name=start_node,json=startNode,proto3" json:"start_node,omitempty"`
	// 结束节点编码
	EndNode string `protobuf:"bytes,2,opt,name=end_node,json=endNode,proto3" json:"end_node,omitempty"`
}

func (x *WorkFlowConf_Connection) Reset() {
	*x = WorkFlowConf_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowConf_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowConf_Connection) ProtoMessage() {}

func (x *WorkFlowConf_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowConf_Connection.ProtoReflect.Descriptor instead.
func (*WorkFlowConf_Connection) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{39, 1}
}

func (x *WorkFlowConf_Connection) GetStartNode() string {
	if x != nil {
		return x.StartNode
	}
	return ""
}

func (x *WorkFlowConf_Connection) GetEndNode() string {
	if x != nil {
		return x.EndNode
	}
	return ""
}

type StateFlowConf_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key             string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	StatusType      int64  `protobuf:"varint,3,opt,name=status_type,json=statusType,proto3" json:"status_type,omitempty"`
	IsInitState     bool   `protobuf:"varint,4,opt,name=is_init_state,json=isInitState,proto3" json:"is_init_state,omitempty"`
	IsArchivedState bool   `protobuf:"varint,5,opt,name=is_archived_state,json=isArchivedState,proto3" json:"is_archived_state,omitempty"`
}

func (x *StateFlowConf_Node) Reset() {
	*x = StateFlowConf_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowConf_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowConf_Node) ProtoMessage() {}

func (x *StateFlowConf_Node) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowConf_Node.ProtoReflect.Descriptor instead.
func (*StateFlowConf_Node) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{40, 0}
}

func (x *StateFlowConf_Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateFlowConf_Node) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StateFlowConf_Node) GetStatusType() int64 {
	if x != nil {
		return x.StatusType
	}
	return 0
}

func (x *StateFlowConf_Node) GetIsInitState() bool {
	if x != nil {
		return x.IsInitState
	}
	return false
}

func (x *StateFlowConf_Node) GetIsArchivedState() bool {
	if x != nil {
		return x.IsArchivedState
	}
	return false
}

type StateFlowConf_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 开始节点编码
	SourceStateKey string `protobuf:"bytes,1,opt,name=sourceStateKey,proto3" json:"sourceStateKey,omitempty"`
	// 结束节点编码
	TargetStateKey string `protobuf:"bytes,2,opt,name=targetStateKey,proto3" json:"targetStateKey,omitempty"`
}

func (x *StateFlowConf_Connection) Reset() {
	*x = StateFlowConf_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_work_flow_v1_work_flow_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowConf_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowConf_Connection) ProtoMessage() {}

func (x *StateFlowConf_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_work_flow_v1_work_flow_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowConf_Connection.ProtoReflect.Descriptor instead.
func (*StateFlowConf_Connection) Descriptor() ([]byte, []int) {
	return file_work_flow_v1_work_flow_proto_rawDescGZIP(), []int{40, 1}
}

func (x *StateFlowConf_Connection) GetSourceStateKey() string {
	if x != nil {
		return x.SourceStateKey
	}
	return ""
}

func (x *StateFlowConf_Connection) GetTargetStateKey() string {
	if x != nil {
		return x.TargetStateKey
	}
	return ""
}

var File_work_flow_v1_work_flow_proto protoreflect.FileDescriptor

var file_work_flow_v1_work_flow_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x76, 0x6f, 0x2f, 0x72, 0x73, 0x70, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x39, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x46, 0x0a, 0x18, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x1a, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xcd, 0x02, 0x0a, 0x1f, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x50, 0x0a, 0x18, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x16,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x47, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xea, 0x02, 0x0a, 0x24, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x6f, 0x70, 0x79, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x11, 0x43, 0x6f, 0x70, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x70,
	0x79, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x30, 0x0a, 0x15, 0x43, 0x6f, 0x70, 0x79, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x48, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x76, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f,
	0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x6c,
	0x6f, 0x77, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x7b, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x32, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49,
	0x64, 0x22, 0x6f, 0x0a, 0x21, 0x53, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f,
	0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x6a, 0x0a, 0x1f, 0x53, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x70,
	0x0a, 0x22, 0x53, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x6b, 0x0a, 0x20, 0x53, 0x61, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xae, 0x01,
	0x0a, 0x19, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x30, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x62,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x50, 0x0a, 0x1c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xd4, 0x04, 0x0a, 0x20, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xcc, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x73, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x53, 0x79,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x47,
	0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x39, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x2c, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x46,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xc1, 0x03, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x4c, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x66, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x64, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x17, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x1a, 0x9d, 0x01, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x5c, 0x0a, 0x0a,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x32, 0xed, 0x10, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x9f, 0x01, 0x0a, 0x15, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x6d, 0x79,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x11, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f,
	0x77, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01,
	0x2a, 0x22, 0x18, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x11,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a,
	0x01, 0x2a, 0x22, 0x19, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x98, 0x01,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x74, 0x12, 0xb9, 0x01, 0x0a, 0x1a, 0x53, 0x61, 0x76,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x6d, 0x79, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x73, 0x61, 0x76, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x77,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a,
	0x01, 0x2a, 0x22, 0x13, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x7b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x6d, 0x79,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x64, 0x65, 0x6c, 0x12, 0x94, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x6d, 0x79,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73, 0x65, 0x74, 0x12, 0x7f, 0x0a, 0x0c, 0x43,
	0x6f, 0x70, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x70, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x01, 0x2a, 0x22, 0x18, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x70, 0x79, 0x12, 0x8c, 0x01, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f,
	0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a,
	0x01, 0x2a, 0x22, 0x2c, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0xc7, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22, 0x30, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x35, 0x0a, 0x16, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x19, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_work_flow_v1_work_flow_proto_rawDescOnce sync.Once
	file_work_flow_v1_work_flow_proto_rawDescData = file_work_flow_v1_work_flow_proto_rawDesc
)

func file_work_flow_v1_work_flow_proto_rawDescGZIP() []byte {
	file_work_flow_v1_work_flow_proto_rawDescOnce.Do(func() {
		file_work_flow_v1_work_flow_proto_rawDescData = protoimpl.X.CompressGZIP(file_work_flow_v1_work_flow_proto_rawDescData)
	})
	return file_work_flow_v1_work_flow_proto_rawDescData
}

var file_work_flow_v1_work_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_work_flow_v1_work_flow_proto_goTypes = []interface{}{
	(*GetOwnerRuleRelationTemplateRequest)(nil),            // 0: api.work_flow.v1.GetOwnerRuleRelationTemplateRequest
	(*GetOwnerRuleRelationTemplateReply)(nil),              // 1: api.work_flow.v1.GetOwnerRuleRelationTemplateReply
	(*GetOwnerRuleRelationTemplateReplyData)(nil),          // 2: api.work_flow.v1.GetOwnerRuleRelationTemplateReplyData
	(*GetWorkItemRelationCountRequest)(nil),                // 3: api.work_flow.v1.GetWorkItemRelationCountRequest
	(*GetWorkItemRelationCountReply)(nil),                  // 4: api.work_flow.v1.GetWorkItemRelationCountReply
	(*GetWorkItemRelationCountReplyData)(nil),              // 5: api.work_flow.v1.GetWorkItemRelationCountReplyData
	(*SpaceWorkFlowByIdRequest)(nil),                       // 6: api.work_flow.v1.SpaceWorkFlowByIdRequest
	(*SpaceWorkFlowByIdReply)(nil),                         // 7: api.work_flow.v1.SpaceWorkFlowByIdReply
	(*SpaceWorkFlowByIdReplyData)(nil),                     // 8: api.work_flow.v1.SpaceWorkFlowByIdReplyData
	(*SpaceWorkFlowByIdReplyData_Item)(nil),                // 9: api.work_flow.v1.SpaceWorkFlowByIdReplyData_Item
	(*SetWorkFlowNameRequest)(nil),                         // 10: api.work_flow.v1.SetWorkFlowNameRequest
	(*SetWorkFlowNameReply)(nil),                           // 11: api.work_flow.v1.SetWorkFlowNameReply
	(*SpaceWorkFlowListRequest)(nil),                       // 12: api.work_flow.v1.SpaceWorkFlowListRequest
	(*SpaceWorkFlowListReply)(nil),                         // 13: api.work_flow.v1.SpaceWorkFlowListReply
	(*SpaceWorkFlowListReplyReplyData)(nil),                // 14: api.work_flow.v1.SpaceWorkFlowListReplyReplyData
	(*SpaceWorkFlowListReplyReplyData_Item)(nil),           // 15: api.work_flow.v1.SpaceWorkFlowListReplyReplyData_Item
	(*CopyWorkFlowRequest)(nil),                            // 16: api.work_flow.v1.CopyWorkFlowRequest
	(*CopyWorkFlowReply)(nil),                              // 17: api.work_flow.v1.CopyWorkFlowReply
	(*CopyWorkFlowReplyData)(nil),                          // 18: api.work_flow.v1.CopyWorkFlowReplyData
	(*SetWorkFlowStatusRequest)(nil),                       // 19: api.work_flow.v1.SetWorkFlowStatusRequest
	(*SetWorkFlowStatusReply)(nil),                         // 20: api.work_flow.v1.SetWorkFlowStatusReply
	(*DelWorkFlowRequest)(nil),                             // 21: api.work_flow.v1.DelWorkFlowRequest
	(*DelWorkFlowReply)(nil),                               // 22: api.work_flow.v1.DelWorkFlowReply
	(*GetWorkFlowTemplateRequest)(nil),                     // 23: api.work_flow.v1.GetWorkFlowTemplateRequest
	(*GetWorkFlowTemplateReply)(nil),                       // 24: api.work_flow.v1.GetWorkFlowTemplateReply
	(*GetWorkFlowRequest)(nil),                             // 25: api.work_flow.v1.GetWorkFlowRequest
	(*GetWorkFlowReply)(nil),                               // 26: api.work_flow.v1.GetWorkFlowReply
	(*CreateWorkFlowRequest)(nil),                          // 27: api.work_flow.v1.CreateWorkFlowRequest
	(*CreateWorkFlowReply)(nil),                            // 28: api.work_flow.v1.CreateWorkFlowReply
	(*CreateWorkFlowReplyData)(nil),                        // 29: api.work_flow.v1.CreateWorkFlowReplyData
	(*SaveWorkFlowTemplateConfigRequest)(nil),              // 30: api.work_flow.v1.SaveWorkFlowTemplateConfigRequest
	(*SaveWorkFlowTemplateConfigReply)(nil),                // 31: api.work_flow.v1.SaveWorkFlowTemplateConfigReply
	(*SaveStateFlowTemplateConfigRequest)(nil),             // 32: api.work_flow.v1.SaveStateFlowTemplateConfigRequest
	(*SaveStateFlowTemplateConfigReply)(nil),               // 33: api.work_flow.v1.SaveStateFlowTemplateConfigReply
	(*SetWorkFlowRankingRequest)(nil),                      // 34: api.work_flow.v1.SetWorkFlowRankingRequest
	(*SetWorkFlowRankingReply)(nil),                        // 35: api.work_flow.v1.SetWorkFlowRankingReply
	(*SpaceWorkFlowPageListRequest)(nil),                   // 36: api.work_flow.v1.SpaceWorkFlowPageListRequest
	(*SpaceWorkFlowPageListReply)(nil),                     // 37: api.work_flow.v1.SpaceWorkFlowPageListReply
	(*SpaceWorkFlowPageListReplyResult)(nil),               // 38: api.work_flow.v1.SpaceWorkFlowPageListReplyResult
	(*WorkFlowConf)(nil),                                   // 39: api.work_flow.v1.WorkFlowConf
	(*StateFlowConf)(nil),                                  // 40: api.work_flow.v1.StateFlowConf
	(*GetOwnerRuleRelationTemplateReplyData_Template)(nil), // 41: api.work_flow.v1.GetOwnerRuleRelationTemplateReplyData.Template
	(*SetWorkFlowRankingRequest_List)(nil),                 // 42: api.work_flow.v1.SetWorkFlowRankingRequest.List
	(*SpaceWorkFlowPageListReplyResult_Item)(nil),          // 43: api.work_flow.v1.SpaceWorkFlowPageListReplyResult.Item
	(*WorkFlowConf_Node)(nil),                              // 44: api.work_flow.v1.WorkFlowConf.Node
	(*WorkFlowConf_Connection)(nil),                        // 45: api.work_flow.v1.WorkFlowConf.Connection
	(*StateFlowConf_Node)(nil),                             // 46: api.work_flow.v1.StateFlowConf.Node
	(*StateFlowConf_Connection)(nil),                       // 47: api.work_flow.v1.StateFlowConf.Connection
	(*comm.ErrorInfo)(nil),                                 // 48: comm.ErrorInfo
	(*rsp.WorkFlowInfo)(nil),                               // 49: rsp.WorkFlowInfo
}
var file_work_flow_v1_work_flow_proto_depIdxs = []int32{
	48, // 0: api.work_flow.v1.GetOwnerRuleRelationTemplateReply.error:type_name -> comm.ErrorInfo
	2,  // 1: api.work_flow.v1.GetOwnerRuleRelationTemplateReply.data:type_name -> api.work_flow.v1.GetOwnerRuleRelationTemplateReplyData
	41, // 2: api.work_flow.v1.GetOwnerRuleRelationTemplateReplyData.list:type_name -> api.work_flow.v1.GetOwnerRuleRelationTemplateReplyData.Template
	48, // 3: api.work_flow.v1.GetWorkItemRelationCountReply.error:type_name -> comm.ErrorInfo
	5,  // 4: api.work_flow.v1.GetWorkItemRelationCountReply.data:type_name -> api.work_flow.v1.GetWorkItemRelationCountReplyData
	48, // 5: api.work_flow.v1.SpaceWorkFlowByIdReply.error:type_name -> comm.ErrorInfo
	8,  // 6: api.work_flow.v1.SpaceWorkFlowByIdReply.data:type_name -> api.work_flow.v1.SpaceWorkFlowByIdReplyData
	9,  // 7: api.work_flow.v1.SpaceWorkFlowByIdReplyData.list:type_name -> api.work_flow.v1.SpaceWorkFlowByIdReplyData_Item
	48, // 8: api.work_flow.v1.SetWorkFlowNameReply.error:type_name -> comm.ErrorInfo
	48, // 9: api.work_flow.v1.SpaceWorkFlowListReply.error:type_name -> comm.ErrorInfo
	14, // 10: api.work_flow.v1.SpaceWorkFlowListReply.data:type_name -> api.work_flow.v1.SpaceWorkFlowListReplyReplyData
	15, // 11: api.work_flow.v1.SpaceWorkFlowListReplyReplyData.list:type_name -> api.work_flow.v1.SpaceWorkFlowListReplyReplyData_Item
	48, // 12: api.work_flow.v1.CopyWorkFlowReply.error:type_name -> comm.ErrorInfo
	18, // 13: api.work_flow.v1.CopyWorkFlowReply.data:type_name -> api.work_flow.v1.CopyWorkFlowReplyData
	48, // 14: api.work_flow.v1.SetWorkFlowStatusReply.error:type_name -> comm.ErrorInfo
	48, // 15: api.work_flow.v1.DelWorkFlowReply.error:type_name -> comm.ErrorInfo
	48, // 16: api.work_flow.v1.GetWorkFlowTemplateReply.error:type_name -> comm.ErrorInfo
	49, // 17: api.work_flow.v1.GetWorkFlowTemplateReply.data:type_name -> rsp.WorkFlowInfo
	48, // 18: api.work_flow.v1.GetWorkFlowReply.error:type_name -> comm.ErrorInfo
	49, // 19: api.work_flow.v1.GetWorkFlowReply.data:type_name -> rsp.WorkFlowInfo
	48, // 20: api.work_flow.v1.CreateWorkFlowReply.error:type_name -> comm.ErrorInfo
	29, // 21: api.work_flow.v1.CreateWorkFlowReply.data:type_name -> api.work_flow.v1.CreateWorkFlowReplyData
	48, // 22: api.work_flow.v1.SaveWorkFlowTemplateConfigReply.error:type_name -> comm.ErrorInfo
	48, // 23: api.work_flow.v1.SaveStateFlowTemplateConfigReply.error:type_name -> comm.ErrorInfo
	42, // 24: api.work_flow.v1.SetWorkFlowRankingRequest.list:type_name -> api.work_flow.v1.SetWorkFlowRankingRequest.List
	48, // 25: api.work_flow.v1.SetWorkFlowRankingReply.error:type_name -> comm.ErrorInfo
	48, // 26: api.work_flow.v1.SpaceWorkFlowPageListReply.error:type_name -> comm.ErrorInfo
	38, // 27: api.work_flow.v1.SpaceWorkFlowPageListReply.data:type_name -> api.work_flow.v1.SpaceWorkFlowPageListReplyResult
	43, // 28: api.work_flow.v1.SpaceWorkFlowPageListReplyResult.list:type_name -> api.work_flow.v1.SpaceWorkFlowPageListReplyResult.Item
	44, // 29: api.work_flow.v1.WorkFlowConf.nodes:type_name -> api.work_flow.v1.WorkFlowConf.Node
	45, // 30: api.work_flow.v1.WorkFlowConf.connections:type_name -> api.work_flow.v1.WorkFlowConf.Connection
	46, // 31: api.work_flow.v1.StateFlowConf.stateFlowNodes:type_name -> api.work_flow.v1.StateFlowConf.Node
	47, // 32: api.work_flow.v1.StateFlowConf.StateFlowTransitionRule:type_name -> api.work_flow.v1.StateFlowConf.Connection
	39, // 33: api.work_flow.v1.SpaceWorkFlowPageListReplyResult.Item.work_flow_conf:type_name -> api.work_flow.v1.WorkFlowConf
	40, // 34: api.work_flow.v1.SpaceWorkFlowPageListReplyResult.Item.state_flow_conf:type_name -> api.work_flow.v1.StateFlowConf
	36, // 35: api.work_flow.v1.work_flow.SpaceWorkFlowPageList:input_type -> api.work_flow.v1.SpaceWorkFlowPageListRequest
	12, // 36: api.work_flow.v1.work_flow.SpaceWorkFlowList:input_type -> api.work_flow.v1.SpaceWorkFlowListRequest
	6,  // 37: api.work_flow.v1.work_flow.SpaceWorkFlowById:input_type -> api.work_flow.v1.SpaceWorkFlowByIdRequest
	34, // 38: api.work_flow.v1.work_flow.SetWorkFlowRanking:input_type -> api.work_flow.v1.SetWorkFlowRankingRequest
	30, // 39: api.work_flow.v1.work_flow.SaveWorkFlowTemplateConfig:input_type -> api.work_flow.v1.SaveWorkFlowTemplateConfigRequest
	27, // 40: api.work_flow.v1.work_flow.CreateWorkFlow:input_type -> api.work_flow.v1.CreateWorkFlowRequest
	25, // 41: api.work_flow.v1.work_flow.GetWorkFlow:input_type -> api.work_flow.v1.GetWorkFlowRequest
	21, // 42: api.work_flow.v1.work_flow.DelWorkFlow:input_type -> api.work_flow.v1.DelWorkFlowRequest
	19, // 43: api.work_flow.v1.work_flow.SetWorkFlowStatus:input_type -> api.work_flow.v1.SetWorkFlowStatusRequest
	16, // 44: api.work_flow.v1.work_flow.CopyWorkFlow:input_type -> api.work_flow.v1.CopyWorkFlowRequest
	10, // 45: api.work_flow.v1.work_flow.SetWorkFlowName:input_type -> api.work_flow.v1.SetWorkFlowNameRequest
	23, // 46: api.work_flow.v1.work_flow.GetWorkFlowTemplate:input_type -> api.work_flow.v1.GetWorkFlowTemplateRequest
	3,  // 47: api.work_flow.v1.work_flow.GetWorkItemRelationCount:input_type -> api.work_flow.v1.GetWorkItemRelationCountRequest
	0,  // 48: api.work_flow.v1.work_flow.GetOwnerRuleRelationTemplate:input_type -> api.work_flow.v1.GetOwnerRuleRelationTemplateRequest
	37, // 49: api.work_flow.v1.work_flow.SpaceWorkFlowPageList:output_type -> api.work_flow.v1.SpaceWorkFlowPageListReply
	13, // 50: api.work_flow.v1.work_flow.SpaceWorkFlowList:output_type -> api.work_flow.v1.SpaceWorkFlowListReply
	7,  // 51: api.work_flow.v1.work_flow.SpaceWorkFlowById:output_type -> api.work_flow.v1.SpaceWorkFlowByIdReply
	35, // 52: api.work_flow.v1.work_flow.SetWorkFlowRanking:output_type -> api.work_flow.v1.SetWorkFlowRankingReply
	31, // 53: api.work_flow.v1.work_flow.SaveWorkFlowTemplateConfig:output_type -> api.work_flow.v1.SaveWorkFlowTemplateConfigReply
	28, // 54: api.work_flow.v1.work_flow.CreateWorkFlow:output_type -> api.work_flow.v1.CreateWorkFlowReply
	26, // 55: api.work_flow.v1.work_flow.GetWorkFlow:output_type -> api.work_flow.v1.GetWorkFlowReply
	22, // 56: api.work_flow.v1.work_flow.DelWorkFlow:output_type -> api.work_flow.v1.DelWorkFlowReply
	20, // 57: api.work_flow.v1.work_flow.SetWorkFlowStatus:output_type -> api.work_flow.v1.SetWorkFlowStatusReply
	17, // 58: api.work_flow.v1.work_flow.CopyWorkFlow:output_type -> api.work_flow.v1.CopyWorkFlowReply
	11, // 59: api.work_flow.v1.work_flow.SetWorkFlowName:output_type -> api.work_flow.v1.SetWorkFlowNameReply
	24, // 60: api.work_flow.v1.work_flow.GetWorkFlowTemplate:output_type -> api.work_flow.v1.GetWorkFlowTemplateReply
	4,  // 61: api.work_flow.v1.work_flow.GetWorkItemRelationCount:output_type -> api.work_flow.v1.GetWorkItemRelationCountReply
	1,  // 62: api.work_flow.v1.work_flow.GetOwnerRuleRelationTemplate:output_type -> api.work_flow.v1.GetOwnerRuleRelationTemplateReply
	49, // [49:63] is the sub-list for method output_type
	35, // [35:49] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_work_flow_v1_work_flow_proto_init() }
func file_work_flow_v1_work_flow_proto_init() {
	if File_work_flow_v1_work_flow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_work_flow_v1_work_flow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnerRuleRelationTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnerRuleRelationTemplateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnerRuleRelationTemplateReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkItemRelationCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkItemRelationCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkItemRelationCountReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowByIdReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowByIdReplyData_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowListReplyReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowListReplyReplyData_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyWorkFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyWorkFlowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyWorkFlowReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWorkFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelWorkFlowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkFlowTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkFlowTemplateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkFlowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkFlowReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkFlowReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveWorkFlowTemplateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveWorkFlowTemplateConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveStateFlowTemplateConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveStateFlowTemplateConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowRankingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowRankingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowPageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowPageListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowPageListReplyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnerRuleRelationTemplateReplyData_Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWorkFlowRankingRequest_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowPageListReplyResult_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowConf_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowConf_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowConf_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_work_flow_v1_work_flow_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowConf_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_work_flow_v1_work_flow_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetOwnerRuleRelationTemplateReply_Error)(nil),
		(*GetOwnerRuleRelationTemplateReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetWorkItemRelationCountReply_Error)(nil),
		(*GetWorkItemRelationCountReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SpaceWorkFlowByIdReply_Error)(nil),
		(*SpaceWorkFlowByIdReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SetWorkFlowNameReply_Error)(nil),
		(*SetWorkFlowNameReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SpaceWorkFlowListReply_Error)(nil),
		(*SpaceWorkFlowListReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*CopyWorkFlowReply_Error)(nil),
		(*CopyWorkFlowReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*SetWorkFlowStatusReply_Error)(nil),
		(*SetWorkFlowStatusReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*DelWorkFlowReply_Error)(nil),
		(*DelWorkFlowReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*GetWorkFlowTemplateReply_Error)(nil),
		(*GetWorkFlowTemplateReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*GetWorkFlowReply_Error)(nil),
		(*GetWorkFlowReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*CreateWorkFlowReply_Error)(nil),
		(*CreateWorkFlowReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*SaveWorkFlowTemplateConfigReply_Error)(nil),
		(*SaveWorkFlowTemplateConfigReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*SaveStateFlowTemplateConfigReply_Error)(nil),
		(*SaveStateFlowTemplateConfigReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*SetWorkFlowRankingReply_Error)(nil),
		(*SetWorkFlowRankingReply_Data)(nil),
	}
	file_work_flow_v1_work_flow_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*SpaceWorkFlowPageListReply_Error)(nil),
		(*SpaceWorkFlowPageListReply_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_work_flow_v1_work_flow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_work_flow_v1_work_flow_proto_goTypes,
		DependencyIndexes: file_work_flow_v1_work_flow_proto_depIdxs,
		MessageInfos:      file_work_flow_v1_work_flow_proto_msgTypes,
	}.Build()
	File_work_flow_v1_work_flow_proto = out.File
	file_work_flow_v1_work_flow_proto_rawDesc = nil
	file_work_flow_v1_work_flow_proto_goTypes = nil
	file_work_flow_v1_work_flow_proto_depIdxs = nil
}
