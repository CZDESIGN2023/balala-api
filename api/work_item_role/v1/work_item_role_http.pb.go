// Code generated by protoc-gen-go-http. DO NOT EDIT.
// versions:
// - protoc-gen-go-http v2.7.0
// - protoc             v4.24.4
// source: work_item_role/v1/work_item_role.proto

package v1

import (
	context "context"
	http "github.com/go-kratos/kratos/v2/transport/http"
	binding "github.com/go-kratos/kratos/v2/transport/http/binding"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(context.Context)
var _ = binding.EncodeURL

const _ = http.SupportPackageIsVersion1

const OperationWorkItemRoleCreateSpaceWorkItemRole = "/api.work_item_role.v1.WorkItemRole/CreateSpaceWorkItemRole"
const OperationWorkItemRoleDelSpaceWorkItemRole = "/api.work_item_role.v1.WorkItemRole/DelSpaceWorkItemRole"
const OperationWorkItemRoleGetTemplateRelationCount = "/api.work_item_role.v1.WorkItemRole/GetTemplateRelationCount"
const OperationWorkItemRoleGetWorkItemRelationCount = "/api.work_item_role.v1.WorkItemRole/GetWorkItemRelationCount"
const OperationWorkItemRoleQSpaceRoleList = "/api.work_item_role.v1.WorkItemRole/QSpaceRoleList"
const OperationWorkItemRoleSetSpaceWorkItemRoleName = "/api.work_item_role.v1.WorkItemRole/SetSpaceWorkItemRoleName"
const OperationWorkItemRoleSetSpaceWorkItemRoleRanking = "/api.work_item_role.v1.WorkItemRole/SetSpaceWorkItemRoleRanking"

type WorkItemRoleHTTPServer interface {
	CreateSpaceWorkItemRole(context.Context, *CreateSpaceWorkItemRoleRequest) (*CreateSpaceWorkItemRoleReply, error)
	DelSpaceWorkItemRole(context.Context, *DelSpaceWorkItemRoleRequest) (*DelSpaceWorkItemRoleReply, error)
	GetTemplateRelationCount(context.Context, *GetTemplateRelationCountRequest) (*GetTemplateRelationCountReply, error)
	GetWorkItemRelationCount(context.Context, *GetWorkItemRelationCountRequest) (*GetWorkItemRelationCountReply, error)
	QSpaceRoleList(context.Context, *SpaceRoleListQueryRequest) (*SpaceRoleListQueryReply, error)
	SetSpaceWorkItemRoleName(context.Context, *SetSpaceWorkItemRoleNameRequest) (*SetSpaceWorkItemRoleNameReply, error)
	SetSpaceWorkItemRoleRanking(context.Context, *SetSpaceWorkItemRoleRankingRequest) (*SetSpaceWorkItemRoleRankingReply, error)
}

func RegisterWorkItemRoleHTTPServer(s *http.Server, srv WorkItemRoleHTTPServer) {
	r := s.Route("/")
	r.POST("/my/space/work_item_role/list", _WorkItemRole_QSpaceRoleList0_HTTP_Handler(srv))
	r.POST("/my/space/work_item_role/ranking/set", _WorkItemRole_SetSpaceWorkItemRoleRanking0_HTTP_Handler(srv))
	r.POST("/my/space/work_item_role/name/set", _WorkItemRole_SetSpaceWorkItemRoleName0_HTTP_Handler(srv))
	r.POST("/my/space/work_item_role/del", _WorkItemRole_DelSpaceWorkItemRole0_HTTP_Handler(srv))
	r.POST("/my/space/work_item_role/create", _WorkItemRole_CreateSpaceWorkItemRole0_HTTP_Handler(srv))
	r.POST("/my/space/work_item_role/work_item_relation_count", _WorkItemRole_GetWorkItemRelationCount0_HTTP_Handler(srv))
	r.POST("/my/space/work_item_role/template_relation_count", _WorkItemRole_GetTemplateRelationCount0_HTTP_Handler(srv))
}

func _WorkItemRole_QSpaceRoleList0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in SpaceRoleListQueryRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleQSpaceRoleList)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.QSpaceRoleList(ctx, req.(*SpaceRoleListQueryRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*SpaceRoleListQueryReply)
		return ctx.Result(200, reply)
	}
}

func _WorkItemRole_SetSpaceWorkItemRoleRanking0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in SetSpaceWorkItemRoleRankingRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleSetSpaceWorkItemRoleRanking)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.SetSpaceWorkItemRoleRanking(ctx, req.(*SetSpaceWorkItemRoleRankingRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*SetSpaceWorkItemRoleRankingReply)
		return ctx.Result(200, reply)
	}
}

func _WorkItemRole_SetSpaceWorkItemRoleName0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in SetSpaceWorkItemRoleNameRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleSetSpaceWorkItemRoleName)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.SetSpaceWorkItemRoleName(ctx, req.(*SetSpaceWorkItemRoleNameRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*SetSpaceWorkItemRoleNameReply)
		return ctx.Result(200, reply)
	}
}

func _WorkItemRole_DelSpaceWorkItemRole0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in DelSpaceWorkItemRoleRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleDelSpaceWorkItemRole)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.DelSpaceWorkItemRole(ctx, req.(*DelSpaceWorkItemRoleRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*DelSpaceWorkItemRoleReply)
		return ctx.Result(200, reply)
	}
}

func _WorkItemRole_CreateSpaceWorkItemRole0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreateSpaceWorkItemRoleRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleCreateSpaceWorkItemRole)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.CreateSpaceWorkItemRole(ctx, req.(*CreateSpaceWorkItemRoleRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreateSpaceWorkItemRoleReply)
		return ctx.Result(200, reply)
	}
}

func _WorkItemRole_GetWorkItemRelationCount0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in GetWorkItemRelationCountRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleGetWorkItemRelationCount)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.GetWorkItemRelationCount(ctx, req.(*GetWorkItemRelationCountRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*GetWorkItemRelationCountReply)
		return ctx.Result(200, reply)
	}
}

func _WorkItemRole_GetTemplateRelationCount0_HTTP_Handler(srv WorkItemRoleHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in GetTemplateRelationCountRequest
		if err := ctx.Bind(&in); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationWorkItemRoleGetTemplateRelationCount)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.GetTemplateRelationCount(ctx, req.(*GetTemplateRelationCountRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*GetTemplateRelationCountReply)
		return ctx.Result(200, reply)
	}
}

type WorkItemRoleHTTPClient interface {
	CreateSpaceWorkItemRole(ctx context.Context, req *CreateSpaceWorkItemRoleRequest, opts ...http.CallOption) (rsp *CreateSpaceWorkItemRoleReply, err error)
	DelSpaceWorkItemRole(ctx context.Context, req *DelSpaceWorkItemRoleRequest, opts ...http.CallOption) (rsp *DelSpaceWorkItemRoleReply, err error)
	GetTemplateRelationCount(ctx context.Context, req *GetTemplateRelationCountRequest, opts ...http.CallOption) (rsp *GetTemplateRelationCountReply, err error)
	GetWorkItemRelationCount(ctx context.Context, req *GetWorkItemRelationCountRequest, opts ...http.CallOption) (rsp *GetWorkItemRelationCountReply, err error)
	QSpaceRoleList(ctx context.Context, req *SpaceRoleListQueryRequest, opts ...http.CallOption) (rsp *SpaceRoleListQueryReply, err error)
	SetSpaceWorkItemRoleName(ctx context.Context, req *SetSpaceWorkItemRoleNameRequest, opts ...http.CallOption) (rsp *SetSpaceWorkItemRoleNameReply, err error)
	SetSpaceWorkItemRoleRanking(ctx context.Context, req *SetSpaceWorkItemRoleRankingRequest, opts ...http.CallOption) (rsp *SetSpaceWorkItemRoleRankingReply, err error)
}

type WorkItemRoleHTTPClientImpl struct {
	cc *http.Client
}

func NewWorkItemRoleHTTPClient(client *http.Client) WorkItemRoleHTTPClient {
	return &WorkItemRoleHTTPClientImpl{client}
}

func (c *WorkItemRoleHTTPClientImpl) CreateSpaceWorkItemRole(ctx context.Context, in *CreateSpaceWorkItemRoleRequest, opts ...http.CallOption) (*CreateSpaceWorkItemRoleReply, error) {
	var out CreateSpaceWorkItemRoleReply
	pattern := "/my/space/work_item_role/create"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleCreateSpaceWorkItemRole))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *WorkItemRoleHTTPClientImpl) DelSpaceWorkItemRole(ctx context.Context, in *DelSpaceWorkItemRoleRequest, opts ...http.CallOption) (*DelSpaceWorkItemRoleReply, error) {
	var out DelSpaceWorkItemRoleReply
	pattern := "/my/space/work_item_role/del"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleDelSpaceWorkItemRole))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *WorkItemRoleHTTPClientImpl) GetTemplateRelationCount(ctx context.Context, in *GetTemplateRelationCountRequest, opts ...http.CallOption) (*GetTemplateRelationCountReply, error) {
	var out GetTemplateRelationCountReply
	pattern := "/my/space/work_item_role/template_relation_count"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleGetTemplateRelationCount))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *WorkItemRoleHTTPClientImpl) GetWorkItemRelationCount(ctx context.Context, in *GetWorkItemRelationCountRequest, opts ...http.CallOption) (*GetWorkItemRelationCountReply, error) {
	var out GetWorkItemRelationCountReply
	pattern := "/my/space/work_item_role/work_item_relation_count"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleGetWorkItemRelationCount))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *WorkItemRoleHTTPClientImpl) QSpaceRoleList(ctx context.Context, in *SpaceRoleListQueryRequest, opts ...http.CallOption) (*SpaceRoleListQueryReply, error) {
	var out SpaceRoleListQueryReply
	pattern := "/my/space/work_item_role/list"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleQSpaceRoleList))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *WorkItemRoleHTTPClientImpl) SetSpaceWorkItemRoleName(ctx context.Context, in *SetSpaceWorkItemRoleNameRequest, opts ...http.CallOption) (*SetSpaceWorkItemRoleNameReply, error) {
	var out SetSpaceWorkItemRoleNameReply
	pattern := "/my/space/work_item_role/name/set"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleSetSpaceWorkItemRoleName))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}

func (c *WorkItemRoleHTTPClientImpl) SetSpaceWorkItemRoleRanking(ctx context.Context, in *SetSpaceWorkItemRoleRankingRequest, opts ...http.CallOption) (*SetSpaceWorkItemRoleRankingReply, error) {
	var out SetSpaceWorkItemRoleRankingReply
	pattern := "/my/space/work_item_role/ranking/set"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationWorkItemRoleSetSpaceWorkItemRoleRanking))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, err
}
