// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: user/v1/user.proto

package v1

import (
	comm "go-cs/api/comm"
	bean "go-cs/internal/bean"
	rsp "go-cs/internal/bean/vo/rsp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/typepb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UnbindRequest_Type int32

const (
	UnbindRequest_None UnbindRequest_Type = 0
	// Email = 1;
	// Mobile = 2;
	UnbindRequest_IM     UnbindRequest_Type = 3
	UnbindRequest_Ql     UnbindRequest_Type = 4
	UnbindRequest_Halala UnbindRequest_Type = 5
)

// Enum value maps for UnbindRequest_Type.
var (
	UnbindRequest_Type_name = map[int32]string{
		0: "None",
		3: "IM",
		4: "Ql",
		5: "Halala",
	}
	UnbindRequest_Type_value = map[string]int32{
		"None":   0,
		"IM":     3,
		"Ql":     4,
		"Halala": 5,
	}
)

func (x UnbindRequest_Type) Enum() *UnbindRequest_Type {
	p := new(UnbindRequest_Type)
	*p = x
	return p
}

func (x UnbindRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnbindRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_user_proto_enumTypes[0].Descriptor()
}

func (UnbindRequest_Type) Type() protoreflect.EnumType {
	return &file_user_v1_user_proto_enumTypes[0]
}

func (x UnbindRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnbindRequest_Type.Descriptor instead.
func (UnbindRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{32, 0}
}

type BindRequest_Type int32

const (
	BindRequest_None BindRequest_Type = 0
	// Email = 1;
	// Mobile = 2;
	BindRequest_IM     BindRequest_Type = 3
	BindRequest_Ql     BindRequest_Type = 4
	BindRequest_Halala BindRequest_Type = 5
)

// Enum value maps for BindRequest_Type.
var (
	BindRequest_Type_name = map[int32]string{
		0: "None",
		3: "IM",
		4: "Ql",
		5: "Halala",
	}
	BindRequest_Type_value = map[string]int32{
		"None":   0,
		"IM":     3,
		"Ql":     4,
		"Halala": 5,
	}
)

func (x BindRequest_Type) Enum() *BindRequest_Type {
	p := new(BindRequest_Type)
	*p = x
	return p
}

func (x BindRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BindRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_user_proto_enumTypes[1].Descriptor()
}

func (BindRequest_Type) Type() protoreflect.EnumType {
	return &file_user_v1_user_proto_enumTypes[1]
}

func (x BindRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BindRequest_Type.Descriptor instead.
func (BindRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{34, 0}
}

type RegUserRequest_Way int32

const (
	RegUserRequest_Pwd    RegUserRequest_Way = 0
	RegUserRequest_IM     RegUserRequest_Way = 3
	RegUserRequest_QL     RegUserRequest_Way = 4
	RegUserRequest_Halala RegUserRequest_Way = 5
)

// Enum value maps for RegUserRequest_Way.
var (
	RegUserRequest_Way_name = map[int32]string{
		0: "Pwd",
		3: "IM",
		4: "QL",
		5: "Halala",
	}
	RegUserRequest_Way_value = map[string]int32{
		"Pwd":    0,
		"IM":     3,
		"QL":     4,
		"Halala": 5,
	}
)

func (x RegUserRequest_Way) Enum() *RegUserRequest_Way {
	p := new(RegUserRequest_Way)
	*p = x
	return p
}

func (x RegUserRequest_Way) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegUserRequest_Way) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_user_proto_enumTypes[2].Descriptor()
}

func (RegUserRequest_Way) Type() protoreflect.EnumType {
	return &file_user_v1_user_proto_enumTypes[2]
}

func (x RegUserRequest_Way) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegUserRequest_Way.Descriptor instead.
func (RegUserRequest_Way) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{40, 0}
}

type ChangeMyPwdRequestTyp int32

const (
	ChangeMyPwdRequest_by_old_pwd ChangeMyPwdRequestTyp = 0
	// by_email = 1;
	// by_mobile = 2;
	ChangeMyPwdRequest_by_forceUpdate ChangeMyPwdRequestTyp = 10 //强行更新
)

// Enum value maps for ChangeMyPwdRequestTyp.
var (
	ChangeMyPwdRequestTyp_name = map[int32]string{
		0:  "by_old_pwd",
		10: "by_forceUpdate",
	}
	ChangeMyPwdRequestTyp_value = map[string]int32{
		"by_old_pwd":     0,
		"by_forceUpdate": 10,
	}
)

func (x ChangeMyPwdRequestTyp) Enum() *ChangeMyPwdRequestTyp {
	p := new(ChangeMyPwdRequestTyp)
	*p = x
	return p
}

func (x ChangeMyPwdRequestTyp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeMyPwdRequestTyp) Descriptor() protoreflect.EnumDescriptor {
	return file_user_v1_user_proto_enumTypes[3].Descriptor()
}

func (ChangeMyPwdRequestTyp) Type() protoreflect.EnumType {
	return &file_user_v1_user_proto_enumTypes[3]
}

func (x ChangeMyPwdRequestTyp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeMyPwdRequestTyp.Descriptor instead.
func (ChangeMyPwdRequestTyp) EnumDescriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{52, 0}
}

type SetThirdPlatformNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformCode comm.ThirdPlatformCode `protobuf:"varint,1,opt,name=platformCode,proto3,enum=comm.ThirdPlatformCode" json:"platformCode,omitempty"`
	Notify       int32                  `protobuf:"varint,2,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *SetThirdPlatformNotifyRequest) Reset() {
	*x = SetThirdPlatformNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetThirdPlatformNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetThirdPlatformNotifyRequest) ProtoMessage() {}

func (x *SetThirdPlatformNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetThirdPlatformNotifyRequest.ProtoReflect.Descriptor instead.
func (*SetThirdPlatformNotifyRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{0}
}

func (x *SetThirdPlatformNotifyRequest) GetPlatformCode() comm.ThirdPlatformCode {
	if x != nil {
		return x.PlatformCode
	}
	return comm.ThirdPlatformCode(0)
}

func (x *SetThirdPlatformNotifyRequest) GetNotify() int32 {
	if x != nil {
		return x.Notify
	}
	return 0
}

type SetThirdPlatformNotifyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SetThirdPlatformNotifyReply) Reset() {
	*x = SetThirdPlatformNotifyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetThirdPlatformNotifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetThirdPlatformNotifyReply) ProtoMessage() {}

func (x *SetThirdPlatformNotifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetThirdPlatformNotifyReply.ProtoReflect.Descriptor instead.
func (*SetThirdPlatformNotifyReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{1}
}

func (x *SetThirdPlatformNotifyReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetUserConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserConfigRequest) Reset() {
	*x = GetUserConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConfigRequest) ProtoMessage() {}

func (x *GetUserConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConfigRequest.ProtoReflect.Descriptor instead.
func (*GetUserConfigRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{2}
}

type GetUserConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetUserConfigReply) Reset() {
	*x = GetUserConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConfigReply) ProtoMessage() {}

func (x *GetUserConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConfigReply.ProtoReflect.Descriptor instead.
func (*GetUserConfigReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserConfigReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetUserConfigReply) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetUserConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetUserConfigRequest) Reset() {
	*x = SetUserConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConfigRequest) ProtoMessage() {}

func (x *SetUserConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConfigRequest.ProtoReflect.Descriptor instead.
func (*SetUserConfigRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{4}
}

func (x *SetUserConfigRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetUserConfigRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SetUserConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SetUserConfigReply) Reset() {
	*x = SetUserConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserConfigReply) ProtoMessage() {}

func (x *SetUserConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserConfigReply.ProtoReflect.Descriptor instead.
func (*SetUserConfigReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{5}
}

func (x *SetUserConfigReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

type AllSpaceProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *AllSpaceProfileRequest) Reset() {
	*x = AllSpaceProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSpaceProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSpaceProfileRequest) ProtoMessage() {}

func (x *AllSpaceProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSpaceProfileRequest.ProtoReflect.Descriptor instead.
func (*AllSpaceProfileRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{6}
}

func (x *AllSpaceProfileRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AllSpaceProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo            `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *AllSpaceProfileReply_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AllSpaceProfileReply) Reset() {
	*x = AllSpaceProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSpaceProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSpaceProfileReply) ProtoMessage() {}

func (x *AllSpaceProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSpaceProfileReply.ProtoReflect.Descriptor instead.
func (*AllSpaceProfileReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{7}
}

func (x *AllSpaceProfileReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AllSpaceProfileReply) GetData() *AllSpaceProfileReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTempConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"` //keys
}

func (x *GetTempConfigRequest) Reset() {
	*x = GetTempConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTempConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTempConfigRequest) ProtoMessage() {}

func (x *GetTempConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTempConfigRequest.ProtoReflect.Descriptor instead.
func (*GetTempConfigRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetTempConfigRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type GetTempConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetTempConfigReply) Reset() {
	*x = GetTempConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTempConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTempConfigReply) ProtoMessage() {}

func (x *GetTempConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTempConfigReply.ProtoReflect.Descriptor instead.
func (*GetTempConfigReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetTempConfigReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTempConfigReply) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetTempConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs map[string]string `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetTempConfigRequest) Reset() {
	*x = SetTempConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTempConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTempConfigRequest) ProtoMessage() {}

func (x *SetTempConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTempConfigRequest.ProtoReflect.Descriptor instead.
func (*SetTempConfigRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{10}
}

func (x *SetTempConfigRequest) GetConfigs() map[string]string {
	if x != nil {
		return x.Configs
	}
	return nil
}

type SetTempConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SetTempConfigReply) Reset() {
	*x = SetTempConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTempConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTempConfigReply) ProtoMessage() {}

func (x *SetTempConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTempConfigReply.ProtoReflect.Descriptor instead.
func (*SetTempConfigReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{11}
}

func (x *SetTempConfigReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

type DelTempConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"` //keys
}

func (x *DelTempConfigRequest) Reset() {
	*x = DelTempConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTempConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTempConfigRequest) ProtoMessage() {}

func (x *DelTempConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTempConfigRequest.ProtoReflect.Descriptor instead.
func (*DelTempConfigRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{12}
}

func (x *DelTempConfigRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type DelTempConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DelTempConfigReply) Reset() {
	*x = DelTempConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTempConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTempConfigReply) ProtoMessage() {}

func (x *DelTempConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTempConfigReply.ProtoReflect.Descriptor instead.
func (*DelTempConfigReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{13}
}

func (x *DelTempConfigReply) GetError() *comm.ErrorInfo {
	if x != nil {
		return x.Error
	}
	return nil
}

type NotifyCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyCountRequest) Reset() {
	*x = NotifyCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCountRequest) ProtoMessage() {}

func (x *NotifyCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCountRequest.ProtoReflect.Descriptor instead.
func (*NotifyCountRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{14}
}

type NotifyCountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*NotifyCountReply_Error
	//	*NotifyCountReply_Data
	Result isNotifyCountReply_Result `protobuf_oneof:"result"`
}

func (x *NotifyCountReply) Reset() {
	*x = NotifyCountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCountReply) ProtoMessage() {}

func (x *NotifyCountReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCountReply.ProtoReflect.Descriptor instead.
func (*NotifyCountReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{15}
}

func (m *NotifyCountReply) GetResult() isNotifyCountReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *NotifyCountReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*NotifyCountReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *NotifyCountReply) GetData() *NotifyCountReplyData {
	if x, ok := x.GetResult().(*NotifyCountReply_Data); ok {
		return x.Data
	}
	return nil
}

type isNotifyCountReply_Result interface {
	isNotifyCountReply_Result()
}

type NotifyCountReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type NotifyCountReply_Data struct {
	Data *NotifyCountReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*NotifyCountReply_Error) isNotifyCountReply_Result() {}

func (*NotifyCountReply_Data) isNotifyCountReply_Result() {}

type NotifyCountReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pending int64 `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"` //  int64 comment = 2;
}

func (x *NotifyCountReplyData) Reset() {
	*x = NotifyCountReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyCountReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyCountReplyData) ProtoMessage() {}

func (x *NotifyCountReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyCountReplyData.ProtoReflect.Descriptor instead.
func (*NotifyCountReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyCountReplyData) GetPending() int64 {
	if x != nil {
		return x.Pending
	}
	return 0
}

type MyRelatedCommentByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *MyRelatedCommentByIdsRequest) Reset() {
	*x = MyRelatedCommentByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentByIdsRequest) ProtoMessage() {}

func (x *MyRelatedCommentByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentByIdsRequest.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentByIdsRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{17}
}

func (x *MyRelatedCommentByIdsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MyRelatedCommentByIdsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*MyRelatedCommentByIdsReply_Error
	//	*MyRelatedCommentByIdsReply_Data
	Result isMyRelatedCommentByIdsReply_Result `protobuf_oneof:"result"`
}

func (x *MyRelatedCommentByIdsReply) Reset() {
	*x = MyRelatedCommentByIdsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentByIdsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentByIdsReply) ProtoMessage() {}

func (x *MyRelatedCommentByIdsReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentByIdsReply.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentByIdsReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{18}
}

func (m *MyRelatedCommentByIdsReply) GetResult() isMyRelatedCommentByIdsReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *MyRelatedCommentByIdsReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*MyRelatedCommentByIdsReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *MyRelatedCommentByIdsReply) GetData() *MyRelatedCommentByIdsReplyData {
	if x, ok := x.GetResult().(*MyRelatedCommentByIdsReply_Data); ok {
		return x.Data
	}
	return nil
}

type isMyRelatedCommentByIdsReply_Result interface {
	isMyRelatedCommentByIdsReply_Result()
}

type MyRelatedCommentByIdsReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type MyRelatedCommentByIdsReply_Data struct {
	Data *MyRelatedCommentByIdsReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*MyRelatedCommentByIdsReply_Error) isMyRelatedCommentByIdsReply_Result() {}

func (*MyRelatedCommentByIdsReply_Data) isMyRelatedCommentByIdsReply_Result() {}

type MyRelatedCommentByIdsReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MyRelatedCommentByIdsReplyData_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MyRelatedCommentByIdsReplyData) Reset() {
	*x = MyRelatedCommentByIdsReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentByIdsReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentByIdsReplyData) ProtoMessage() {}

func (x *MyRelatedCommentByIdsReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentByIdsReplyData.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentByIdsReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{19}
}

func (x *MyRelatedCommentByIdsReplyData) GetItems() []*MyRelatedCommentByIdsReplyData_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type MyRelatedCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos  int64 `protobuf:"varint,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *MyRelatedCommentRequest) Reset() {
	*x = MyRelatedCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentRequest) ProtoMessage() {}

func (x *MyRelatedCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentRequest.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{20}
}

func (x *MyRelatedCommentRequest) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

func (x *MyRelatedCommentRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MyRelatedCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*MyRelatedCommentReply_Error
	//	*MyRelatedCommentReply_Data
	Result isMyRelatedCommentReply_Result `protobuf_oneof:"result"`
}

func (x *MyRelatedCommentReply) Reset() {
	*x = MyRelatedCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentReply) ProtoMessage() {}

func (x *MyRelatedCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentReply.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{21}
}

func (m *MyRelatedCommentReply) GetResult() isMyRelatedCommentReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *MyRelatedCommentReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*MyRelatedCommentReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *MyRelatedCommentReply) GetData() *MyRelatedCommentReplyData {
	if x, ok := x.GetResult().(*MyRelatedCommentReply_Data); ok {
		return x.Data
	}
	return nil
}

type isMyRelatedCommentReply_Result interface {
	isMyRelatedCommentReply_Result()
}

type MyRelatedCommentReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type MyRelatedCommentReply_Data struct {
	Data *MyRelatedCommentReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*MyRelatedCommentReply_Error) isMyRelatedCommentReply_Result() {}

func (*MyRelatedCommentReply_Data) isMyRelatedCommentReply_Result() {}

type MyRelatedCommentReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items   []int64 `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
	HasNext bool    `protobuf:"varint,2,opt,name=hasNext,proto3" json:"hasNext,omitempty"`
	NextPos int64   `protobuf:"varint,3,opt,name=nextPos,proto3" json:"nextPos,omitempty"`
}

func (x *MyRelatedCommentReplyData) Reset() {
	*x = MyRelatedCommentReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentReplyData) ProtoMessage() {}

func (x *MyRelatedCommentReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentReplyData.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{22}
}

func (x *MyRelatedCommentReplyData) GetItems() []int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MyRelatedCommentReplyData) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *MyRelatedCommentReplyData) GetNextPos() int64 {
	if x != nil {
		return x.NextPos
	}
	return 0
}

type MyPendingWorkItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyPendingWorkItemRequest) Reset() {
	*x = MyPendingWorkItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPendingWorkItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPendingWorkItemRequest) ProtoMessage() {}

func (x *MyPendingWorkItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPendingWorkItemRequest.ProtoReflect.Descriptor instead.
func (*MyPendingWorkItemRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{23}
}

type MyPendingWorkItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*MyPendingWorkItemReply_Error
	//	*MyPendingWorkItemReply_Data
	Result isMyPendingWorkItemReply_Result `protobuf_oneof:"result"`
}

func (x *MyPendingWorkItemReply) Reset() {
	*x = MyPendingWorkItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPendingWorkItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPendingWorkItemReply) ProtoMessage() {}

func (x *MyPendingWorkItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPendingWorkItemReply.ProtoReflect.Descriptor instead.
func (*MyPendingWorkItemReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{24}
}

func (m *MyPendingWorkItemReply) GetResult() isMyPendingWorkItemReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *MyPendingWorkItemReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*MyPendingWorkItemReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *MyPendingWorkItemReply) GetData() *MyPendingWorkItemReplyData {
	if x, ok := x.GetResult().(*MyPendingWorkItemReply_Data); ok {
		return x.Data
	}
	return nil
}

type isMyPendingWorkItemReply_Result interface {
	isMyPendingWorkItemReply_Result()
}

type MyPendingWorkItemReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type MyPendingWorkItemReply_Data struct {
	Data *MyPendingWorkItemReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*MyPendingWorkItemReply_Error) isMyPendingWorkItemReply_Result() {}

func (*MyPendingWorkItemReply_Data) isMyPendingWorkItemReply_Result() {}

type MyPendingWorkItemReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []int64 `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *MyPendingWorkItemReplyData) Reset() {
	*x = MyPendingWorkItemReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPendingWorkItemReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPendingWorkItemReplyData) ProtoMessage() {}

func (x *MyPendingWorkItemReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPendingWorkItemReplyData.ProtoReflect.Descriptor instead.
func (*MyPendingWorkItemReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{25}
}

func (x *MyPendingWorkItemReplyData) GetItems() []int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type SetSpaceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromIdx int64 `protobuf:"varint,1,opt,name=fromIdx,proto3" json:"fromIdx,omitempty"`
	ToIdx   int64 `protobuf:"varint,2,opt,name=toIdx,proto3" json:"toIdx,omitempty"`
}

func (x *SetSpaceOrderRequest) Reset() {
	*x = SetSpaceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceOrderRequest) ProtoMessage() {}

func (x *SetSpaceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceOrderRequest.ProtoReflect.Descriptor instead.
func (*SetSpaceOrderRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{26}
}

func (x *SetSpaceOrderRequest) GetFromIdx() int64 {
	if x != nil {
		return x.FromIdx
	}
	return 0
}

func (x *SetSpaceOrderRequest) GetToIdx() int64 {
	if x != nil {
		return x.ToIdx
	}
	return 0
}

type SetSpaceOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetSpaceOrderReply_Error
	Result isSetSpaceOrderReply_Result `protobuf_oneof:"result"`
}

func (x *SetSpaceOrderReply) Reset() {
	*x = SetSpaceOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceOrderReply) ProtoMessage() {}

func (x *SetSpaceOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceOrderReply.ProtoReflect.Descriptor instead.
func (*SetSpaceOrderReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{27}
}

func (m *SetSpaceOrderReply) GetResult() isSetSpaceOrderReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetSpaceOrderReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetSpaceOrderReply_Error); ok {
		return x.Error
	}
	return nil
}

type isSetSpaceOrderReply_Result interface {
	isSetSpaceOrderReply_Result()
}

type SetSpaceOrderReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

func (*SetSpaceOrderReply_Error) isSetSpaceOrderReply_Result() {}

type SetSpaceNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Notify  int32 `protobuf:"varint,2,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *SetSpaceNotifyRequest) Reset() {
	*x = SetSpaceNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceNotifyRequest) ProtoMessage() {}

func (x *SetSpaceNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceNotifyRequest.ProtoReflect.Descriptor instead.
func (*SetSpaceNotifyRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{28}
}

func (x *SetSpaceNotifyRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SetSpaceNotifyRequest) GetNotify() int32 {
	if x != nil {
		return x.Notify
	}
	return 0
}

type SetSpaceNotifyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetSpaceNotifyReply_Error
	Result isSetSpaceNotifyReply_Result `protobuf_oneof:"result"`
}

func (x *SetSpaceNotifyReply) Reset() {
	*x = SetSpaceNotifyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceNotifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceNotifyReply) ProtoMessage() {}

func (x *SetSpaceNotifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceNotifyReply.ProtoReflect.Descriptor instead.
func (*SetSpaceNotifyReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{29}
}

func (m *SetSpaceNotifyReply) GetResult() isSetSpaceNotifyReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetSpaceNotifyReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetSpaceNotifyReply_Error); ok {
		return x.Error
	}
	return nil
}

type isSetSpaceNotifyReply_Result interface {
	isSetSpaceNotifyReply_Result()
}

type SetSpaceNotifyReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

func (*SetSpaceNotifyReply_Error) isSetSpaceNotifyReply_Result() {}

type CancelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CancelRequest) Reset() {
	*x = CancelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelRequest) ProtoMessage() {}

func (x *CancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelRequest.ProtoReflect.Descriptor instead.
func (*CancelRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{30}
}

func (x *CancelRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CancelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CancelReply_Error
	Result isCancelReply_Result `protobuf_oneof:"result"`
}

func (x *CancelReply) Reset() {
	*x = CancelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReply) ProtoMessage() {}

func (x *CancelReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReply.ProtoReflect.Descriptor instead.
func (*CancelReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{31}
}

func (m *CancelReply) GetResult() isCancelReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CancelReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*CancelReply_Error); ok {
		return x.Error
	}
	return nil
}

type isCancelReply_Result interface {
	isCancelReply_Result()
}

type CancelReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

func (*CancelReply_Error) isCancelReply_Result() {}

type UnbindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type UnbindRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=api.user.v1.UnbindRequest_Type" json:"type,omitempty"`
}

func (x *UnbindRequest) Reset() {
	*x = UnbindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindRequest) ProtoMessage() {}

func (x *UnbindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindRequest.ProtoReflect.Descriptor instead.
func (*UnbindRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{32}
}

func (x *UnbindRequest) GetType() UnbindRequest_Type {
	if x != nil {
		return x.Type
	}
	return UnbindRequest_None
}

type UnbindReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*UnbindReply_Error
	Result isUnbindReply_Result `protobuf_oneof:"result"`
}

func (x *UnbindReply) Reset() {
	*x = UnbindReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindReply) ProtoMessage() {}

func (x *UnbindReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindReply.ProtoReflect.Descriptor instead.
func (*UnbindReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{33}
}

func (m *UnbindReply) GetResult() isUnbindReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *UnbindReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*UnbindReply_Error); ok {
		return x.Error
	}
	return nil
}

type isUnbindReply_Result interface {
	isUnbindReply_Result()
}

type UnbindReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

func (*UnbindReply_Error) isUnbindReply_Result() {}

type BindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    BindRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=api.user.v1.BindRequest_Type" json:"type,omitempty"`
	Key     string           `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                     //邮箱/手机号/第三方账号用户唯一标识
	Name    string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                   //第三方账号昵称
	UserId  int64            `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`              // 第三方账号用户id
	Account string           `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`             // 第三方账号用户账号
	PfName  string           `protobuf:"bytes,6,opt,name=pf_name,json=pfName,proto3" json:"pf_name,omitempty"` // 第三方账号平台名称
}

func (x *BindRequest) Reset() {
	*x = BindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRequest) ProtoMessage() {}

func (x *BindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRequest.ProtoReflect.Descriptor instead.
func (*BindRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{34}
}

func (x *BindRequest) GetType() BindRequest_Type {
	if x != nil {
		return x.Type
	}
	return BindRequest_None
}

func (x *BindRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BindRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BindRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BindRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *BindRequest) GetPfName() string {
	if x != nil {
		return x.PfName
	}
	return ""
}

type BindReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*BindReply_Error
	Result isBindReply_Result `protobuf_oneof:"result"`
}

func (x *BindReply) Reset() {
	*x = BindReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindReply) ProtoMessage() {}

func (x *BindReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindReply.ProtoReflect.Descriptor instead.
func (*BindReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{35}
}

func (m *BindReply) GetResult() isBindReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *BindReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*BindReply_Error); ok {
		return x.Error
	}
	return nil
}

type isBindReply_Result interface {
	isBindReply_Result()
}

type BindReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

func (*BindReply_Error) isBindReply_Result() {}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{36}
}

func (x *GetUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetUserReply_Error
	//	*GetUserReply_Data
	Result isGetUserReply_Result `protobuf_oneof:"result"`
}

func (x *GetUserReply) Reset() {
	*x = GetUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReply) ProtoMessage() {}

func (x *GetUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReply.ProtoReflect.Descriptor instead.
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{37}
}

func (m *GetUserReply) GetResult() isGetUserReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetUserReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetUserReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetUserReply) GetData() *bean.User {
	if x, ok := x.GetResult().(*GetUserReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetUserReply_Result interface {
	isGetUserReply_Result()
}

type GetUserReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetUserReply_Data struct {
	Data *bean.User `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetUserReply_Error) isGetUserReply_Result() {}

func (*GetUserReply_Data) isGetUserReply_Result() {}

type ListUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{38}
}

type ListUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*ListUserReply_Error
	//	*ListUserReply_Data
	Result isListUserReply_Result `protobuf_oneof:"result"`
}

func (x *ListUserReply) Reset() {
	*x = ListUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply) ProtoMessage() {}

func (x *ListUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply.ProtoReflect.Descriptor instead.
func (*ListUserReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{39}
}

func (m *ListUserReply) GetResult() isListUserReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ListUserReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*ListUserReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ListUserReply) GetData() *ListUserReply_ListUserReplyData {
	if x, ok := x.GetResult().(*ListUserReply_Data); ok {
		return x.Data
	}
	return nil
}

type isListUserReply_Result interface {
	isListUserReply_Result()
}

type ListUserReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ListUserReply_Data struct {
	Data *ListUserReply_ListUserReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ListUserReply_Error) isListUserReply_Result() {}

func (*ListUserReply_Data) isListUserReply_Result() {}

type RegUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Way      RegUserRequest_Way `protobuf:"varint,1,opt,name=way,proto3,enum=api.user.v1.RegUserRequest_Way" json:"way,omitempty"`
	UserName string             `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NickName string             `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Password string             `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Avatar   string             `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	PfToken  string             `protobuf:"bytes,6,opt,name=pf_token,json=pfToken,proto3" json:"pf_token,omitempty"`
	PfName   string             `protobuf:"bytes,7,opt,name=pf_name,json=pfName,proto3" json:"pf_name,omitempty"`
}

func (x *RegUserRequest) Reset() {
	*x = RegUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegUserRequest) ProtoMessage() {}

func (x *RegUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegUserRequest.ProtoReflect.Descriptor instead.
func (*RegUserRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{40}
}

func (x *RegUserRequest) GetWay() RegUserRequest_Way {
	if x != nil {
		return x.Way
	}
	return RegUserRequest_Pwd
}

func (x *RegUserRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RegUserRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *RegUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegUserRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RegUserRequest) GetPfToken() string {
	if x != nil {
		return x.PfToken
	}
	return ""
}

func (x *RegUserRequest) GetPfName() string {
	if x != nil {
		return x.PfName
	}
	return ""
}

type SearchUserByPyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Py         string `protobuf:"bytes,1,opt,name=py,proto3" json:"py,omitempty"`
	FliterType int32  `protobuf:"varint,2,opt,name=fliterType,proto3" json:"fliterType,omitempty"`
	SpaceId    int64  `protobuf:"zigzag64,3,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
}

func (x *SearchUserByPyRequest) Reset() {
	*x = SearchUserByPyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserByPyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserByPyRequest) ProtoMessage() {}

func (x *SearchUserByPyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserByPyRequest.ProtoReflect.Descriptor instead.
func (*SearchUserByPyRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{41}
}

func (x *SearchUserByPyRequest) GetPy() string {
	if x != nil {
		return x.Py
	}
	return ""
}

func (x *SearchUserByPyRequest) GetFliterType() int32 {
	if x != nil {
		return x.FliterType
	}
	return 0
}

func (x *SearchUserByPyRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

type SearchUserByPyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SearchUserByPyReply_Error
	//	*SearchUserByPyReply_Data
	Result isSearchUserByPyReply_Result `protobuf_oneof:"result"`
}

func (x *SearchUserByPyReply) Reset() {
	*x = SearchUserByPyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserByPyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserByPyReply) ProtoMessage() {}

func (x *SearchUserByPyReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserByPyReply.ProtoReflect.Descriptor instead.
func (*SearchUserByPyReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{42}
}

func (m *SearchUserByPyReply) GetResult() isSearchUserByPyReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SearchUserByPyReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SearchUserByPyReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SearchUserByPyReply) GetData() *SearchUserByPyReplyData {
	if x, ok := x.GetResult().(*SearchUserByPyReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSearchUserByPyReply_Result interface {
	isSearchUserByPyReply_Result()
}

type SearchUserByPyReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SearchUserByPyReply_Data struct {
	Data *SearchUserByPyReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SearchUserByPyReply_Error) isSearchUserByPyReply_Result() {}

func (*SearchUserByPyReply_Data) isSearchUserByPyReply_Result() {}

// ---检查用户名
type CheckUserNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CheckUserNameRequest) Reset() {
	*x = CheckUserNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserNameRequest) ProtoMessage() {}

func (x *CheckUserNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserNameRequest.ProtoReflect.Descriptor instead.
func (*CheckUserNameRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{43}
}

func (x *CheckUserNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CheckUserNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*CheckUserNameReply_Error
	//	*CheckUserNameReply_Data
	Result isCheckUserNameReply_Result `protobuf_oneof:"result"`
}

func (x *CheckUserNameReply) Reset() {
	*x = CheckUserNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserNameReply) ProtoMessage() {}

func (x *CheckUserNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserNameReply.ProtoReflect.Descriptor instead.
func (*CheckUserNameReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{44}
}

func (m *CheckUserNameReply) GetResult() isCheckUserNameReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CheckUserNameReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*CheckUserNameReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *CheckUserNameReply) GetData() string {
	if x, ok := x.GetResult().(*CheckUserNameReply_Data); ok {
		return x.Data
	}
	return ""
}

type isCheckUserNameReply_Result interface {
	isCheckUserNameReply_Result()
}

type CheckUserNameReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type CheckUserNameReply_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*CheckUserNameReply_Error) isCheckUserNameReply_Result() {}

func (*CheckUserNameReply_Data) isCheckUserNameReply_Result() {}

type SearchUserByPyReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*rsp.ViewUserWithSpaceInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SearchUserByPyReplyData) Reset() {
	*x = SearchUserByPyReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserByPyReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserByPyReplyData) ProtoMessage() {}

func (x *SearchUserByPyReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserByPyReplyData.ProtoReflect.Descriptor instead.
func (*SearchUserByPyReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{45}
}

func (x *SearchUserByPyReplyData) GetList() []*rsp.ViewUserWithSpaceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type SearchUserListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Py       string  `protobuf:"bytes,1,opt,name=py,proto3" json:"py,omitempty"`
	SpaceIds []int64 `protobuf:"varint,3,rep,packed,name=spaceIds,proto3" json:"spaceIds,omitempty"`
	UserIds  []int64 `protobuf:"varint,4,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *SearchUserListRequest) Reset() {
	*x = SearchUserListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserListRequest) ProtoMessage() {}

func (x *SearchUserListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserListRequest.ProtoReflect.Descriptor instead.
func (*SearchUserListRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{46}
}

func (x *SearchUserListRequest) GetPy() string {
	if x != nil {
		return x.Py
	}
	return ""
}

func (x *SearchUserListRequest) GetSpaceIds() []int64 {
	if x != nil {
		return x.SpaceIds
	}
	return nil
}

func (x *SearchUserListRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type SearchUserListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SearchUserListReply_Error
	//	*SearchUserListReply_Data
	Result isSearchUserListReply_Result `protobuf_oneof:"result"`
}

func (x *SearchUserListReply) Reset() {
	*x = SearchUserListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserListReply) ProtoMessage() {}

func (x *SearchUserListReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserListReply.ProtoReflect.Descriptor instead.
func (*SearchUserListReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{47}
}

func (m *SearchUserListReply) GetResult() isSearchUserListReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SearchUserListReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SearchUserListReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SearchUserListReply) GetData() *SearchUserListReplyData {
	if x, ok := x.GetResult().(*SearchUserListReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSearchUserListReply_Result interface {
	isSearchUserListReply_Result()
}

type SearchUserListReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SearchUserListReply_Data struct {
	Data *SearchUserListReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SearchUserListReply_Error) isSearchUserListReply_Result() {}

func (*SearchUserListReply_Data) isSearchUserListReply_Result() {}

type SearchUserListReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*rsp.SimpleUserInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SearchUserListReplyData) Reset() {
	*x = SearchUserListReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserListReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserListReplyData) ProtoMessage() {}

func (x *SearchUserListReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserListReplyData.ProtoReflect.Descriptor instead.
func (*SearchUserListReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{48}
}

func (x *SearchUserListReplyData) GetList() []*rsp.SimpleUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// ---头像设置----
type SetMyAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *SetMyAvatarRequest) Reset() {
	*x = SetMyAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyAvatarRequest) ProtoMessage() {}

func (x *SetMyAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyAvatarRequest.ProtoReflect.Descriptor instead.
func (*SetMyAvatarRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{49}
}

func (x *SetMyAvatarRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SetMyAvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetMyAvatarReply_Error
	//	*SetMyAvatarReply_Data
	Result isSetMyAvatarReply_Result `protobuf_oneof:"result"`
}

func (x *SetMyAvatarReply) Reset() {
	*x = SetMyAvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyAvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyAvatarReply) ProtoMessage() {}

func (x *SetMyAvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyAvatarReply.ProtoReflect.Descriptor instead.
func (*SetMyAvatarReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{50}
}

func (m *SetMyAvatarReply) GetResult() isSetMyAvatarReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetMyAvatarReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetMyAvatarReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetMyAvatarReply) GetData() *SetMyAvatarReplyData {
	if x, ok := x.GetResult().(*SetMyAvatarReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSetMyAvatarReply_Result interface {
	isSetMyAvatarReply_Result()
}

type SetMyAvatarReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetMyAvatarReply_Data struct {
	Data *SetMyAvatarReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SetMyAvatarReply_Error) isSetMyAvatarReply_Result() {}

func (*SetMyAvatarReply_Data) isSetMyAvatarReply_Result() {}

type SetMyAvatarReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMyAvatarReplyData) Reset() {
	*x = SetMyAvatarReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyAvatarReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyAvatarReplyData) ProtoMessage() {}

func (x *SetMyAvatarReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyAvatarReplyData.ProtoReflect.Descriptor instead.
func (*SetMyAvatarReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{51}
}

// ---修改密码---
type ChangeMyPwdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     ChangeMyPwdRequestTyp `protobuf:"varint,1,opt,name=type,proto3,enum=api.user.v1.ChangeMyPwdRequestTyp" json:"type,omitempty"`
	Username string                `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Pwd      string                `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
	NewPwd   string                `protobuf:"bytes,4,opt,name=new_pwd,json=newPwd,proto3" json:"new_pwd,omitempty"`
}

func (x *ChangeMyPwdRequest) Reset() {
	*x = ChangeMyPwdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMyPwdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyPwdRequest) ProtoMessage() {}

func (x *ChangeMyPwdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyPwdRequest.ProtoReflect.Descriptor instead.
func (*ChangeMyPwdRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{52}
}

func (x *ChangeMyPwdRequest) GetType() ChangeMyPwdRequestTyp {
	if x != nil {
		return x.Type
	}
	return ChangeMyPwdRequest_by_old_pwd
}

func (x *ChangeMyPwdRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ChangeMyPwdRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *ChangeMyPwdRequest) GetNewPwd() string {
	if x != nil {
		return x.NewPwd
	}
	return ""
}

type ChangeMyPwdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*ChangeMyPwdReply_Error
	//	*ChangeMyPwdReply_Data
	Result isChangeMyPwdReply_Result `protobuf_oneof:"result"`
}

func (x *ChangeMyPwdReply) Reset() {
	*x = ChangeMyPwdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMyPwdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyPwdReply) ProtoMessage() {}

func (x *ChangeMyPwdReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyPwdReply.ProtoReflect.Descriptor instead.
func (*ChangeMyPwdReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{53}
}

func (m *ChangeMyPwdReply) GetResult() isChangeMyPwdReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ChangeMyPwdReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*ChangeMyPwdReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ChangeMyPwdReply) GetData() *ChangeMyPwdReplyData {
	if x, ok := x.GetResult().(*ChangeMyPwdReply_Data); ok {
		return x.Data
	}
	return nil
}

type isChangeMyPwdReply_Result interface {
	isChangeMyPwdReply_Result()
}

type ChangeMyPwdReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ChangeMyPwdReply_Data struct {
	Data *ChangeMyPwdReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*ChangeMyPwdReply_Error) isChangeMyPwdReply_Result() {}

func (*ChangeMyPwdReply_Data) isChangeMyPwdReply_Result() {}

type ChangeMyPwdReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeMyPwdReplyData) Reset() {
	*x = ChangeMyPwdReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeMyPwdReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMyPwdReplyData) ProtoMessage() {}

func (x *ChangeMyPwdReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMyPwdReplyData.ProtoReflect.Descriptor instead.
func (*ChangeMyPwdReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{54}
}

type SetMyNickNameRquest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName string `protobuf:"bytes,1,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
}

func (x *SetMyNickNameRquest) Reset() {
	*x = SetMyNickNameRquest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyNickNameRquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyNickNameRquest) ProtoMessage() {}

func (x *SetMyNickNameRquest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyNickNameRquest.ProtoReflect.Descriptor instead.
func (*SetMyNickNameRquest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{55}
}

func (x *SetMyNickNameRquest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type SetMyNickNameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*SetMyNickNameReply_Error
	//	*SetMyNickNameReply_Data
	Result isSetMyNickNameReply_Result `protobuf_oneof:"result"`
}

func (x *SetMyNickNameReply) Reset() {
	*x = SetMyNickNameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyNickNameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyNickNameReply) ProtoMessage() {}

func (x *SetMyNickNameReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyNickNameReply.ProtoReflect.Descriptor instead.
func (*SetMyNickNameReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{56}
}

func (m *SetMyNickNameReply) GetResult() isSetMyNickNameReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SetMyNickNameReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*SetMyNickNameReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SetMyNickNameReply) GetData() *SetMyNickNameReplyData {
	if x, ok := x.GetResult().(*SetMyNickNameReply_Data); ok {
		return x.Data
	}
	return nil
}

type isSetMyNickNameReply_Result interface {
	isSetMyNickNameReply_Result()
}

type SetMyNickNameReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SetMyNickNameReply_Data struct {
	Data *SetMyNickNameReplyData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*SetMyNickNameReply_Error) isSetMyNickNameReply_Result() {}

func (*SetMyNickNameReply_Data) isSetMyNickNameReply_Result() {}

type SetMyNickNameReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMyNickNameReplyData) Reset() {
	*x = SetMyNickNameReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMyNickNameReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMyNickNameReplyData) ProtoMessage() {}

func (x *SetMyNickNameReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMyNickNameReplyData.ProtoReflect.Descriptor instead.
func (*SetMyNickNameReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{57}
}

type GetMyUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyUserInfoRequest) Reset() {
	*x = GetMyUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyUserInfoRequest) ProtoMessage() {}

func (x *GetMyUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMyUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{58}
}

type GetMyUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetMyUserInfoReply_Error
	//	*GetMyUserInfoReply_Data
	Result isGetMyUserInfoReply_Result `protobuf_oneof:"result"`
}

func (x *GetMyUserInfoReply) Reset() {
	*x = GetMyUserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyUserInfoReply) ProtoMessage() {}

func (x *GetMyUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetMyUserInfoReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{59}
}

func (m *GetMyUserInfoReply) GetResult() isGetMyUserInfoReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetMyUserInfoReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetMyUserInfoReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetMyUserInfoReply) GetData() *rsp.MyInfo {
	if x, ok := x.GetResult().(*GetMyUserInfoReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetMyUserInfoReply_Result interface {
	isGetMyUserInfoReply_Result()
}

type GetMyUserInfoReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetMyUserInfoReply_Data struct {
	Data *rsp.MyInfo `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetMyUserInfoReply_Error) isGetMyUserInfoReply_Result() {}

func (*GetMyUserInfoReply_Data) isGetMyUserInfoReply_Result() {}

// -- 获取当前登录会员的成员信息
type GetMySpaceMemberInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId int64 `protobuf:"zigzag64,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *GetMySpaceMemberInfoRequest) Reset() {
	*x = GetMySpaceMemberInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMySpaceMemberInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySpaceMemberInfoRequest) ProtoMessage() {}

func (x *GetMySpaceMemberInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySpaceMemberInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMySpaceMemberInfoRequest) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{60}
}

func (x *GetMySpaceMemberInfoRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

type GetMySpaceMemberInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetMySpaceMemberInfoReply_Error
	//	*GetMySpaceMemberInfoReply_Data
	Result isGetMySpaceMemberInfoReply_Result `protobuf_oneof:"result"`
}

func (x *GetMySpaceMemberInfoReply) Reset() {
	*x = GetMySpaceMemberInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMySpaceMemberInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMySpaceMemberInfoReply) ProtoMessage() {}

func (x *GetMySpaceMemberInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMySpaceMemberInfoReply.ProtoReflect.Descriptor instead.
func (*GetMySpaceMemberInfoReply) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{61}
}

func (m *GetMySpaceMemberInfoReply) GetResult() isGetMySpaceMemberInfoReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetMySpaceMemberInfoReply) GetError() *comm.ErrorInfo {
	if x, ok := x.GetResult().(*GetMySpaceMemberInfoReply_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetMySpaceMemberInfoReply) GetData() *rsp.SpaceMemberInfo {
	if x, ok := x.GetResult().(*GetMySpaceMemberInfoReply_Data); ok {
		return x.Data
	}
	return nil
}

type isGetMySpaceMemberInfoReply_Result interface {
	isGetMySpaceMemberInfoReply_Result()
}

type GetMySpaceMemberInfoReply_Error struct {
	Error *comm.ErrorInfo `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetMySpaceMemberInfoReply_Data struct {
	Data *rsp.SpaceMemberInfo `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetMySpaceMemberInfoReply_Error) isGetMySpaceMemberInfoReply_Result() {}

func (*GetMySpaceMemberInfoReply_Data) isGetMySpaceMemberInfoReply_Result() {}

type AllSpaceProfileReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AllSpaceProfileReply_Data_SpaceProfile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AllSpaceProfileReply_Data) Reset() {
	*x = AllSpaceProfileReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSpaceProfileReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSpaceProfileReply_Data) ProtoMessage() {}

func (x *AllSpaceProfileReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSpaceProfileReply_Data.ProtoReflect.Descriptor instead.
func (*AllSpaceProfileReply_Data) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{7, 0}
}

func (x *AllSpaceProfileReply_Data) GetList() []*AllSpaceProfileReply_Data_SpaceProfile {
	if x != nil {
		return x.List
	}
	return nil
}

type AllSpaceProfileReply_Data_SpaceProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceId            int64  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	SpaceName          string `protobuf:"bytes,2,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	RelatedWorkItemNum int64  `protobuf:"varint,3,opt,name=relatedWorkItemNum,proto3" json:"relatedWorkItemNum,omitempty"`
	SpaceRole          int64  `protobuf:"varint,4,opt,name=spaceRole,proto3" json:"spaceRole,omitempty"`
	MemberNum          int64  `protobuf:"varint,5,opt,name=memberNum,proto3" json:"memberNum,omitempty"`
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) Reset() {
	*x = AllSpaceProfileReply_Data_SpaceProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSpaceProfileReply_Data_SpaceProfile) ProtoMessage() {}

func (x *AllSpaceProfileReply_Data_SpaceProfile) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSpaceProfileReply_Data_SpaceProfile.ProtoReflect.Descriptor instead.
func (*AllSpaceProfileReply_Data_SpaceProfile) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) GetRelatedWorkItemNum() int64 {
	if x != nil {
		return x.RelatedWorkItemNum
	}
	return 0
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) GetSpaceRole() int64 {
	if x != nil {
		return x.SpaceRole
	}
	return 0
}

func (x *AllSpaceProfileReply_Data_SpaceProfile) GetMemberNum() int64 {
	if x != nil {
		return x.MemberNum
	}
	return 0
}

type MyRelatedCommentByIdsReplyData_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Doc string `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc,omitempty"`
}

func (x *MyRelatedCommentByIdsReplyData_Item) Reset() {
	*x = MyRelatedCommentByIdsReplyData_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRelatedCommentByIdsReplyData_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRelatedCommentByIdsReplyData_Item) ProtoMessage() {}

func (x *MyRelatedCommentByIdsReplyData_Item) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRelatedCommentByIdsReplyData_Item.ProtoReflect.Descriptor instead.
func (*MyRelatedCommentByIdsReplyData_Item) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{19, 0}
}

func (x *MyRelatedCommentByIdsReplyData_Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyRelatedCommentByIdsReplyData_Item) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type ListUserReply_ListUserReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32               `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	List  []*rsp.ViewUserInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListUserReply_ListUserReplyData) Reset() {
	*x = ListUserReply_ListUserReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_v1_user_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserReply_ListUserReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply_ListUserReplyData) ProtoMessage() {}

func (x *ListUserReply_ListUserReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_user_v1_user_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply_ListUserReplyData.ProtoReflect.Descriptor instead.
func (*ListUserReply_ListUserReplyData) Descriptor() ([]byte, []int) {
	return file_user_v1_user_proto_rawDescGZIP(), []int{39, 0}
}

func (x *ListUserReply_ListUserReplyData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListUserReply_ListUserReplyData) GetList() []*rsp.ViewUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_user_v1_user_proto protoreflect.FileDescriptor

var file_user_v1_user_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x76, 0x6f, 0x2f, 0x72, 0x73, 0x70, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22,
	0x44, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb3, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x3e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x30, 0x0a, 0x16, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x80, 0x03, 0x0a, 0x14, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x84,
	0x02, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x1a, 0xb2, 0x01, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x22, 0xb3, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3b, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22,
	0x3b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x14, 0x0a, 0x12,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x7e, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x30, 0x0a, 0x1c, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x4d, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x1e,
	0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x28, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63,
	0x22, 0x3f, 0x0a, 0x17, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x65, 0x0a, 0x19,
	0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x78,
	0x74, 0x50, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74,
	0x50, 0x6f, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8a, 0x01, 0x0a, 0x16, 0x4d, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x32, 0x0a, 0x1a,
	0x4d, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x46, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x49,
	0x64, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x49, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x49, 0x64, 0x78, 0x22, 0x47, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x48, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x40, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x72, 0x0a, 0x0d, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4d, 0x10,
	0x03, 0x12, 0x06, 0x0a, 0x02, 0x51, 0x6c, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x61, 0x6c,
	0x61, 0x6c, 0x61, 0x10, 0x05, 0x22, 0x40, 0x0a, 0x0b, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0b, 0x42, 0x69, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x49, 0x4d, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x51, 0x6c, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x48, 0x61, 0x6c, 0x61, 0x6c, 0x61, 0x10, 0x05, 0x22, 0x3e, 0x0a, 0x09, 0x42, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x50, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x73, 0x70,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x91, 0x02,
	0x0a, 0x0e, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x03, 0x77, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x61, 0x79, 0x52, 0x03,
	0x77, 0x61, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x66, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x66, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x66, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x03, 0x57, 0x61, 0x79, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x77, 0x64, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4d, 0x10, 0x03, 0x12, 0x06, 0x0a,
	0x02, 0x51, 0x4c, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x61, 0x6c, 0x61, 0x6c, 0x61, 0x10,
	0x05, 0x22, 0x61, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x50, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c,
	0x69, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x66, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2a, 0x0a, 0x14, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x5d, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x22, 0x84, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x7e, 0x0a, 0x10, 0x53, 0x65, 0x74,
	0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x74,
	0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xbf, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50, 0x77,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50, 0x77, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x74, 0x79, 0x70, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x65, 0x77, 0x50, 0x77, 0x64, 0x22, 0x29, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x12,
	0x0e, 0x0a, 0x0a, 0x62, 0x79, 0x5f, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x77, 0x64, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x62, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x10, 0x0a, 0x22, 0x7e, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50,
	0x77, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50, 0x77, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50,
	0x77, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x4d, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x82, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d,
	0x79, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x16,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x38, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x89, 0x17, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x59, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x0d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x76,
	0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01,
	0x2a, 0x22, 0x13, 0x6d, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x58, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65,
	0x67, 0x12, 0x68, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x4d, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x6d, 0x79,
	0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2f, 0x73, 0x65, 0x74, 0x12, 0x68, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x6d, 0x79,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x6f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x79, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x6d, 0x79, 0x2f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x2f, 0x73, 0x65, 0x74, 0x12, 0x68, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x79, 0x50, 0x77, 0x64, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50, 0x77, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x79, 0x50, 0x77, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a,
	0x22, 0x0e, 0x2f, 0x6d, 0x79, 0x2f, 0x70, 0x77, 0x64, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x8b, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x65, 0x62, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x4d,
	0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d,
	0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x6d, 0x79, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x55, 0x0a,
	0x06, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x6d, 0x79, 0x2f, 0x75, 0x6e,
	0x62, 0x69, 0x6e, 0x64, 0x12, 0x55, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22,
	0x0a, 0x2f, 0x6d, 0x79, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x77, 0x0a, 0x0e, 0x53,
	0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14,
	0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x73, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x81, 0x01, 0x0a, 0x11, 0x4d, 0x79,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x6d, 0x79, 0x2f, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x80, 0x01,
	0x0a, 0x10, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x6d, 0x79, 0x2f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x12, 0x92, 0x01, 0x0a, 0x15, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x6d, 0x79, 0x2f, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62,
	0x79, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x6a, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22,
	0x10, 0x2f, 0x6d, 0x79, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x73, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01,
	0x2a, 0x22, 0x13, 0x2f, 0x6d, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x73, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x73, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x54, 0x65, 0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x6d, 0x79,
	0x2f, 0x64, 0x65, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x7d, 0x0a, 0x0f, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x6c,
	0x6c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x73, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x6d, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x73, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x98, 0x01, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x6d, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x5f, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x42, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_v1_user_proto_rawDescOnce sync.Once
	file_user_v1_user_proto_rawDescData = file_user_v1_user_proto_rawDesc
)

func file_user_v1_user_proto_rawDescGZIP() []byte {
	file_user_v1_user_proto_rawDescOnce.Do(func() {
		file_user_v1_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_v1_user_proto_rawDescData)
	})
	return file_user_v1_user_proto_rawDescData
}

var file_user_v1_user_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_user_v1_user_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_user_v1_user_proto_goTypes = []interface{}{
	(UnbindRequest_Type)(0),                        // 0: api.user.v1.UnbindRequest.Type
	(BindRequest_Type)(0),                          // 1: api.user.v1.BindRequest.Type
	(RegUserRequest_Way)(0),                        // 2: api.user.v1.RegUserRequest.Way
	(ChangeMyPwdRequestTyp)(0),                     // 3: api.user.v1.ChangeMyPwdRequest.typ
	(*SetThirdPlatformNotifyRequest)(nil),          // 4: api.user.v1.SetThirdPlatformNotifyRequest
	(*SetThirdPlatformNotifyReply)(nil),            // 5: api.user.v1.SetThirdPlatformNotifyReply
	(*GetUserConfigRequest)(nil),                   // 6: api.user.v1.GetUserConfigRequest
	(*GetUserConfigReply)(nil),                     // 7: api.user.v1.GetUserConfigReply
	(*SetUserConfigRequest)(nil),                   // 8: api.user.v1.SetUserConfigRequest
	(*SetUserConfigReply)(nil),                     // 9: api.user.v1.SetUserConfigReply
	(*AllSpaceProfileRequest)(nil),                 // 10: api.user.v1.AllSpaceProfileRequest
	(*AllSpaceProfileReply)(nil),                   // 11: api.user.v1.AllSpaceProfileReply
	(*GetTempConfigRequest)(nil),                   // 12: api.user.v1.GetTempConfigRequest
	(*GetTempConfigReply)(nil),                     // 13: api.user.v1.GetTempConfigReply
	(*SetTempConfigRequest)(nil),                   // 14: api.user.v1.SetTempConfigRequest
	(*SetTempConfigReply)(nil),                     // 15: api.user.v1.SetTempConfigReply
	(*DelTempConfigRequest)(nil),                   // 16: api.user.v1.DelTempConfigRequest
	(*DelTempConfigReply)(nil),                     // 17: api.user.v1.DelTempConfigReply
	(*NotifyCountRequest)(nil),                     // 18: api.user.v1.NotifyCountRequest
	(*NotifyCountReply)(nil),                       // 19: api.user.v1.NotifyCountReply
	(*NotifyCountReplyData)(nil),                   // 20: api.user.v1.NotifyCountReplyData
	(*MyRelatedCommentByIdsRequest)(nil),           // 21: api.user.v1.MyRelatedCommentByIdsRequest
	(*MyRelatedCommentByIdsReply)(nil),             // 22: api.user.v1.MyRelatedCommentByIdsReply
	(*MyRelatedCommentByIdsReplyData)(nil),         // 23: api.user.v1.MyRelatedCommentByIdsReplyData
	(*MyRelatedCommentRequest)(nil),                // 24: api.user.v1.MyRelatedCommentRequest
	(*MyRelatedCommentReply)(nil),                  // 25: api.user.v1.MyRelatedCommentReply
	(*MyRelatedCommentReplyData)(nil),              // 26: api.user.v1.MyRelatedCommentReplyData
	(*MyPendingWorkItemRequest)(nil),               // 27: api.user.v1.MyPendingWorkItemRequest
	(*MyPendingWorkItemReply)(nil),                 // 28: api.user.v1.MyPendingWorkItemReply
	(*MyPendingWorkItemReplyData)(nil),             // 29: api.user.v1.MyPendingWorkItemReplyData
	(*SetSpaceOrderRequest)(nil),                   // 30: api.user.v1.SetSpaceOrderRequest
	(*SetSpaceOrderReply)(nil),                     // 31: api.user.v1.SetSpaceOrderReply
	(*SetSpaceNotifyRequest)(nil),                  // 32: api.user.v1.SetSpaceNotifyRequest
	(*SetSpaceNotifyReply)(nil),                    // 33: api.user.v1.SetSpaceNotifyReply
	(*CancelRequest)(nil),                          // 34: api.user.v1.CancelRequest
	(*CancelReply)(nil),                            // 35: api.user.v1.CancelReply
	(*UnbindRequest)(nil),                          // 36: api.user.v1.UnbindRequest
	(*UnbindReply)(nil),                            // 37: api.user.v1.UnbindReply
	(*BindRequest)(nil),                            // 38: api.user.v1.BindRequest
	(*BindReply)(nil),                              // 39: api.user.v1.BindReply
	(*GetUserRequest)(nil),                         // 40: api.user.v1.GetUserRequest
	(*GetUserReply)(nil),                           // 41: api.user.v1.GetUserReply
	(*ListUserRequest)(nil),                        // 42: api.user.v1.ListUserRequest
	(*ListUserReply)(nil),                          // 43: api.user.v1.ListUserReply
	(*RegUserRequest)(nil),                         // 44: api.user.v1.RegUserRequest
	(*SearchUserByPyRequest)(nil),                  // 45: api.user.v1.SearchUserByPyRequest
	(*SearchUserByPyReply)(nil),                    // 46: api.user.v1.SearchUserByPyReply
	(*CheckUserNameRequest)(nil),                   // 47: api.user.v1.CheckUserNameRequest
	(*CheckUserNameReply)(nil),                     // 48: api.user.v1.CheckUserNameReply
	(*SearchUserByPyReplyData)(nil),                // 49: api.user.v1.SearchUserByPyReplyData
	(*SearchUserListRequest)(nil),                  // 50: api.user.v1.SearchUserListRequest
	(*SearchUserListReply)(nil),                    // 51: api.user.v1.SearchUserListReply
	(*SearchUserListReplyData)(nil),                // 52: api.user.v1.SearchUserListReplyData
	(*SetMyAvatarRequest)(nil),                     // 53: api.user.v1.SetMyAvatarRequest
	(*SetMyAvatarReply)(nil),                       // 54: api.user.v1.SetMyAvatarReply
	(*SetMyAvatarReplyData)(nil),                   // 55: api.user.v1.SetMyAvatarReplyData
	(*ChangeMyPwdRequest)(nil),                     // 56: api.user.v1.ChangeMyPwdRequest
	(*ChangeMyPwdReply)(nil),                       // 57: api.user.v1.ChangeMyPwdReply
	(*ChangeMyPwdReplyData)(nil),                   // 58: api.user.v1.ChangeMyPwdReplyData
	(*SetMyNickNameRquest)(nil),                    // 59: api.user.v1.SetMyNickNameRquest
	(*SetMyNickNameReply)(nil),                     // 60: api.user.v1.SetMyNickNameReply
	(*SetMyNickNameReplyData)(nil),                 // 61: api.user.v1.SetMyNickNameReplyData
	(*GetMyUserInfoRequest)(nil),                   // 62: api.user.v1.GetMyUserInfoRequest
	(*GetMyUserInfoReply)(nil),                     // 63: api.user.v1.GetMyUserInfoReply
	(*GetMySpaceMemberInfoRequest)(nil),            // 64: api.user.v1.GetMySpaceMemberInfoRequest
	(*GetMySpaceMemberInfoReply)(nil),              // 65: api.user.v1.GetMySpaceMemberInfoReply
	nil,                                            // 66: api.user.v1.GetUserConfigReply.DataEntry
	(*AllSpaceProfileReply_Data)(nil),              // 67: api.user.v1.AllSpaceProfileReply.Data
	(*AllSpaceProfileReply_Data_SpaceProfile)(nil), // 68: api.user.v1.AllSpaceProfileReply.Data.SpaceProfile
	nil, // 69: api.user.v1.GetTempConfigReply.DataEntry
	nil, // 70: api.user.v1.SetTempConfigRequest.ConfigsEntry
	(*MyRelatedCommentByIdsReplyData_Item)(nil), // 71: api.user.v1.MyRelatedCommentByIdsReplyData.Item
	(*ListUserReply_ListUserReplyData)(nil),     // 72: api.user.v1.ListUserReply.ListUserReplyData
	(comm.ThirdPlatformCode)(0),                 // 73: comm.ThirdPlatformCode
	(*comm.ErrorInfo)(nil),                      // 74: comm.ErrorInfo
	(*bean.User)(nil),                           // 75: server_go_base.bean.User
	(*rsp.ViewUserWithSpaceInfo)(nil),           // 76: rsp.ViewUserWithSpaceInfo
	(*rsp.SimpleUserInfo)(nil),                  // 77: rsp.SimpleUserInfo
	(*rsp.MyInfo)(nil),                          // 78: rsp.MyInfo
	(*rsp.SpaceMemberInfo)(nil),                 // 79: rsp.SpaceMemberInfo
	(*rsp.ViewUserInfo)(nil),                    // 80: rsp.ViewUserInfo
	(*comm.CommonReply)(nil),                    // 81: comm.CommonReply
}
var file_user_v1_user_proto_depIdxs = []int32{
	73, // 0: api.user.v1.SetThirdPlatformNotifyRequest.platformCode:type_name -> comm.ThirdPlatformCode
	74, // 1: api.user.v1.SetThirdPlatformNotifyReply.error:type_name -> comm.ErrorInfo
	74, // 2: api.user.v1.GetUserConfigReply.error:type_name -> comm.ErrorInfo
	66, // 3: api.user.v1.GetUserConfigReply.data:type_name -> api.user.v1.GetUserConfigReply.DataEntry
	74, // 4: api.user.v1.SetUserConfigReply.error:type_name -> comm.ErrorInfo
	74, // 5: api.user.v1.AllSpaceProfileReply.error:type_name -> comm.ErrorInfo
	67, // 6: api.user.v1.AllSpaceProfileReply.data:type_name -> api.user.v1.AllSpaceProfileReply.Data
	74, // 7: api.user.v1.GetTempConfigReply.error:type_name -> comm.ErrorInfo
	69, // 8: api.user.v1.GetTempConfigReply.data:type_name -> api.user.v1.GetTempConfigReply.DataEntry
	70, // 9: api.user.v1.SetTempConfigRequest.configs:type_name -> api.user.v1.SetTempConfigRequest.ConfigsEntry
	74, // 10: api.user.v1.SetTempConfigReply.error:type_name -> comm.ErrorInfo
	74, // 11: api.user.v1.DelTempConfigReply.error:type_name -> comm.ErrorInfo
	74, // 12: api.user.v1.NotifyCountReply.error:type_name -> comm.ErrorInfo
	20, // 13: api.user.v1.NotifyCountReply.data:type_name -> api.user.v1.NotifyCountReplyData
	74, // 14: api.user.v1.MyRelatedCommentByIdsReply.error:type_name -> comm.ErrorInfo
	23, // 15: api.user.v1.MyRelatedCommentByIdsReply.data:type_name -> api.user.v1.MyRelatedCommentByIdsReplyData
	71, // 16: api.user.v1.MyRelatedCommentByIdsReplyData.items:type_name -> api.user.v1.MyRelatedCommentByIdsReplyData.Item
	74, // 17: api.user.v1.MyRelatedCommentReply.error:type_name -> comm.ErrorInfo
	26, // 18: api.user.v1.MyRelatedCommentReply.data:type_name -> api.user.v1.MyRelatedCommentReplyData
	74, // 19: api.user.v1.MyPendingWorkItemReply.error:type_name -> comm.ErrorInfo
	29, // 20: api.user.v1.MyPendingWorkItemReply.data:type_name -> api.user.v1.MyPendingWorkItemReplyData
	74, // 21: api.user.v1.SetSpaceOrderReply.error:type_name -> comm.ErrorInfo
	74, // 22: api.user.v1.SetSpaceNotifyReply.error:type_name -> comm.ErrorInfo
	74, // 23: api.user.v1.CancelReply.error:type_name -> comm.ErrorInfo
	0,  // 24: api.user.v1.UnbindRequest.type:type_name -> api.user.v1.UnbindRequest.Type
	74, // 25: api.user.v1.UnbindReply.error:type_name -> comm.ErrorInfo
	1,  // 26: api.user.v1.BindRequest.type:type_name -> api.user.v1.BindRequest.Type
	74, // 27: api.user.v1.BindReply.error:type_name -> comm.ErrorInfo
	74, // 28: api.user.v1.GetUserReply.error:type_name -> comm.ErrorInfo
	75, // 29: api.user.v1.GetUserReply.data:type_name -> server_go_base.bean.User
	74, // 30: api.user.v1.ListUserReply.error:type_name -> comm.ErrorInfo
	72, // 31: api.user.v1.ListUserReply.data:type_name -> api.user.v1.ListUserReply.ListUserReplyData
	2,  // 32: api.user.v1.RegUserRequest.way:type_name -> api.user.v1.RegUserRequest.Way
	74, // 33: api.user.v1.SearchUserByPyReply.error:type_name -> comm.ErrorInfo
	49, // 34: api.user.v1.SearchUserByPyReply.data:type_name -> api.user.v1.SearchUserByPyReplyData
	74, // 35: api.user.v1.CheckUserNameReply.error:type_name -> comm.ErrorInfo
	76, // 36: api.user.v1.SearchUserByPyReplyData.list:type_name -> rsp.ViewUserWithSpaceInfo
	74, // 37: api.user.v1.SearchUserListReply.error:type_name -> comm.ErrorInfo
	52, // 38: api.user.v1.SearchUserListReply.data:type_name -> api.user.v1.SearchUserListReplyData
	77, // 39: api.user.v1.SearchUserListReplyData.list:type_name -> rsp.SimpleUserInfo
	74, // 40: api.user.v1.SetMyAvatarReply.error:type_name -> comm.ErrorInfo
	55, // 41: api.user.v1.SetMyAvatarReply.data:type_name -> api.user.v1.SetMyAvatarReplyData
	3,  // 42: api.user.v1.ChangeMyPwdRequest.type:type_name -> api.user.v1.ChangeMyPwdRequest.typ
	74, // 43: api.user.v1.ChangeMyPwdReply.error:type_name -> comm.ErrorInfo
	58, // 44: api.user.v1.ChangeMyPwdReply.data:type_name -> api.user.v1.ChangeMyPwdReplyData
	74, // 45: api.user.v1.SetMyNickNameReply.error:type_name -> comm.ErrorInfo
	61, // 46: api.user.v1.SetMyNickNameReply.data:type_name -> api.user.v1.SetMyNickNameReplyData
	74, // 47: api.user.v1.GetMyUserInfoReply.error:type_name -> comm.ErrorInfo
	78, // 48: api.user.v1.GetMyUserInfoReply.data:type_name -> rsp.MyInfo
	74, // 49: api.user.v1.GetMySpaceMemberInfoReply.error:type_name -> comm.ErrorInfo
	79, // 50: api.user.v1.GetMySpaceMemberInfoReply.data:type_name -> rsp.SpaceMemberInfo
	68, // 51: api.user.v1.AllSpaceProfileReply.Data.list:type_name -> api.user.v1.AllSpaceProfileReply.Data.SpaceProfile
	80, // 52: api.user.v1.ListUserReply.ListUserReplyData.list:type_name -> rsp.ViewUserInfo
	40, // 53: api.user.v1.User.GetUser:input_type -> api.user.v1.GetUserRequest
	47, // 54: api.user.v1.User.CheckUserName:input_type -> api.user.v1.CheckUserNameRequest
	50, // 55: api.user.v1.User.SearchUserList:input_type -> api.user.v1.SearchUserListRequest
	42, // 56: api.user.v1.User.ListUser:input_type -> api.user.v1.ListUserRequest
	44, // 57: api.user.v1.User.RegUser:input_type -> api.user.v1.RegUserRequest
	53, // 58: api.user.v1.User.SetMyAvatar:input_type -> api.user.v1.SetMyAvatarRequest
	62, // 59: api.user.v1.User.GetMyUserInfo:input_type -> api.user.v1.GetMyUserInfoRequest
	59, // 60: api.user.v1.User.SetMyNickName:input_type -> api.user.v1.SetMyNickNameRquest
	56, // 61: api.user.v1.User.ChangeMyPwd:input_type -> api.user.v1.ChangeMyPwdRequest
	64, // 62: api.user.v1.User.GetMySpaceMemberInfo:input_type -> api.user.v1.GetMySpaceMemberInfoRequest
	38, // 63: api.user.v1.User.Bind:input_type -> api.user.v1.BindRequest
	36, // 64: api.user.v1.User.Unbind:input_type -> api.user.v1.UnbindRequest
	34, // 65: api.user.v1.User.Cancel:input_type -> api.user.v1.CancelRequest
	32, // 66: api.user.v1.User.SetSpaceNotify:input_type -> api.user.v1.SetSpaceNotifyRequest
	30, // 67: api.user.v1.User.SetSpaceOrder:input_type -> api.user.v1.SetSpaceOrderRequest
	27, // 68: api.user.v1.User.MyPendingWorkItem:input_type -> api.user.v1.MyPendingWorkItemRequest
	24, // 69: api.user.v1.User.MyRelatedComment:input_type -> api.user.v1.MyRelatedCommentRequest
	21, // 70: api.user.v1.User.MyRelatedCommentByIds:input_type -> api.user.v1.MyRelatedCommentByIdsRequest
	18, // 71: api.user.v1.User.NotifyCount:input_type -> api.user.v1.NotifyCountRequest
	12, // 72: api.user.v1.User.GetTempConfig:input_type -> api.user.v1.GetTempConfigRequest
	14, // 73: api.user.v1.User.SetTempConfig:input_type -> api.user.v1.SetTempConfigRequest
	16, // 74: api.user.v1.User.DelTempConfig:input_type -> api.user.v1.DelTempConfigRequest
	10, // 75: api.user.v1.User.AllSpaceProfile:input_type -> api.user.v1.AllSpaceProfileRequest
	6,  // 76: api.user.v1.User.GetUserConfig:input_type -> api.user.v1.GetUserConfigRequest
	8,  // 77: api.user.v1.User.SetUserConfig:input_type -> api.user.v1.SetUserConfigRequest
	4,  // 78: api.user.v1.User.SetThirdPlatformNotify:input_type -> api.user.v1.SetThirdPlatformNotifyRequest
	41, // 79: api.user.v1.User.GetUser:output_type -> api.user.v1.GetUserReply
	48, // 80: api.user.v1.User.CheckUserName:output_type -> api.user.v1.CheckUserNameReply
	51, // 81: api.user.v1.User.SearchUserList:output_type -> api.user.v1.SearchUserListReply
	43, // 82: api.user.v1.User.ListUser:output_type -> api.user.v1.ListUserReply
	81, // 83: api.user.v1.User.RegUser:output_type -> comm.CommonReply
	54, // 84: api.user.v1.User.SetMyAvatar:output_type -> api.user.v1.SetMyAvatarReply
	63, // 85: api.user.v1.User.GetMyUserInfo:output_type -> api.user.v1.GetMyUserInfoReply
	60, // 86: api.user.v1.User.SetMyNickName:output_type -> api.user.v1.SetMyNickNameReply
	57, // 87: api.user.v1.User.ChangeMyPwd:output_type -> api.user.v1.ChangeMyPwdReply
	65, // 88: api.user.v1.User.GetMySpaceMemberInfo:output_type -> api.user.v1.GetMySpaceMemberInfoReply
	39, // 89: api.user.v1.User.Bind:output_type -> api.user.v1.BindReply
	37, // 90: api.user.v1.User.Unbind:output_type -> api.user.v1.UnbindReply
	35, // 91: api.user.v1.User.Cancel:output_type -> api.user.v1.CancelReply
	33, // 92: api.user.v1.User.SetSpaceNotify:output_type -> api.user.v1.SetSpaceNotifyReply
	31, // 93: api.user.v1.User.SetSpaceOrder:output_type -> api.user.v1.SetSpaceOrderReply
	28, // 94: api.user.v1.User.MyPendingWorkItem:output_type -> api.user.v1.MyPendingWorkItemReply
	25, // 95: api.user.v1.User.MyRelatedComment:output_type -> api.user.v1.MyRelatedCommentReply
	22, // 96: api.user.v1.User.MyRelatedCommentByIds:output_type -> api.user.v1.MyRelatedCommentByIdsReply
	19, // 97: api.user.v1.User.NotifyCount:output_type -> api.user.v1.NotifyCountReply
	13, // 98: api.user.v1.User.GetTempConfig:output_type -> api.user.v1.GetTempConfigReply
	15, // 99: api.user.v1.User.SetTempConfig:output_type -> api.user.v1.SetTempConfigReply
	17, // 100: api.user.v1.User.DelTempConfig:output_type -> api.user.v1.DelTempConfigReply
	11, // 101: api.user.v1.User.AllSpaceProfile:output_type -> api.user.v1.AllSpaceProfileReply
	7,  // 102: api.user.v1.User.GetUserConfig:output_type -> api.user.v1.GetUserConfigReply
	9,  // 103: api.user.v1.User.SetUserConfig:output_type -> api.user.v1.SetUserConfigReply
	5,  // 104: api.user.v1.User.SetThirdPlatformNotify:output_type -> api.user.v1.SetThirdPlatformNotifyReply
	79, // [79:105] is the sub-list for method output_type
	53, // [53:79] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_user_v1_user_proto_init() }
func file_user_v1_user_proto_init() {
	if File_user_v1_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_v1_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetThirdPlatformNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetThirdPlatformNotifyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSpaceProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSpaceProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTempConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTempConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTempConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTempConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTempConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTempConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyCountReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentByIdsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentByIdsReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPendingWorkItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPendingWorkItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPendingWorkItemReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceNotifyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserByPyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserByPyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserByPyReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserListReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyAvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyAvatarReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMyPwdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMyPwdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeMyPwdReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyNickNameRquest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyNickNameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMyNickNameReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyUserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySpaceMemberInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMySpaceMemberInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSpaceProfileReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSpaceProfileReply_Data_SpaceProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRelatedCommentByIdsReplyData_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_v1_user_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserReply_ListUserReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_user_v1_user_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*NotifyCountReply_Error)(nil),
		(*NotifyCountReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*MyRelatedCommentByIdsReply_Error)(nil),
		(*MyRelatedCommentByIdsReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*MyRelatedCommentReply_Error)(nil),
		(*MyRelatedCommentReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*MyPendingWorkItemReply_Error)(nil),
		(*MyPendingWorkItemReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*SetSpaceOrderReply_Error)(nil),
	}
	file_user_v1_user_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*SetSpaceNotifyReply_Error)(nil),
	}
	file_user_v1_user_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*CancelReply_Error)(nil),
	}
	file_user_v1_user_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*UnbindReply_Error)(nil),
	}
	file_user_v1_user_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*BindReply_Error)(nil),
	}
	file_user_v1_user_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*GetUserReply_Error)(nil),
		(*GetUserReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*ListUserReply_Error)(nil),
		(*ListUserReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*SearchUserByPyReply_Error)(nil),
		(*SearchUserByPyReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*CheckUserNameReply_Error)(nil),
		(*CheckUserNameReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[47].OneofWrappers = []interface{}{
		(*SearchUserListReply_Error)(nil),
		(*SearchUserListReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[50].OneofWrappers = []interface{}{
		(*SetMyAvatarReply_Error)(nil),
		(*SetMyAvatarReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[53].OneofWrappers = []interface{}{
		(*ChangeMyPwdReply_Error)(nil),
		(*ChangeMyPwdReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*SetMyNickNameReply_Error)(nil),
		(*SetMyNickNameReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[59].OneofWrappers = []interface{}{
		(*GetMyUserInfoReply_Error)(nil),
		(*GetMyUserInfoReply_Data)(nil),
	}
	file_user_v1_user_proto_msgTypes[61].OneofWrappers = []interface{}{
		(*GetMySpaceMemberInfoReply_Error)(nil),
		(*GetMySpaceMemberInfoReply_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_v1_user_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_v1_user_proto_goTypes,
		DependencyIndexes: file_user_v1_user_proto_depIdxs,
		EnumInfos:         file_user_v1_user_proto_enumTypes,
		MessageInfos:      file_user_v1_user_proto_msgTypes,
	}.Build()
	File_user_v1_user_proto = out.File
	file_user_v1_user_proto_rawDesc = nil
	file_user_v1_user_proto_goTypes = nil
	file_user_v1_user_proto_depIdxs = nil
}
