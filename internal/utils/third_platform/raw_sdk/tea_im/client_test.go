package tea_im

import (
	"fmt"
	"github.com/joho/godotenv"
	"go-cs/pkg/pprint"
	"os"
	"testing"
)

var (
	PlatformCode string
	ApiDomain    string
	PrivateKey   string
	ChatToken    string
)

func init() {
	//err := godotenv.Load(".env.prod.ql.local")
	//err := godotenv.Load(".env.prod.halala.local")
	err := godotenv.Load(".env.test.local")
	//err := godotenv.Load(".env.local")
	if err != nil {
		panic(err)
	}

	PlatformCode = os.Getenv("TEST_PLATFORM_CODE")
	ApiDomain = os.Getenv("TEST_API_DOMAIN")
	PrivateKey = os.Getenv("TEST_PRIVATE_KEY")
	ChatToken = os.Getenv("TEST_CHAT_TOKEN")

	fmt.Println(ApiDomain)
	fmt.Println(PlatformCode)
	fmt.Println(PrivateKey)
	fmt.Println(ChatToken)
}

const svgIcon = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="none" version="1.1" width="24" height="24" viewBox="0 0 24 24"><defs><radialGradient cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" id="master_svg0_1061_2213" gradientTransform="translate(2.934609353542328 3.386191248893738) rotate(24.70902012581756) scale(20.60670025930906 20.60670025930906)"><stop offset="0%" stop-color="#FFAB6B" stop-opacity="1"/><stop offset="100%" stop-color="#F37617" stop-opacity="1"/></radialGradient><clipPath id="master_svg1_1266_9079"><rect x="6" y="6" width="12" height="12" rx="0"/></clipPath></defs><g><g><ellipse cx="12" cy="12" rx="12" ry="12" fill="url(#master_svg0_1061_2213)" fill-opacity="1"/></g><g clip-path="url(#master_svg1_1266_9079)"><g><path d="M10.922119617462158,16.18276896484375Q10.922119617462158,16.13002896484375,10.927288617462159,16.07754896484375Q10.932457617462159,16.02506896484375,10.942745617462158,15.97333896484375Q10.953033617462157,15.92161896484375,10.968341617462158,15.87115896484375Q10.983650617462159,15.82068896484375,11.003830617462159,15.77196896484375Q11.024011617462158,15.72324896484375,11.048871617462158,15.67673896484375Q11.073730617462159,15.63023896484375,11.103028617462158,15.58638896484375Q11.132326617462159,15.54253896484375,11.165781617462159,15.50177896484375Q11.199236617462159,15.46100896484375,11.236525617462158,15.42371896484375Q11.273815617462159,15.38642896484375,11.314579617462158,15.35297896484375Q11.355344617462158,15.31951896484375,11.399192617462159,15.29021896484375Q11.443040617462158,15.26091896484375,11.489548617462159,15.23606896484375Q11.536056617462158,15.21120896484375,11.584777617462159,15.19102896484375Q11.633498617462159,15.17084896484375,11.68396461746216,15.15553896484375Q11.734424617462158,15.14022896484375,11.786154617462158,15.12993896484375Q11.837874617462159,15.11964896484375,11.890354617462158,15.11448896484375Q11.942834617462157,15.10931896484375,11.995564617462158,15.10931896484375Q12.048304617462158,15.10931896484375,12.100784617462159,15.11448896484375Q12.153264617462158,15.11964896484375,12.204984617462157,15.12993896484375Q12.256714617462158,15.14022896484375,12.307174617462158,15.15553896484375Q12.357644617462158,15.17084896484375,12.406364617462158,15.19102896484375Q12.455084617462159,15.21120896484375,12.501594617462159,15.23606896484375Q12.548094617462159,15.26091896484375,12.591944617462158,15.29021896484375Q12.635794617462158,15.31951896484375,12.676554617462159,15.35297896484375Q12.717324617462157,15.38642896484375,12.754614617462158,15.42371896484375Q12.791904617462158,15.46100896484375,12.825354617462159,15.50176896484375Q12.858814617462158,15.54253896484375,12.888114617462158,15.58638896484375Q12.917404617462157,15.63023896484375,12.942264617462158,15.67673896484375Q12.967124617462158,15.72324896484375,12.987304617462158,15.77196896484375Q13.007484617462158,15.82068896484375,13.022794617462157,15.87115896484375Q13.038104617462158,15.92161896484375,13.048394617462158,15.97333896484375Q13.05868461746216,16.02506896484375,13.063854617462159,16.07754896484375Q13.069014617462159,16.13002896484375,13.069014617462159,16.18276896484375Q13.069014617462159,16.23549896484375,13.063854617462159,16.287978964843752Q13.05868461746216,16.340458964843748,13.048394617462158,16.39217896484375Q13.038104617462158,16.44390896484375,13.022794617462157,16.49436896484375Q13.007484617462158,16.54483896484375,12.987304617462158,16.593548964843748Q12.967124617462158,16.64227896484375,12.942264617462158,16.68877896484375Q12.917404617462157,16.73528896484375,12.888114617462158,16.77913896484375Q12.858814617462158,16.82293896484375,12.825354617462159,16.863738964843748Q12.791904617462158,16.904538964843752,12.754614617462158,16.94183896484375Q12.717324617462157,16.97913896484375,12.676554617462159,17.01253896484375Q12.635794617462158,17.04603896484375,12.591944617462158,17.075338964843752Q12.548094617462159,17.10463896484375,12.501594617462159,17.12943896484375Q12.455084617462159,17.154338964843753,12.406364617462158,17.174538964843748Q12.357644617462158,17.194638964843747,12.307174617462158,17.21003896484375Q12.256714617462158,17.22533896484375,12.204984617462157,17.235538964843748Q12.153264617462158,17.24583896484375,12.100784617462159,17.25103896484375Q12.048304617462158,17.25623896484375,11.995564617462158,17.25623896484375Q11.942834617462157,17.25623896484375,11.890354617462158,17.25103896484375Q11.837874617462159,17.24583896484375,11.786154617462158,17.235538964843748Q11.734424617462158,17.22533896484375,11.68396461746216,17.21003896484375Q11.633498617462159,17.194638964843747,11.584777617462159,17.174538964843748Q11.536056617462158,17.154338964843753,11.489548617462159,17.12943896484375Q11.443040617462158,17.10463896484375,11.399192617462159,17.075338964843752Q11.355344617462158,17.04603896484375,11.314579617462158,17.01253896484375Q11.273815617462159,16.97913896484375,11.236525617462158,16.94183896484375Q11.199236617462159,16.904538964843752,11.165781617462159,16.863738964843748Q11.132326617462159,16.82293896484375,11.103028617462158,16.77913896484375Q11.073730617462159,16.73528896484375,11.048871617462158,16.68877896484375Q11.024011617462158,16.64227896484375,11.003830617462159,16.593548964843748Q10.983650617462159,16.54483896484375,10.968341617462158,16.49436896484375Q10.953033617462157,16.44390896484375,10.942745617462158,16.39217896484375Q10.932457617462159,16.340458964843748,10.927288617462159,16.287978964843752Q10.922119617462158,16.23549896484375,10.922119617462158,16.18276896484375ZM11.999904617462159,6.74993896484375C11.199755617462158,6.74993896484375,10.577107617462158,7.44521396484375,10.665029227462158,8.24051896484375L11.222672617462159,13.28475896484375C11.266402617462159,13.68031896484375,11.600675617462159,13.97967896484375,11.998644617462158,13.97967896484375C12.396464617462158,13.97967896484375,12.730664617462159,13.68053896484375,12.774574617462157,13.28514896484375L13.334714617462158,8.24117896484375C13.423054617462158,7.44565296484375,12.800324617462158,6.74993896484375,11.999904617462159,6.74993896484375Z" fill="#FFFFFF" fill-opacity="1"/></g></g></g></svg>`

func TestBind(t *testing.T) {
	cli := NewClient(PlatformCode, PrivateKey, ApiDomain)

	chatToken := ""
	res, err := cli.Bind(chatToken)
	if err != nil {
		t.Error(err)
	}

	t.Log(res)
}

func TestUnBind(t *testing.T) {
	cli := NewClient(PlatformCode, PrivateKey, ApiDomain)

	chatToken := ""
	res, err := cli.UnBind(chatToken)
	if err != nil {
		t.Error(err)
	}

	t.Log(res)
}

func TestPush(t *testing.T) {
	cli := NewClient(PlatformCode, PrivateKey, ApiDomain)

	//icon := "https://qa.balala.eatdesk.net/logo-test.png"
	url := "https://qa.balala.eatdesk.net/#/project/87"

	m := NewRobotMessage().
		SetTitle("Title").
		SetSubTitle("SubTitle").
		SetSubContent("SubContent").
		SetShowType(ShowType_Text).
		//SetIcon(icon).
		SetSVGIcon(svgIcon).
		//SetText("hello world").
		SetTextRich([]RichItem{
			{
				Text:     "Text",
				FontSize: 14,
			},
		}).
		SetUrl(url)

	chatToken := ChatToken
	res, err := cli.PushRobotMessage(m, []string{chatToken})
	if err != nil {
		t.Error(err)
	}

	pprint.Println(res)
}

func TestClient_GetUserInfo(t *testing.T) {
	cli := NewClient(PlatformCode, PrivateKey, ApiDomain)
	token, err := cli.GetUserInfo(ChatToken)
	if err != nil {
		t.Error(err)
	}

	pprint.Println(token)
}
