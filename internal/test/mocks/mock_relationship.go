// Code generated by MockGen. DO NOT EDIT.
// Source: ../biz/relationship.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRelationshipRepo is a mock of RelationshipRepo interface.
type MockRelationshipRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRelationshipRepoMockRecorder
}

// MockRelationshipRepoMockRecorder is the mock recorder for MockRelationshipRepo.
type MockRelationshipRepoMockRecorder struct {
	mock *MockRelationshipRepo
}

// NewMockRelationshipRepo creates a new mock instance.
func NewMockRelationshipRepo(ctrl *gomock.Controller) *MockRelationshipRepo {
	mock := &MockRelationshipRepo{ctrl: ctrl}
	mock.recorder = &MockRelationshipRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRelationshipRepo) EXPECT() *MockRelationshipRepoMockRecorder {
	return m.recorder
}

// AddFollow mocks base method.
func (m *MockRelationshipRepo) AddFollow(arg0 context.Context, arg1, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddFollow", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddFollow indicates an expected call of AddFollow.
func (mr *MockRelationshipRepoMockRecorder) AddFollow(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFollow", reflect.TypeOf((*MockRelationshipRepo)(nil).AddFollow), arg0, arg1, arg2)
}

// AddMigrationRecord mocks base method.
func (m *MockRelationshipRepo) AddMigrationRecord(arg0 context.Context, arg1 int64, arg2 []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMigrationRecord", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddMigrationRecord indicates an expected call of AddMigrationRecord.
func (mr *MockRelationshipRepoMockRecorder) AddMigrationRecord(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMigrationRecord", reflect.TypeOf((*MockRelationshipRepo)(nil).AddMigrationRecord), arg0, arg1, arg2)
}

// DeleteFollow mocks base method.
func (m *MockRelationshipRepo) DeleteFollow(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFollow", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFollow indicates an expected call of DeleteFollow.
func (mr *MockRelationshipRepoMockRecorder) DeleteFollow(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFollow", reflect.TypeOf((*MockRelationshipRepo)(nil).DeleteFollow), arg0, arg1)
}

// GetFanCount mocks base method.
func (m *MockRelationshipRepo) GetFanCount(arg0 context.Context, arg1 int64) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFanCount", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFanCount indicates an expected call of GetFanCount.
func (mr *MockRelationshipRepoMockRecorder) GetFanCount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFanCount", reflect.TypeOf((*MockRelationshipRepo)(nil).GetFanCount), arg0, arg1)
}

// GetFans mocks base method.
func (m *MockRelationshipRepo) GetFans(arg0 context.Context, arg1 int64) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFans", arg0, arg1)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFans indicates an expected call of GetFans.
func (mr *MockRelationshipRepoMockRecorder) GetFans(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFans", reflect.TypeOf((*MockRelationshipRepo)(nil).GetFans), arg0, arg1)
}

// GetFollowCount mocks base method.
func (m *MockRelationshipRepo) GetFollowCount(arg0 context.Context, arg1 int64) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFollowCount", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFollowCount indicates an expected call of GetFollowCount.
func (mr *MockRelationshipRepoMockRecorder) GetFollowCount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFollowCount", reflect.TypeOf((*MockRelationshipRepo)(nil).GetFollowCount), arg0, arg1)
}

// GetFollows mocks base method.
func (m *MockRelationshipRepo) GetFollows(arg0 context.Context, arg1 int64) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFollows", arg0, arg1)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFollows indicates an expected call of GetFollows.
func (mr *MockRelationshipRepoMockRecorder) GetFollows(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFollows", reflect.TypeOf((*MockRelationshipRepo)(nil).GetFollows), arg0, arg1)
}

// GetMigrationTime mocks base method.
func (m *MockRelationshipRepo) GetMigrationTime(arg0 context.Context, arg1 int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMigrationTime", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMigrationTime indicates an expected call of GetMigrationTime.
func (mr *MockRelationshipRepoMockRecorder) GetMigrationTime(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMigrationTime", reflect.TypeOf((*MockRelationshipRepo)(nil).GetMigrationTime), arg0, arg1)
}

// IsFollowing mocks base method.
func (m *MockRelationshipRepo) IsFollowing(arg0 context.Context, arg1, arg2 int64) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsFollowing", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsFollowing indicates an expected call of IsFollowing.
func (mr *MockRelationshipRepoMockRecorder) IsFollowing(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsFollowing", reflect.TypeOf((*MockRelationshipRepo)(nil).IsFollowing), arg0, arg1, arg2)
}

// RemoveFollow mocks base method.
func (m *MockRelationshipRepo) RemoveFollow(arg0 context.Context, arg1, arg2 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveFollow", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveFollow indicates an expected call of RemoveFollow.
func (mr *MockRelationshipRepoMockRecorder) RemoveFollow(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFollow", reflect.TypeOf((*MockRelationshipRepo)(nil).RemoveFollow), arg0, arg1, arg2)
}
