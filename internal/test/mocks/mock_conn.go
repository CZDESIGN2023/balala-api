// Code generated by MockGen. DO NOT EDIT.
// Source: internal/test/mocks/conn_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWebConn is a mock of WebConn interface.
type MockWebConn struct {
	ctrl     *gomock.Controller
	recorder *MockWebConnMockRecorder
}

// MockWebConnMockRecorder is the mock recorder for MockWebConn.
type MockWebConnMockRecorder struct {
	mock *MockWebConn
}

// NewMockWebConn creates a new mock instance.
func NewMockWebConn(ctrl *gomock.Controller) *MockWebConn {
	mock := &MockWebConn{ctrl: ctrl}
	mock.recorder = &MockWebConnMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebConn) EXPECT() *MockWebConnMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockWebConn) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockWebConnMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockWebConn)(nil).Close))
}

// ReadMessage mocks base method.
func (m *MockWebConn) ReadMessage() (int, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMessage")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReadMessage indicates an expected call of ReadMessage.
func (mr *MockWebConnMockRecorder) ReadMessage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMessage", reflect.TypeOf((*MockWebConn)(nil).ReadMessage))
}

// WriteMessage mocks base method.
func (m *MockWebConn) WriteMessage(messageType int, data []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessage", messageType, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessage indicates an expected call of WriteMessage.
func (mr *MockWebConnMockRecorder) WriteMessage(messageType, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessage", reflect.TypeOf((*MockWebConn)(nil).WriteMessage), messageType, data)
}
