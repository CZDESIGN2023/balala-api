// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: bean/vo/rsp/user.proto

package rsp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SimpleUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       int64  `protobuf:"zigzag64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户id
	UserName     string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`             //用户名
	UserNickname string `protobuf:"bytes,4,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"` //用户昵称
	Avatar       string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                                 //用户头像
}

func (x *SimpleUserInfo) Reset() {
	*x = SimpleUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleUserInfo) ProtoMessage() {}

func (x *SimpleUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleUserInfo.ProtoReflect.Descriptor instead.
func (*SimpleUserInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_user_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleUserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SimpleUserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SimpleUserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SimpleUserInfo) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *SimpleUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type SpaceMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId     int64  `protobuf:"zigzag64,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`          //项目空间成员id
	SpaceId      int64  `protobuf:"zigzag64,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`             //项目空间id
	UserId       int64  `protobuf:"zigzag64,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户id
	RoleId       int32  `protobuf:"zigzag32,5,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                //项目空间成员权限
	UserName     string `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`             //用户名
	Mobile       string `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`                                 //中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	UserNickname string `protobuf:"bytes,8,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"` //用户昵称
	UserPinyin   string `protobuf:"bytes,9,opt,name=user_pinyin,json=userPinyin,proto3" json:"user_pinyin,omitempty"`       //用户昵称拼音
	UserStatus   int32  `protobuf:"zigzag32,10,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`   //用户状态;0:禁用,1:正常,2:未验证
	Avatar       string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`                                //用户头像
}

func (x *SpaceMemberInfo) Reset() {
	*x = SpaceMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMemberInfo) ProtoMessage() {}

func (x *SpaceMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMemberInfo.ProtoReflect.Descriptor instead.
func (*SpaceMemberInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_user_proto_rawDescGZIP(), []int{1}
}

func (x *SpaceMemberInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceMemberInfo) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SpaceMemberInfo) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceMemberInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceMemberInfo) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SpaceMemberInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SpaceMemberInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SpaceMemberInfo) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *SpaceMemberInfo) GetUserPinyin() string {
	if x != nil {
		return x.UserPinyin
	}
	return ""
}

func (x *SpaceMemberInfo) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *SpaceMemberInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type MyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                    `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName       string                   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                         //用户名
	Mobile         string                   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                                             //中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	UserNickname   string                   `protobuf:"bytes,4,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`             //用户昵称
	UserPinyin     string                   `protobuf:"bytes,5,opt,name=user_pinyin,json=userPinyin,proto3" json:"user_pinyin,omitempty"`                   //用户昵称拼音
	UserStatus     int32                    `protobuf:"zigzag32,8,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`                //用户状态;0:禁用,1:正常,2:未验证
	UserEmail      string                   `protobuf:"bytes,9,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`                      //用户登录邮箱
	Sex            int32                    `protobuf:"zigzag32,10,opt,name=sex,proto3" json:"sex,omitempty"`                                               //性别;0:保密,1:男,2:女
	Avatar         string                   `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`                                            //用户头像
	Remark         string                   `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                                            //备注
	Describe       string                   `protobuf:"bytes,13,opt,name=describe,proto3" json:"describe,omitempty"`                                        //描述信息
	LastLoginIp    string                   `protobuf:"bytes,14,opt,name=last_login_ip,json=lastLoginIp,proto3" json:"last_login_ip,omitempty"`             //最后登录ip
	LastLoginTime  int64                    `protobuf:"zigzag64,15,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`    //最后登录时间
	CreatedAt      int64                    `protobuf:"zigzag64,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                  //创建时间
	UpdatedAt      int64                    `protobuf:"zigzag64,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                  //更新时间
	DeletedAt      int64                    `protobuf:"zigzag64,18,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                  //删除时间
	CanSetNickName bool                     `protobuf:"varint,19,opt,name=can_set_nick_name,json=canSetNickName,proto3" json:"can_set_nick_name,omitempty"` //能否修改昵称
	Role           int64                    `protobuf:"varint,21,opt,name=role,proto3" json:"role,omitempty"`                                               //用户角色;0:普通用户,50:管理员,100:超级管理员
	BindAccounts   []*MyInfo_ThirdPartyInfo `protobuf:"bytes,20,rep,name=bindAccounts,proto3" json:"bindAccounts,omitempty"`
	Config         map[string]string        `protobuf:"bytes,22,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MyInfo) Reset() {
	*x = MyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyInfo) ProtoMessage() {}

func (x *MyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyInfo.ProtoReflect.Descriptor instead.
func (*MyInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_user_proto_rawDescGZIP(), []int{2}
}

func (x *MyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *MyInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MyInfo) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *MyInfo) GetUserPinyin() string {
	if x != nil {
		return x.UserPinyin
	}
	return ""
}

func (x *MyInfo) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *MyInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *MyInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *MyInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MyInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MyInfo) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *MyInfo) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *MyInfo) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *MyInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MyInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MyInfo) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *MyInfo) GetCanSetNickName() bool {
	if x != nil {
		return x.CanSetNickName
	}
	return false
}

func (x *MyInfo) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *MyInfo) GetBindAccounts() []*MyInfo_ThirdPartyInfo {
	if x != nil {
		return x.BindAccounts
	}
	return nil
}

func (x *MyInfo) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

// 用户基本信息
type ViewUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName       string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                         //用户名
	Mobile         string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                                             //中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	UserNickname   string `protobuf:"bytes,4,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`             //用户昵称
	UserPinyin     string `protobuf:"bytes,5,opt,name=user_pinyin,json=userPinyin,proto3" json:"user_pinyin,omitempty"`                   //用户昵称拼音
	UserStatus     int32  `protobuf:"zigzag32,8,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`                //用户状态;0:禁用,1:正常,2:未验证
	UserEmail      string `protobuf:"bytes,9,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`                      //用户登录邮箱
	Sex            int32  `protobuf:"zigzag32,10,opt,name=sex,proto3" json:"sex,omitempty"`                                               //性别;0:保密,1:男,2:女
	Avatar         string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`                                            //用户头像
	Remark         string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                                            //备注
	Describe       string `protobuf:"bytes,13,opt,name=describe,proto3" json:"describe,omitempty"`                                        //描述信息
	LastLoginIp    string `protobuf:"bytes,14,opt,name=last_login_ip,json=lastLoginIp,proto3" json:"last_login_ip,omitempty"`             //最后登录ip
	LastLoginTime  int64  `protobuf:"zigzag64,15,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`    //最后登录时间
	CreatedAt      int64  `protobuf:"zigzag64,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                  //创建时间
	UpdatedAt      int64  `protobuf:"zigzag64,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                  //更新时间
	DeletedAt      int64  `protobuf:"zigzag64,18,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                  //删除时间
	CanSetNickName bool   `protobuf:"varint,19,opt,name=can_set_nick_name,json=canSetNickName,proto3" json:"can_set_nick_name,omitempty"` //能否修改昵称
}

func (x *ViewUserInfo) Reset() {
	*x = ViewUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewUserInfo) ProtoMessage() {}

func (x *ViewUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewUserInfo.ProtoReflect.Descriptor instead.
func (*ViewUserInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_user_proto_rawDescGZIP(), []int{3}
}

func (x *ViewUserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ViewUserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ViewUserInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ViewUserInfo) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *ViewUserInfo) GetUserPinyin() string {
	if x != nil {
		return x.UserPinyin
	}
	return ""
}

func (x *ViewUserInfo) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *ViewUserInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *ViewUserInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *ViewUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ViewUserInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ViewUserInfo) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ViewUserInfo) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *ViewUserInfo) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *ViewUserInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ViewUserInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ViewUserInfo) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *ViewUserInfo) GetCanSetNickName() bool {
	if x != nil {
		return x.CanSetNickName
	}
	return false
}

// 用户+所在项目空间信息
type ViewUserWithSpaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName           string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                                       //用户名
	Mobile             string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                                                           //中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	UserNickname       string `protobuf:"bytes,4,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`                           //用户昵称
	UserPinyin         string `protobuf:"bytes,5,opt,name=user_pinyin,json=userPinyin,proto3" json:"user_pinyin,omitempty"`                                 //用户昵称拼音
	UserStatus         int32  `protobuf:"zigzag32,8,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`                              //用户状态;0:禁用,1:正常,2:未验证
	UserEmail          string `protobuf:"bytes,9,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`                                    //用户登录邮箱
	Sex                int32  `protobuf:"zigzag32,10,opt,name=sex,proto3" json:"sex,omitempty"`                                                             //性别;0:保密,1:男,2:女
	Avatar             string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                          //用户头像
	Remark             string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                                                          //备注
	Describe           string `protobuf:"bytes,13,opt,name=describe,proto3" json:"describe,omitempty"`                                                      //描述信息
	LastLoginIp        string `protobuf:"bytes,14,opt,name=last_login_ip,json=lastLoginIp,proto3" json:"last_login_ip,omitempty"`                           //最后登录ip
	LastLoginTime      int64  `protobuf:"zigzag64,15,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`                  //最后登录时间
	SpaceId            int64  `protobuf:"zigzag64,16,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                                      //项目空间id
	SpaceMemeberId     int64  `protobuf:"zigzag64,17,opt,name=space_memeber_id,json=spaceMemeberId,proto3" json:"space_memeber_id,omitempty"`               //项目空间成员id
	SpaceMemeberRoleId int32  `protobuf:"zigzag32,18,opt,name=space_memeber_role_id,json=spaceMemeberRoleId,proto3" json:"space_memeber_role_id,omitempty"` //项目空间成员权限
	UserId             int64  `protobuf:"zigzag64,19,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                         //用户id
}

func (x *ViewUserWithSpaceInfo) Reset() {
	*x = ViewUserWithSpaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewUserWithSpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewUserWithSpaceInfo) ProtoMessage() {}

func (x *ViewUserWithSpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewUserWithSpaceInfo.ProtoReflect.Descriptor instead.
func (*ViewUserWithSpaceInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_user_proto_rawDescGZIP(), []int{4}
}

func (x *ViewUserWithSpaceInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetUserPinyin() string {
	if x != nil {
		return x.UserPinyin
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *ViewUserWithSpaceInfo) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetSpaceMemeberId() int64 {
	if x != nil {
		return x.SpaceMemeberId
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetSpaceMemeberRoleId() int32 {
	if x != nil {
		return x.SpaceMemeberRoleId
	}
	return 0
}

func (x *ViewUserWithSpaceInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type MyInfo_ThirdPartyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PfCode        int32  `protobuf:"varint,2,opt,name=pf_code,json=pfCode,proto3" json:"pf_code,omitempty"` //第三方平台唯一标识
	PfName        string `protobuf:"bytes,3,opt,name=pf_name,json=pfName,proto3" json:"pf_name,omitempty"`
	PfUserName    string `protobuf:"bytes,4,opt,name=pf_user_name,json=pfUserName,proto3" json:"pf_user_name,omitempty"`          //第三方平台用户名
	PfUserId      int64  `protobuf:"varint,5,opt,name=pf_user_id,json=pfUserId,proto3" json:"pf_user_id,omitempty"`               //第三方平台用户id
	PfUserAccount string `protobuf:"bytes,6,opt,name=pf_user_account,json=pfUserAccount,proto3" json:"pf_user_account,omitempty"` //第三方平台用户账号
	Notify        int32  `protobuf:"varint,7,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *MyInfo_ThirdPartyInfo) Reset() {
	*x = MyInfo_ThirdPartyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyInfo_ThirdPartyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyInfo_ThirdPartyInfo) ProtoMessage() {}

func (x *MyInfo_ThirdPartyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyInfo_ThirdPartyInfo.ProtoReflect.Descriptor instead.
func (*MyInfo_ThirdPartyInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_user_proto_rawDescGZIP(), []int{2, 0}
}

func (x *MyInfo_ThirdPartyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyInfo_ThirdPartyInfo) GetPfCode() int32 {
	if x != nil {
		return x.PfCode
	}
	return 0
}

func (x *MyInfo_ThirdPartyInfo) GetPfName() string {
	if x != nil {
		return x.PfName
	}
	return ""
}

func (x *MyInfo_ThirdPartyInfo) GetPfUserName() string {
	if x != nil {
		return x.PfUserName
	}
	return ""
}

func (x *MyInfo_ThirdPartyInfo) GetPfUserId() int64 {
	if x != nil {
		return x.PfUserId
	}
	return 0
}

func (x *MyInfo_ThirdPartyInfo) GetPfUserAccount() string {
	if x != nil {
		return x.PfUserAccount
	}
	return ""
}

func (x *MyInfo_ThirdPartyInfo) GetNotify() int32 {
	if x != nil {
		return x.Notify
	}
	return 0
}

var File_bean_vo_rsp_user_proto protoreflect.FileDescriptor

var file_bean_vo_rsp_user_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x76, 0x6f, 0x2f, 0x72, 0x73, 0x70, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x73, 0x70, 0x22, 0x93, 0x01,
	0x0a, 0x0e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x22, 0xbf, 0x02, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x9a, 0x07, 0x0a, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63,
	0x61, 0x6e, 0x53, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x4d, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x62, 0x69, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x16, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0xd2, 0x01, 0x0a, 0x0e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x66, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x66, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x66, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x66, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8b, 0x04, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x9d, 0x04, 0x0a, 0x15, 0x56, 0x69, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e,
	0x79, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x65, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x65, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6d, 0x65,
	0x6d, 0x65, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x12, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x65, 0x62, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x42, 0x20, 0x5a, 0x1e, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x76, 0x6f, 0x2f, 0x72, 0x73, 0x70, 0x3b, 0x72,
	0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bean_vo_rsp_user_proto_rawDescOnce sync.Once
	file_bean_vo_rsp_user_proto_rawDescData = file_bean_vo_rsp_user_proto_rawDesc
)

func file_bean_vo_rsp_user_proto_rawDescGZIP() []byte {
	file_bean_vo_rsp_user_proto_rawDescOnce.Do(func() {
		file_bean_vo_rsp_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_bean_vo_rsp_user_proto_rawDescData)
	})
	return file_bean_vo_rsp_user_proto_rawDescData
}

var file_bean_vo_rsp_user_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_bean_vo_rsp_user_proto_goTypes = []interface{}{
	(*SimpleUserInfo)(nil),        // 0: rsp.SimpleUserInfo
	(*SpaceMemberInfo)(nil),       // 1: rsp.SpaceMemberInfo
	(*MyInfo)(nil),                // 2: rsp.MyInfo
	(*ViewUserInfo)(nil),          // 3: rsp.ViewUserInfo
	(*ViewUserWithSpaceInfo)(nil), // 4: rsp.ViewUserWithSpaceInfo
	(*MyInfo_ThirdPartyInfo)(nil), // 5: rsp.MyInfo.ThirdPartyInfo
	nil,                           // 6: rsp.MyInfo.ConfigEntry
}
var file_bean_vo_rsp_user_proto_depIdxs = []int32{
	5, // 0: rsp.MyInfo.bindAccounts:type_name -> rsp.MyInfo.ThirdPartyInfo
	6, // 1: rsp.MyInfo.config:type_name -> rsp.MyInfo.ConfigEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bean_vo_rsp_user_proto_init() }
func file_bean_vo_rsp_user_proto_init() {
	if File_bean_vo_rsp_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bean_vo_rsp_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewUserWithSpaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyInfo_ThirdPartyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bean_vo_rsp_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bean_vo_rsp_user_proto_goTypes,
		DependencyIndexes: file_bean_vo_rsp_user_proto_depIdxs,
		MessageInfos:      file_bean_vo_rsp_user_proto_msgTypes,
	}.Build()
	File_bean_vo_rsp_user_proto = out.File
	file_bean_vo_rsp_user_proto_rawDesc = nil
	file_bean_vo_rsp_user_proto_goTypes = nil
	file_bean_vo_rsp_user_proto_depIdxs = nil
}
