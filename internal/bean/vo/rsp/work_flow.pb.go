// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: bean/vo/rsp/work_flow.proto

package rsp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OwnerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceOwner bool              `protobuf:"varint,1,opt,name=force_owner,json=forceOwner,proto3" json:"force_owner,omitempty"`
	UsageMode  string            `protobuf:"bytes,2,opt,name=usage_mode,json=usageMode,proto3" json:"usage_mode,omitempty"`
	Value      string            `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	OwnerRole  []*OwnerConf_Role `protobuf:"bytes,4,rep,name=owner_role,json=ownerRole,proto3" json:"owner_role,omitempty"`
}

func (x *OwnerConf) Reset() {
	*x = OwnerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerConf) ProtoMessage() {}

func (x *OwnerConf) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerConf.ProtoReflect.Descriptor instead.
func (*OwnerConf) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{0}
}

func (x *OwnerConf) GetForceOwner() bool {
	if x != nil {
		return x.ForceOwner
	}
	return false
}

func (x *OwnerConf) GetUsageMode() string {
	if x != nil {
		return x.UsageMode
	}
	return ""
}

func (x *OwnerConf) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *OwnerConf) GetOwnerRole() []*OwnerConf_Role {
	if x != nil {
		return x.OwnerRole
	}
	return nil
}

type OwnerConf_Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *OwnerConf_Role) Reset() {
	*x = OwnerConf_Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerConf_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerConf_Role) ProtoMessage() {}

func (x *OwnerConf_Role) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerConf_Role.ProtoReflect.Descriptor instead.
func (*OwnerConf_Role) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{1}
}

func (x *OwnerConf_Role) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OwnerConf_Role) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OwnerConf_Role) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type SpaceWorkFlowList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SpaceWorkFlowList_ListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SpaceWorkFlowList) Reset() {
	*x = SpaceWorkFlowList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowList) ProtoMessage() {}

func (x *SpaceWorkFlowList) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowList.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowList) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{2}
}

func (x *SpaceWorkFlowList) GetList() []*SpaceWorkFlowList_ListItem {
	if x != nil {
		return x.List
	}
	return nil
}

type WorkFlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkItemTypeId        int64                  `protobuf:"varint,2,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	SpaceId               int64                  `protobuf:"varint,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	Name                  string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ranking               int64                  `protobuf:"varint,5,opt,name=ranking,proto3" json:"ranking,omitempty"`
	Version               int32                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt             int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             int64                  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FlowMode              string                 `protobuf:"bytes,10,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	Status                int32                  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	TemplateId            int64                  `protobuf:"varint,12,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateConf          *WorkFlowTemplateConf  `protobuf:"bytes,13,opt,name=template_conf,json=templateConf,proto3" json:"template_conf,omitempty"`
	FlowConf              *WorkFlowDefaultConf   `protobuf:"bytes,14,opt,name=flow_conf,json=flowConf,proto3" json:"flow_conf,omitempty"`
	StateFlowTemplateConf *StateFlowTemplateConf `protobuf:"bytes,15,opt,name=state_flow_template_conf,json=stateFlowTemplateConf,proto3" json:"state_flow_template_conf,omitempty"`
}

func (x *WorkFlowInfo) Reset() {
	*x = WorkFlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowInfo) ProtoMessage() {}

func (x *WorkFlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowInfo.ProtoReflect.Descriptor instead.
func (*WorkFlowInfo) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{3}
}

func (x *WorkFlowInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkFlowInfo) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *WorkFlowInfo) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkFlowInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkFlowInfo) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *WorkFlowInfo) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WorkFlowInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkFlowInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkFlowInfo) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *WorkFlowInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkFlowInfo) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *WorkFlowInfo) GetTemplateConf() *WorkFlowTemplateConf {
	if x != nil {
		return x.TemplateConf
	}
	return nil
}

func (x *WorkFlowInfo) GetFlowConf() *WorkFlowDefaultConf {
	if x != nil {
		return x.FlowConf
	}
	return nil
}

func (x *WorkFlowInfo) GetStateFlowTemplateConf() *StateFlowTemplateConf {
	if x != nil {
		return x.StateFlowTemplateConf
	}
	return nil
}

type FlowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid              string                 `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version           int64                  `protobuf:"zigzag64,4,opt,name=version,proto3" json:"version,omitempty"`
	SpaceId           int64                  `protobuf:"zigzag64,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	WorkItemTypeId    int64                  `protobuf:"zigzag64,6,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	WorkFlowId        int64                  `protobuf:"zigzag64,7,opt,name=work_flow_id,json=workFlowId,proto3" json:"work_flow_id,omitempty"`
	FlowMode          string                 `protobuf:"bytes,8,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	WorkFlowTemplate  *WorkFlowTemplateConf  `protobuf:"bytes,9,opt,name=work_flow_template,json=workFlowTemplate,proto3" json:"work_flow_template,omitempty"`
	StateFlowTemplate *StateFlowTemplateConf `protobuf:"bytes,10,opt,name=state_flow_template,json=stateFlowTemplate,proto3" json:"state_flow_template,omitempty"`
}

func (x *FlowTemplate) Reset() {
	*x = FlowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowTemplate) ProtoMessage() {}

func (x *FlowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowTemplate.ProtoReflect.Descriptor instead.
func (*FlowTemplate) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{4}
}

func (x *FlowTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FlowTemplate) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FlowTemplate) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *FlowTemplate) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *FlowTemplate) GetWorkFlowId() int64 {
	if x != nil {
		return x.WorkFlowId
	}
	return 0
}

func (x *FlowTemplate) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *FlowTemplate) GetWorkFlowTemplate() *WorkFlowTemplateConf {
	if x != nil {
		return x.WorkFlowTemplate
	}
	return nil
}

func (x *FlowTemplate) GetStateFlowTemplate() *StateFlowTemplateConf {
	if x != nil {
		return x.StateFlowTemplate
	}
	return nil
}

type WorkFlowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string                `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version        int64                 `protobuf:"zigzag64,4,opt,name=version,proto3" json:"version,omitempty"`
	SpaceId        int64                 `protobuf:"zigzag64,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	WorkItemTypeId int64                 `protobuf:"zigzag64,6,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	WorkFlowId     int64                 `protobuf:"zigzag64,7,opt,name=work_flow_id,json=workFlowId,proto3" json:"work_flow_id,omitempty"`
	FlowMode       string                `protobuf:"bytes,8,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	Conf           *WorkFlowTemplateConf `protobuf:"bytes,9,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *WorkFlowTemplate) Reset() {
	*x = WorkFlowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowTemplate) ProtoMessage() {}

func (x *WorkFlowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowTemplate.ProtoReflect.Descriptor instead.
func (*WorkFlowTemplate) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{5}
}

func (x *WorkFlowTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkFlowTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkFlowTemplate) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WorkFlowTemplate) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkFlowTemplate) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *WorkFlowTemplate) GetWorkFlowId() int64 {
	if x != nil {
		return x.WorkFlowId
	}
	return 0
}

func (x *WorkFlowTemplate) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *WorkFlowTemplate) GetConf() *WorkFlowTemplateConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

type WorkFlowDefaultConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReasonOptions []*WorkFlowDefaultConfReasonOption `protobuf:"bytes,1,rep,name=reasonOptions,proto3" json:"reasonOptions,omitempty"`
}

func (x *WorkFlowDefaultConf) Reset() {
	*x = WorkFlowDefaultConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowDefaultConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowDefaultConf) ProtoMessage() {}

func (x *WorkFlowDefaultConf) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowDefaultConf.ProtoReflect.Descriptor instead.
func (*WorkFlowDefaultConf) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{6}
}

func (x *WorkFlowDefaultConf) GetReasonOptions() []*WorkFlowDefaultConfReasonOption {
	if x != nil {
		return x.ReasonOptions
	}
	return nil
}

type WorkFlowTemplateConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                              string                `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version                           int64                 `protobuf:"zigzag64,2,opt,name=version,proto3" json:"version,omitempty"`
	Key                               string                `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Nodes                             []*WorkFlowNode       `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Connections                       []*WorkFlowConnection `protobuf:"bytes,5,rep,name=connections,proto3" json:"connections,omitempty"`
	FormFields                        []*WorkFlowFormField  `protobuf:"bytes,6,rep,name=formFields,proto3" json:"formFields,omitempty"`
	TerminatedReasonOptions           []string              `protobuf:"bytes,7,rep,name=terminated_reason_options,json=terminatedReasonOptions,proto3" json:"terminated_reason_options,omitempty"`
	EnableTerminatedReasonOtherOption bool                  `protobuf:"varint,8,opt,name=enable_terminated_reason_other_option,json=enableTerminatedReasonOtherOption,proto3" json:"enable_terminated_reason_other_option,omitempty"`
	RebootReasonOptions               []string              `protobuf:"bytes,9,rep,name=reboot_reason_options,json=rebootReasonOptions,proto3" json:"reboot_reason_options,omitempty"`
	EnableRebootReasonOtherOption     bool                  `protobuf:"varint,10,opt,name=enable_reboot_reason_other_option,json=enableRebootReasonOtherOption,proto3" json:"enable_reboot_reason_other_option,omitempty"`
	ResumeReasonOptions               []string              `protobuf:"bytes,11,rep,name=resume_reason_options,json=resumeReasonOptions,proto3" json:"resume_reason_options,omitempty"`
	EnableResumeReasonOtherOption     bool                  `protobuf:"varint,12,opt,name=enable_resume_reason_other_option,json=enableResumeReasonOtherOption,proto3" json:"enable_resume_reason_other_option,omitempty"`
}

func (x *WorkFlowTemplateConf) Reset() {
	*x = WorkFlowTemplateConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowTemplateConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowTemplateConf) ProtoMessage() {}

func (x *WorkFlowTemplateConf) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowTemplateConf.ProtoReflect.Descriptor instead.
func (*WorkFlowTemplateConf) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{7}
}

func (x *WorkFlowTemplateConf) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkFlowTemplateConf) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WorkFlowTemplateConf) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkFlowTemplateConf) GetNodes() []*WorkFlowNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *WorkFlowTemplateConf) GetConnections() []*WorkFlowConnection {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *WorkFlowTemplateConf) GetFormFields() []*WorkFlowFormField {
	if x != nil {
		return x.FormFields
	}
	return nil
}

func (x *WorkFlowTemplateConf) GetTerminatedReasonOptions() []string {
	if x != nil {
		return x.TerminatedReasonOptions
	}
	return nil
}

func (x *WorkFlowTemplateConf) GetEnableTerminatedReasonOtherOption() bool {
	if x != nil {
		return x.EnableTerminatedReasonOtherOption
	}
	return false
}

func (x *WorkFlowTemplateConf) GetRebootReasonOptions() []string {
	if x != nil {
		return x.RebootReasonOptions
	}
	return nil
}

func (x *WorkFlowTemplateConf) GetEnableRebootReasonOtherOption() bool {
	if x != nil {
		return x.EnableRebootReasonOtherOption
	}
	return false
}

func (x *WorkFlowTemplateConf) GetResumeReasonOptions() []string {
	if x != nil {
		return x.ResumeReasonOptions
	}
	return nil
}

func (x *WorkFlowTemplateConf) GetEnableResumeReasonOtherOption() bool {
	if x != nil {
		return x.EnableResumeReasonOtherOption
	}
	return false
}

type WorkFlowFormField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WorkFlowFormField) Reset() {
	*x = WorkFlowFormField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowFormField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowFormField) ProtoMessage() {}

func (x *WorkFlowFormField) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowFormField.ProtoReflect.Descriptor instead.
func (*WorkFlowFormField) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{8}
}

func (x *WorkFlowFormField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkFlowFormField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type WorkFlowNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                            string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Key                             string               `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	StartMode                       string               `protobuf:"bytes,3,opt,name=start_mode,json=startMode,proto3" json:"start_mode,omitempty"`
	BelongStatus                    string               `protobuf:"bytes,4,opt,name=belong_status,json=belongStatus,proto3" json:"belong_status,omitempty"`
	NeedDoneOperator                bool                 `protobuf:"varint,5,opt,name=need_done_operator,json=needDoneOperator,proto3" json:"need_done_operator,omitempty"`
	DoneOperationRole               []string             `protobuf:"bytes,6,rep,name=done_operation_role,json=doneOperationRole,proto3" json:"done_operation_role,omitempty"`
	PassMode                        string               `protobuf:"bytes,7,opt,name=pass_mode,json=passMode,proto3" json:"pass_mode,omitempty"`
	OnReach                         []*WorkFlowNodeEvent `protobuf:"bytes,8,rep,name=on_reach,json=onReach,proto3" json:"on_reach,omitempty"`
	OnPass                          []*WorkFlowNodeEvent `protobuf:"bytes,9,rep,name=on_pass,json=onPass,proto3" json:"on_pass,omitempty"`
	EnableRollback                  bool                 `protobuf:"varint,10,opt,name=enable_rollback,json=enableRollback,proto3" json:"enable_rollback,omitempty"`
	Owner                           *OwnerConf           `protobuf:"bytes,11,opt,name=owner,proto3" json:"owner,omitempty"`
	DoneOperationDisplayName        string               `protobuf:"bytes,12,opt,name=done_operation_display_name,json=doneOperationDisplayName,proto3" json:"done_operation_display_name,omitempty"`
	EnableClose                     bool                 `protobuf:"varint,13,opt,name=enable_close,json=enableClose,proto3" json:"enable_close,omitempty"`
	StartAt                         int64                `protobuf:"varint,14,opt,name=startAt,proto3" json:"startAt,omitempty"` //节点开始时间
	RollbackReasonOptions           []string             `protobuf:"bytes,15,rep,name=rollback_reason_options,json=rollbackReasonOptions,proto3" json:"rollback_reason_options,omitempty"`
	EnableCloseReasonOtherOption    bool                 `protobuf:"varint,16,opt,name=enable_close_reason_other_option,json=enableCloseReasonOtherOption,proto3" json:"enable_close_reason_other_option,omitempty"`
	RestartReasonOptions            []string             `protobuf:"bytes,17,rep,name=restart_reason_options,json=restartReasonOptions,proto3" json:"restart_reason_options,omitempty"`
	EnableRestartReasonOtherOption  bool                 `protobuf:"varint,19,opt,name=enable_restart_reason_other_option,json=enableRestartReasonOtherOption,proto3" json:"enable_restart_reason_other_option,omitempty"`
	CloseReasonOptions              []string             `protobuf:"bytes,20,rep,name=close_reason_options,json=closeReasonOptions,proto3" json:"close_reason_options,omitempty"`
	EnableRollbackReasonOtherOption bool                 `protobuf:"varint,21,opt,name=enable_rollback_reason_other_option,json=enableRollbackReasonOtherOption,proto3" json:"enable_rollback_reason_other_option,omitempty"`
	ForcePlanTime                   bool                 `protobuf:"varint,22,opt,name=force_plan_time,json=forcePlanTime,proto3" json:"force_plan_time,omitempty"`
}

func (x *WorkFlowNode) Reset() {
	*x = WorkFlowNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowNode) ProtoMessage() {}

func (x *WorkFlowNode) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowNode.ProtoReflect.Descriptor instead.
func (*WorkFlowNode) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{9}
}

func (x *WorkFlowNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkFlowNode) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkFlowNode) GetStartMode() string {
	if x != nil {
		return x.StartMode
	}
	return ""
}

func (x *WorkFlowNode) GetBelongStatus() string {
	if x != nil {
		return x.BelongStatus
	}
	return ""
}

func (x *WorkFlowNode) GetNeedDoneOperator() bool {
	if x != nil {
		return x.NeedDoneOperator
	}
	return false
}

func (x *WorkFlowNode) GetDoneOperationRole() []string {
	if x != nil {
		return x.DoneOperationRole
	}
	return nil
}

func (x *WorkFlowNode) GetPassMode() string {
	if x != nil {
		return x.PassMode
	}
	return ""
}

func (x *WorkFlowNode) GetOnReach() []*WorkFlowNodeEvent {
	if x != nil {
		return x.OnReach
	}
	return nil
}

func (x *WorkFlowNode) GetOnPass() []*WorkFlowNodeEvent {
	if x != nil {
		return x.OnPass
	}
	return nil
}

func (x *WorkFlowNode) GetEnableRollback() bool {
	if x != nil {
		return x.EnableRollback
	}
	return false
}

func (x *WorkFlowNode) GetOwner() *OwnerConf {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *WorkFlowNode) GetDoneOperationDisplayName() string {
	if x != nil {
		return x.DoneOperationDisplayName
	}
	return ""
}

func (x *WorkFlowNode) GetEnableClose() bool {
	if x != nil {
		return x.EnableClose
	}
	return false
}

func (x *WorkFlowNode) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *WorkFlowNode) GetRollbackReasonOptions() []string {
	if x != nil {
		return x.RollbackReasonOptions
	}
	return nil
}

func (x *WorkFlowNode) GetEnableCloseReasonOtherOption() bool {
	if x != nil {
		return x.EnableCloseReasonOtherOption
	}
	return false
}

func (x *WorkFlowNode) GetRestartReasonOptions() []string {
	if x != nil {
		return x.RestartReasonOptions
	}
	return nil
}

func (x *WorkFlowNode) GetEnableRestartReasonOtherOption() bool {
	if x != nil {
		return x.EnableRestartReasonOtherOption
	}
	return false
}

func (x *WorkFlowNode) GetCloseReasonOptions() []string {
	if x != nil {
		return x.CloseReasonOptions
	}
	return nil
}

func (x *WorkFlowNode) GetEnableRollbackReasonOtherOption() bool {
	if x != nil {
		return x.EnableRollbackReasonOtherOption
	}
	return false
}

func (x *WorkFlowNode) GetForcePlanTime() bool {
	if x != nil {
		return x.ForcePlanTime
	}
	return false
}

type WorkFlowNodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType      string            `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Condition      string            `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	TargetSubState *WorkFlowSubState `protobuf:"bytes,3,opt,name=target_sub_state,json=targetSubState,proto3" json:"target_sub_state,omitempty"`
}

func (x *WorkFlowNodeEvent) Reset() {
	*x = WorkFlowNodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowNodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowNodeEvent) ProtoMessage() {}

func (x *WorkFlowNodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowNodeEvent.ProtoReflect.Descriptor instead.
func (*WorkFlowNodeEvent) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{10}
}

func (x *WorkFlowNodeEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *WorkFlowNodeEvent) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *WorkFlowNodeEvent) GetTargetSubState() *WorkFlowSubState {
	if x != nil {
		return x.TargetSubState
	}
	return nil
}

type WorkFlowSubState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Val  string `protobuf:"bytes,4,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *WorkFlowSubState) Reset() {
	*x = WorkFlowSubState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowSubState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowSubState) ProtoMessage() {}

func (x *WorkFlowSubState) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowSubState.ProtoReflect.Descriptor instead.
func (*WorkFlowSubState) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{11}
}

func (x *WorkFlowSubState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkFlowSubState) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkFlowSubState) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkFlowSubState) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type WorkFlowConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartNode string `protobuf:"bytes,1,opt,name=start_node,json=startNode,proto3" json:"start_node,omitempty"`
	EndNode   string `protobuf:"bytes,2,opt,name=end_node,json=endNode,proto3" json:"end_node,omitempty"`
}

func (x *WorkFlowConnection) Reset() {
	*x = WorkFlowConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowConnection) ProtoMessage() {}

func (x *WorkFlowConnection) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowConnection.ProtoReflect.Descriptor instead.
func (*WorkFlowConnection) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{12}
}

func (x *WorkFlowConnection) GetStartNode() string {
	if x != nil {
		return x.StartNode
	}
	return ""
}

func (x *WorkFlowConnection) GetEndNode() string {
	if x != nil {
		return x.EndNode
	}
	return ""
}

type StateFlowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string                 `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version        int64                  `protobuf:"zigzag64,4,opt,name=version,proto3" json:"version,omitempty"`
	SpaceId        int64                  `protobuf:"zigzag64,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	WorkItemTypeId int64                  `protobuf:"zigzag64,6,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	WorkFlowId     int64                  `protobuf:"zigzag64,7,opt,name=work_flow_id,json=workFlowId,proto3" json:"work_flow_id,omitempty"`
	FlowMode       string                 `protobuf:"bytes,8,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	Conf           *StateFlowTemplateConf `protobuf:"bytes,9,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *StateFlowTemplate) Reset() {
	*x = StateFlowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowTemplate) ProtoMessage() {}

func (x *StateFlowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowTemplate.ProtoReflect.Descriptor instead.
func (*StateFlowTemplate) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{13}
}

func (x *StateFlowTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StateFlowTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StateFlowTemplate) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StateFlowTemplate) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *StateFlowTemplate) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *StateFlowTemplate) GetWorkFlowId() int64 {
	if x != nil {
		return x.WorkFlowId
	}
	return 0
}

func (x *StateFlowTemplate) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *StateFlowTemplate) GetConf() *StateFlowTemplateConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

type StateFlowTemplateConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                              string                 `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version                           int64                  `protobuf:"zigzag64,4,opt,name=version,proto3" json:"version,omitempty"`
	Key                               string                 `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	StateFlowNodes                    []*StateFlowNode       `protobuf:"bytes,6,rep,name=stateFlowNodes,proto3" json:"stateFlowNodes,omitempty"`
	StateFlowTransitionRule           []*StateFlowConnection `protobuf:"bytes,7,rep,name=stateFlowTransitionRule,proto3" json:"stateFlowTransitionRule,omitempty"`
	TerminatedReasonOptions           []string               `protobuf:"bytes,8,rep,name=terminated_reason_options,json=terminatedReasonOptions,proto3" json:"terminated_reason_options,omitempty"`
	ResumeReasonOptions               []string               `protobuf:"bytes,9,rep,name=resume_reason_options,json=resumeReasonOptions,proto3" json:"resume_reason_options,omitempty"`
	EnableTerminatedReasonOtherOption bool                   `protobuf:"varint,10,opt,name=enableTerminatedReasonOtherOption,proto3" json:"enableTerminatedReasonOtherOption,omitempty"`
	EnableResumeReasonOtherOption     bool                   `protobuf:"varint,11,opt,name=enableResumeReasonOtherOption,proto3" json:"enableResumeReasonOtherOption,omitempty"`
}

func (x *StateFlowTemplateConf) Reset() {
	*x = StateFlowTemplateConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowTemplateConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowTemplateConf) ProtoMessage() {}

func (x *StateFlowTemplateConf) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowTemplateConf.ProtoReflect.Descriptor instead.
func (*StateFlowTemplateConf) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{14}
}

func (x *StateFlowTemplateConf) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StateFlowTemplateConf) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StateFlowTemplateConf) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StateFlowTemplateConf) GetStateFlowNodes() []*StateFlowNode {
	if x != nil {
		return x.StateFlowNodes
	}
	return nil
}

func (x *StateFlowTemplateConf) GetStateFlowTransitionRule() []*StateFlowConnection {
	if x != nil {
		return x.StateFlowTransitionRule
	}
	return nil
}

func (x *StateFlowTemplateConf) GetTerminatedReasonOptions() []string {
	if x != nil {
		return x.TerminatedReasonOptions
	}
	return nil
}

func (x *StateFlowTemplateConf) GetResumeReasonOptions() []string {
	if x != nil {
		return x.ResumeReasonOptions
	}
	return nil
}

func (x *StateFlowTemplateConf) GetEnableTerminatedReasonOtherOption() bool {
	if x != nil {
		return x.EnableTerminatedReasonOtherOption
	}
	return false
}

func (x *StateFlowTemplateConf) GetEnableResumeReasonOtherOption() bool {
	if x != nil {
		return x.EnableResumeReasonOtherOption
	}
	return false
}

type StateFlowNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key             string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name            string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	SubStateId      string     `protobuf:"bytes,3,opt,name=subStateId,proto3" json:"subStateId,omitempty"`
	SubStateKey     string     `protobuf:"bytes,4,opt,name=subStateKey,proto3" json:"subStateKey,omitempty"`
	SubStateVal     string     `protobuf:"bytes,5,opt,name=subStateVal,proto3" json:"subStateVal,omitempty"`
	IsArchivedState bool       `protobuf:"varint,6,opt,name=is_archived_state,json=isArchivedState,proto3" json:"is_archived_state,omitempty"`
	IsInitState     bool       `protobuf:"varint,7,opt,name=is_init_state,json=isInitState,proto3" json:"is_init_state,omitempty"`
	OperationRole   []string   `protobuf:"bytes,8,rep,name=operation_role,json=operationRole,proto3" json:"operation_role,omitempty"`
	Owner           *OwnerConf `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty"`
	StartAt         int64      `protobuf:"varint,10,opt,name=startAt,proto3" json:"startAt,omitempty"`
}

func (x *StateFlowNode) Reset() {
	*x = StateFlowNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowNode) ProtoMessage() {}

func (x *StateFlowNode) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowNode.ProtoReflect.Descriptor instead.
func (*StateFlowNode) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{15}
}

func (x *StateFlowNode) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StateFlowNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StateFlowNode) GetSubStateId() string {
	if x != nil {
		return x.SubStateId
	}
	return ""
}

func (x *StateFlowNode) GetSubStateKey() string {
	if x != nil {
		return x.SubStateKey
	}
	return ""
}

func (x *StateFlowNode) GetSubStateVal() string {
	if x != nil {
		return x.SubStateVal
	}
	return ""
}

func (x *StateFlowNode) GetIsArchivedState() bool {
	if x != nil {
		return x.IsArchivedState
	}
	return false
}

func (x *StateFlowNode) GetIsInitState() bool {
	if x != nil {
		return x.IsInitState
	}
	return false
}

func (x *StateFlowNode) GetOperationRole() []string {
	if x != nil {
		return x.OperationRole
	}
	return nil
}

func (x *StateFlowNode) GetOwner() *OwnerConf {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *StateFlowNode) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

type StateFlowConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmForm    []string `protobuf:"bytes,1,rep,name=confirm_form,json=confirmForm,proto3" json:"confirm_form,omitempty"`
	SourceStateKey string   `protobuf:"bytes,2,opt,name=sourceStateKey,proto3" json:"sourceStateKey,omitempty"`
	TargetStateKey string   `protobuf:"bytes,3,opt,name=targetStateKey,proto3" json:"targetStateKey,omitempty"`
}

func (x *StateFlowConnection) Reset() {
	*x = StateFlowConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateFlowConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateFlowConnection) ProtoMessage() {}

func (x *StateFlowConnection) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateFlowConnection.ProtoReflect.Descriptor instead.
func (*StateFlowConnection) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{16}
}

func (x *StateFlowConnection) GetConfirmForm() []string {
	if x != nil {
		return x.ConfirmForm
	}
	return nil
}

func (x *StateFlowConnection) GetSourceStateKey() string {
	if x != nil {
		return x.SourceStateKey
	}
	return ""
}

func (x *StateFlowConnection) GetTargetStateKey() string {
	if x != nil {
		return x.TargetStateKey
	}
	return ""
}

type SpaceWorkFlowList_Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SpaceWorkFlowList_Node) Reset() {
	*x = SpaceWorkFlowList_Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowList_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowList_Node) ProtoMessage() {}

func (x *SpaceWorkFlowList_Node) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowList_Node.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowList_Node) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SpaceWorkFlowList_Node) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SpaceWorkFlowList_Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SpaceWorkFlowList_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   string `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *SpaceWorkFlowList_Connection) Reset() {
	*x = SpaceWorkFlowList_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowList_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowList_Connection) ProtoMessage() {}

func (x *SpaceWorkFlowList_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowList_Connection.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowList_Connection) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{2, 1}
}

func (x *SpaceWorkFlowList_Connection) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *SpaceWorkFlowList_Connection) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type SpaceWorkFlowList_TemplateConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes       []*SpaceWorkFlowList_Node       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Connections []*SpaceWorkFlowList_Connection `protobuf:"bytes,2,rep,name=connections,proto3" json:"connections,omitempty"`
}

func (x *SpaceWorkFlowList_TemplateConf) Reset() {
	*x = SpaceWorkFlowList_TemplateConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowList_TemplateConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowList_TemplateConf) ProtoMessage() {}

func (x *SpaceWorkFlowList_TemplateConf) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowList_TemplateConf.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowList_TemplateConf) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{2, 2}
}

func (x *SpaceWorkFlowList_TemplateConf) GetNodes() []*SpaceWorkFlowList_Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *SpaceWorkFlowList_TemplateConf) GetConnections() []*SpaceWorkFlowList_Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type SpaceWorkFlowList_ListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkItemTypeId int64                           `protobuf:"varint,2,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`
	SpaceId        int64                           `protobuf:"varint,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	Name           string                          `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Ranking        int64                           `protobuf:"varint,5,opt,name=ranking,proto3" json:"ranking,omitempty"`
	Version        int32                           `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	CreatedAt      int64                           `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      int64                           `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	FlowMode       string                          `protobuf:"bytes,10,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`
	Status         int32                           `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	TemplateId     int64                           `protobuf:"varint,12,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateConf   *SpaceWorkFlowList_TemplateConf `protobuf:"bytes,13,opt,name=template_conf,json=templateConf,proto3" json:"template_conf,omitempty"`
}

func (x *SpaceWorkFlowList_ListItem) Reset() {
	*x = SpaceWorkFlowList_ListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkFlowList_ListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkFlowList_ListItem) ProtoMessage() {}

func (x *SpaceWorkFlowList_ListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkFlowList_ListItem.ProtoReflect.Descriptor instead.
func (*SpaceWorkFlowList_ListItem) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{2, 3}
}

func (x *SpaceWorkFlowList_ListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceWorkFlowList_ListItem) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *SpaceWorkFlowList_ListItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *SpaceWorkFlowList_ListItem) GetTemplateConf() *SpaceWorkFlowList_TemplateConf {
	if x != nil {
		return x.TemplateConf
	}
	return nil
}

type WorkFlowDefaultConfReasonOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *WorkFlowDefaultConfReasonOption) Reset() {
	*x = WorkFlowDefaultConfReasonOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowDefaultConfReasonOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowDefaultConfReasonOption) ProtoMessage() {}

func (x *WorkFlowDefaultConfReasonOption) ProtoReflect() protoreflect.Message {
	mi := &file_bean_vo_rsp_work_flow_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowDefaultConfReasonOption.ProtoReflect.Descriptor instead.
func (*WorkFlowDefaultConfReasonOption) Descriptor() ([]byte, []int) {
	return file_bean_vo_rsp_work_flow_proto_rawDescGZIP(), []int{6, 0}
}

func (x *WorkFlowDefaultConfReasonOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkFlowDefaultConfReasonOption) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_bean_vo_rsp_work_flow_proto protoreflect.FileDescriptor

var file_bean_vo_rsp_work_flow_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x76, 0x6f, 0x2f, 0x72, 0x73, 0x70, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72,
	0x73, 0x70, 0x22, 0x95, 0x01, 0x0a, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x73, 0x70,
	0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x0e, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0xc0, 0x05, 0x0a, 0x11, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x2e, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x34, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x1a, 0x86, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x12, 0x31, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72,
	0x73, 0x70, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x86, 0x03, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x22, 0x8c, 0x04, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x73,
	0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x12,
	0x53, 0x0a, 0x18, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x15, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x22, 0xe6, 0x02, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x10, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x84, 0x02,
	0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f,
	0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04,
	0x63, 0x6f, 0x6e, 0x66, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f,
	0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x4c, 0x0a, 0x0d,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x2e, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0d, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfc, 0x04, 0x0a, 0x14, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x73, 0x70,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3a,
	0x0a, 0x19, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x25, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x72, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x62,
	0x6f, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x48, 0x0a, 0x21, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x62, 0x6f, 0x6f,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x62, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65,
	0x73, 0x75, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x48,
	0x0a, 0x21, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcc, 0x07, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b,
	0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10,
	0x6e, 0x65, 0x65, 0x64, 0x44, 0x6f, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x2e, 0x0a, 0x13, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x64,
	0x6f, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x68, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f,
	0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x63, 0x68,
	0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6f, 0x6e, 0x50, 0x61, 0x73,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x73, 0x70, 0x2e,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x3d, 0x0a, 0x1b, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x64, 0x6f, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x72, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x72,
	0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x22, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4c, 0x0a, 0x23, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x10, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x57, 0x6f,
	0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x53, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x4e, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x72, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22,
	0xeb, 0x03, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f,
	0x77, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x17, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c,
	0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x17, 0x73, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x21, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x21, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1d, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4f, 0x74, 0x68,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x02,
	0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x49, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x73, 0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x22, 0x88, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x20, 0x5a, 0x1e, 0x67,
	0x6f, 0x2d, 0x63, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x65,
	0x61, 0x6e, 0x2f, 0x76, 0x6f, 0x2f, 0x72, 0x73, 0x70, 0x3b, 0x72, 0x73, 0x70, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bean_vo_rsp_work_flow_proto_rawDescOnce sync.Once
	file_bean_vo_rsp_work_flow_proto_rawDescData = file_bean_vo_rsp_work_flow_proto_rawDesc
)

func file_bean_vo_rsp_work_flow_proto_rawDescGZIP() []byte {
	file_bean_vo_rsp_work_flow_proto_rawDescOnce.Do(func() {
		file_bean_vo_rsp_work_flow_proto_rawDescData = protoimpl.X.CompressGZIP(file_bean_vo_rsp_work_flow_proto_rawDescData)
	})
	return file_bean_vo_rsp_work_flow_proto_rawDescData
}

var file_bean_vo_rsp_work_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_bean_vo_rsp_work_flow_proto_goTypes = []interface{}{
	(*OwnerConf)(nil),                       // 0: rsp.OwnerConf
	(*OwnerConf_Role)(nil),                  // 1: rsp.OwnerConf_Role
	(*SpaceWorkFlowList)(nil),               // 2: rsp.SpaceWorkFlowList
	(*WorkFlowInfo)(nil),                    // 3: rsp.WorkFlowInfo
	(*FlowTemplate)(nil),                    // 4: rsp.FlowTemplate
	(*WorkFlowTemplate)(nil),                // 5: rsp.WorkFlowTemplate
	(*WorkFlowDefaultConf)(nil),             // 6: rsp.WorkFlowDefaultConf
	(*WorkFlowTemplateConf)(nil),            // 7: rsp.WorkFlowTemplateConf
	(*WorkFlowFormField)(nil),               // 8: rsp.WorkFlowFormField
	(*WorkFlowNode)(nil),                    // 9: rsp.WorkFlowNode
	(*WorkFlowNodeEvent)(nil),               // 10: rsp.WorkFlowNodeEvent
	(*WorkFlowSubState)(nil),                // 11: rsp.WorkFlowSubState
	(*WorkFlowConnection)(nil),              // 12: rsp.WorkFlowConnection
	(*StateFlowTemplate)(nil),               // 13: rsp.StateFlowTemplate
	(*StateFlowTemplateConf)(nil),           // 14: rsp.StateFlowTemplateConf
	(*StateFlowNode)(nil),                   // 15: rsp.StateFlowNode
	(*StateFlowConnection)(nil),             // 16: rsp.StateFlowConnection
	(*SpaceWorkFlowList_Node)(nil),          // 17: rsp.SpaceWorkFlowList.Node
	(*SpaceWorkFlowList_Connection)(nil),    // 18: rsp.SpaceWorkFlowList.Connection
	(*SpaceWorkFlowList_TemplateConf)(nil),  // 19: rsp.SpaceWorkFlowList.TemplateConf
	(*SpaceWorkFlowList_ListItem)(nil),      // 20: rsp.SpaceWorkFlowList.ListItem
	(*WorkFlowDefaultConfReasonOption)(nil), // 21: rsp.WorkFlowDefaultConf.reason_option
}
var file_bean_vo_rsp_work_flow_proto_depIdxs = []int32{
	1,  // 0: rsp.OwnerConf.owner_role:type_name -> rsp.OwnerConf_Role
	20, // 1: rsp.SpaceWorkFlowList.list:type_name -> rsp.SpaceWorkFlowList.ListItem
	7,  // 2: rsp.WorkFlowInfo.template_conf:type_name -> rsp.WorkFlowTemplateConf
	6,  // 3: rsp.WorkFlowInfo.flow_conf:type_name -> rsp.WorkFlowDefaultConf
	14, // 4: rsp.WorkFlowInfo.state_flow_template_conf:type_name -> rsp.StateFlowTemplateConf
	7,  // 5: rsp.FlowTemplate.work_flow_template:type_name -> rsp.WorkFlowTemplateConf
	14, // 6: rsp.FlowTemplate.state_flow_template:type_name -> rsp.StateFlowTemplateConf
	7,  // 7: rsp.WorkFlowTemplate.conf:type_name -> rsp.WorkFlowTemplateConf
	21, // 8: rsp.WorkFlowDefaultConf.reasonOptions:type_name -> rsp.WorkFlowDefaultConf.reason_option
	9,  // 9: rsp.WorkFlowTemplateConf.nodes:type_name -> rsp.WorkFlowNode
	12, // 10: rsp.WorkFlowTemplateConf.connections:type_name -> rsp.WorkFlowConnection
	8,  // 11: rsp.WorkFlowTemplateConf.formFields:type_name -> rsp.WorkFlowFormField
	10, // 12: rsp.WorkFlowNode.on_reach:type_name -> rsp.WorkFlowNodeEvent
	10, // 13: rsp.WorkFlowNode.on_pass:type_name -> rsp.WorkFlowNodeEvent
	0,  // 14: rsp.WorkFlowNode.owner:type_name -> rsp.OwnerConf
	11, // 15: rsp.WorkFlowNodeEvent.target_sub_state:type_name -> rsp.WorkFlowSubState
	14, // 16: rsp.StateFlowTemplate.conf:type_name -> rsp.StateFlowTemplateConf
	15, // 17: rsp.StateFlowTemplateConf.stateFlowNodes:type_name -> rsp.StateFlowNode
	16, // 18: rsp.StateFlowTemplateConf.stateFlowTransitionRule:type_name -> rsp.StateFlowConnection
	0,  // 19: rsp.StateFlowNode.owner:type_name -> rsp.OwnerConf
	17, // 20: rsp.SpaceWorkFlowList.TemplateConf.nodes:type_name -> rsp.SpaceWorkFlowList.Node
	18, // 21: rsp.SpaceWorkFlowList.TemplateConf.connections:type_name -> rsp.SpaceWorkFlowList.Connection
	19, // 22: rsp.SpaceWorkFlowList.ListItem.template_conf:type_name -> rsp.SpaceWorkFlowList.TemplateConf
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_bean_vo_rsp_work_flow_proto_init() }
func file_bean_vo_rsp_work_flow_proto_init() {
	if File_bean_vo_rsp_work_flow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bean_vo_rsp_work_flow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerConf_Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowDefaultConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowTemplateConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowFormField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowNodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowSubState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowTemplateConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateFlowConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowList_Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowList_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowList_TemplateConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkFlowList_ListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_vo_rsp_work_flow_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowDefaultConfReasonOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bean_vo_rsp_work_flow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bean_vo_rsp_work_flow_proto_goTypes,
		DependencyIndexes: file_bean_vo_rsp_work_flow_proto_depIdxs,
		MessageInfos:      file_bean_vo_rsp_work_flow_proto_msgTypes,
	}.Build()
	File_bean_vo_rsp_work_flow_proto = out.File
	file_bean_vo_rsp_work_flow_proto_rawDesc = nil
	file_bean_vo_rsp_work_flow_proto_goTypes = nil
	file_bean_vo_rsp_work_flow_proto_depIdxs = nil
}
