// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: bean/types.proto

package bean

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 更新的表枚举,从1000起步, 其他项目可以从2000起, 一个项目保留1000够用了
type Table int32

const (
	Table_UNKNOWN           Table = 0
	Table_USER              Table = 1000
	Table_CONFIG            Table = 1001
	Table_ASSETS            Table = 1012
	Table_FILE_INFO         Table = 1013
	Table_SPACE             Table = 1014
	Table_SPACE_MEMBER      Table = 1015
	Table_SPACE_WORK_OBJECT Table = 1016
	// SPACE_WORK_ITEM = 1017;
	// SPACE_WORK_PATH = 1018;
	Table_SPACE_TAG Table = 1019
	// SPACE_TAG_RELATION = 1020;
	// SPACE_WORK_TASK = 1021;
	// SPACE_WORK_DIRECTOR_RELATION = 1022;
	Table_SPACE_FILE_INFO     Table = 1023
	Table_USER_LOGIN_LOG      Table = 1024
	Table_OPER_LOG            Table = 1025
	Table_SPACE_WORK_ITEM_V_2 Table = 1026
	// SPACE_WORK_FLOW = 1027;
	Table_SPACE_WORK_ITEM_FLOW_V_2      Table = 1028
	Table_SPACE_WORK_ITEM_DOC_V_2       Table = 1029
	Table_SPACE_WORK_ITEM_COMMENT       Table = 1030
	Table_THIRD_PF_ACCOUNT              Table = 1031
	Table_USER_SECURE_ACCOUNT           Table = 1032
	Table_NOTIFY                        Table = 1033
	Table_SPACE_WORK_VERSION            Table = 1034
	Table_MEMBER_CATEGORY               Table = 1035
	Table_SPACE_MEMBER_CATEGORY         Table = 1036
	Table_SPACE_CONFIG                  Table = 1037
	Table_WORK_ITEM_TYPE                Table = 1038
	Table_WORK_ITEM_STATUS              Table = 1039
	Table_WORK_FLOW                     Table = 1040
	Table_WORK_FLOW_TEMPLATE            Table = 1041
	Table_WORK_ITEM_ROLE                Table = 1042
	Table_SPACE_WORK_ITEM_FLOW_ROLE_V_2 Table = 1043
	Table_SPACE_GLOBAL_VIEW             Table = 1044
	Table_SPACE_USER_VIEW               Table = 1045
	Table_USER_CONFIG                   Table = 1046
)

// Enum value maps for Table.
var (
	Table_name = map[int32]string{
		0:    "UNKNOWN",
		1000: "USER",
		1001: "CONFIG",
		1012: "ASSETS",
		1013: "FILE_INFO",
		1014: "SPACE",
		1015: "SPACE_MEMBER",
		1016: "SPACE_WORK_OBJECT",
		1019: "SPACE_TAG",
		1023: "SPACE_FILE_INFO",
		1024: "USER_LOGIN_LOG",
		1025: "OPER_LOG",
		1026: "SPACE_WORK_ITEM_V_2",
		1028: "SPACE_WORK_ITEM_FLOW_V_2",
		1029: "SPACE_WORK_ITEM_DOC_V_2",
		1030: "SPACE_WORK_ITEM_COMMENT",
		1031: "THIRD_PF_ACCOUNT",
		1032: "USER_SECURE_ACCOUNT",
		1033: "NOTIFY",
		1034: "SPACE_WORK_VERSION",
		1035: "MEMBER_CATEGORY",
		1036: "SPACE_MEMBER_CATEGORY",
		1037: "SPACE_CONFIG",
		1038: "WORK_ITEM_TYPE",
		1039: "WORK_ITEM_STATUS",
		1040: "WORK_FLOW",
		1041: "WORK_FLOW_TEMPLATE",
		1042: "WORK_ITEM_ROLE",
		1043: "SPACE_WORK_ITEM_FLOW_ROLE_V_2",
		1044: "SPACE_GLOBAL_VIEW",
		1045: "SPACE_USER_VIEW",
		1046: "USER_CONFIG",
	}
	Table_value = map[string]int32{
		"UNKNOWN":                       0,
		"USER":                          1000,
		"CONFIG":                        1001,
		"ASSETS":                        1012,
		"FILE_INFO":                     1013,
		"SPACE":                         1014,
		"SPACE_MEMBER":                  1015,
		"SPACE_WORK_OBJECT":             1016,
		"SPACE_TAG":                     1019,
		"SPACE_FILE_INFO":               1023,
		"USER_LOGIN_LOG":                1024,
		"OPER_LOG":                      1025,
		"SPACE_WORK_ITEM_V_2":           1026,
		"SPACE_WORK_ITEM_FLOW_V_2":      1028,
		"SPACE_WORK_ITEM_DOC_V_2":       1029,
		"SPACE_WORK_ITEM_COMMENT":       1030,
		"THIRD_PF_ACCOUNT":              1031,
		"USER_SECURE_ACCOUNT":           1032,
		"NOTIFY":                        1033,
		"SPACE_WORK_VERSION":            1034,
		"MEMBER_CATEGORY":               1035,
		"SPACE_MEMBER_CATEGORY":         1036,
		"SPACE_CONFIG":                  1037,
		"WORK_ITEM_TYPE":                1038,
		"WORK_ITEM_STATUS":              1039,
		"WORK_FLOW":                     1040,
		"WORK_FLOW_TEMPLATE":            1041,
		"WORK_ITEM_ROLE":                1042,
		"SPACE_WORK_ITEM_FLOW_ROLE_V_2": 1043,
		"SPACE_GLOBAL_VIEW":             1044,
		"SPACE_USER_VIEW":               1045,
		"USER_CONFIG":                   1046,
	}
)

func (x Table) Enum() *Table {
	p := new(Table)
	*p = x
	return p
}

func (x Table) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Table) Descriptor() protoreflect.EnumDescriptor {
	return file_bean_types_proto_enumTypes[0].Descriptor()
}

func (Table) Type() protoreflect.EnumType {
	return &file_bean_types_proto_enumTypes[0]
}

func (x Table) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Table.Descriptor instead.
func (Table) EnumDescriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{0}
}

// [db] 工作项类型-工作流
type WorkItemRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,13,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         int64  `protobuf:"zigzag64,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SpaceId        int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                           //空间id
	WorkItemTypeId int64  `protobuf:"zigzag64,10,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"` //工作项类型id
	Key            string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                               //名称
	Status         int64  `protobuf:"zigzag64,5,opt,name=status,proto3" json:"status,omitempty"`                        ////状态;0:禁用,1:正常
	Ranking        int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                      //排序
	IsSys          int32  `protobuf:"zigzag32,11,opt,name=is_sys,json=isSys,proto3" json:"is_sys,omitempty"`            //是否系统预设
	CreatedAt      int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt      int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt      int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
	FlowScope      string `protobuf:"bytes,15,opt,name=flow_scope,json=flowScope,proto3" json:"flow_scope,omitempty"`   //应用流程范围
}

func (x *WorkItemRole) Reset() {
	*x = WorkItemRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkItemRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkItemRole) ProtoMessage() {}

func (x *WorkItemRole) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkItemRole.ProtoReflect.Descriptor instead.
func (*WorkItemRole) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{0}
}

func (x *WorkItemRole) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkItemRole) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkItemRole) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WorkItemRole) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkItemRole) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *WorkItemRole) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkItemRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkItemRole) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkItemRole) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *WorkItemRole) GetIsSys() int32 {
	if x != nil {
		return x.IsSys
	}
	return 0
}

func (x *WorkItemRole) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkItemRole) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkItemRole) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *WorkItemRole) GetFlowScope() string {
	if x != nil {
		return x.FlowScope
	}
	return ""
}

// [db] 工作项类型-工作流
type WorkFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,13,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         int64  `protobuf:"zigzag64,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SpaceId        int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                           //空间id
	WorkItemTypeId int64  `protobuf:"zigzag64,10,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"` //工作项类型id
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                   //名称
	Key            string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	FlowMode       string `protobuf:"bytes,11,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`                        //流程模式
	Version        int32  `protobuf:"zigzag32,12,opt,name=version,proto3" json:"version,omitempty"`                                       //版本
	LastTemplateId int64  `protobuf:"zigzag64,15,opt,name=last_template_id,json=lastTemplateId,proto3" json:"last_template_id,omitempty"` //最大流程模版id
	Status         int64  `protobuf:"zigzag64,5,opt,name=status,proto3" json:"status,omitempty"`                                          ////状态;0:禁用,1:正常
	Ranking        int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                                        //排序
	CreatedAt      int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                   //创建时间
	UpdatedAt      int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                   //更新时间
	DeletedAt      int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                   //删除时间
	IsSys          int32  `protobuf:"zigzag32,16,opt,name=is_sys,json=isSys,proto3" json:"is_sys,omitempty"`                              //是否系统预设
}

func (x *WorkFlow) Reset() {
	*x = WorkFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlow) ProtoMessage() {}

func (x *WorkFlow) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlow.ProtoReflect.Descriptor instead.
func (*WorkFlow) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{1}
}

func (x *WorkFlow) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkFlow) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkFlow) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WorkFlow) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkFlow) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *WorkFlow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkFlow) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkFlow) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *WorkFlow) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WorkFlow) GetLastTemplateId() int64 {
	if x != nil {
		return x.LastTemplateId
	}
	return 0
}

func (x *WorkFlow) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkFlow) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *WorkFlow) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkFlow) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkFlow) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *WorkFlow) GetIsSys() int32 {
	if x != nil {
		return x.IsSys
	}
	return 0
}

// [db] 工作项类型-工作流模版
type WorkFlowTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,13,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         int64  `protobuf:"zigzag64,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SpaceId        int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                           //空间id
	WorkItemTypeId int64  `protobuf:"zigzag64,10,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"` //工作项类型id
	WorkFlowId     int64  `protobuf:"zigzag64,12,opt,name=work_flow_id,json=workFlowId,proto3" json:"work_flow_id,omitempty"`               //工作流id
	FlowMode       string `protobuf:"bytes,11,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`                          //流程模式
	Version        int32  `protobuf:"zigzag32,15,opt,name=version,proto3" json:"version,omitempty"`                                         //版本
	Setting        string `protobuf:"bytes,14,opt,name=setting,proto3" json:"setting,omitempty"`                                            //设置
	Status         int64  `protobuf:"zigzag64,5,opt,name=status,proto3" json:"status,omitempty"`                                            ////状态;0:禁用,1:正常
	CreatedAt      int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                     //创建时间
	UpdatedAt      int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                     //更新时间
	DeletedAt      int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                     //删除时间
}

func (x *WorkFlowTemplate) Reset() {
	*x = WorkFlowTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkFlowTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkFlowTemplate) ProtoMessage() {}

func (x *WorkFlowTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkFlowTemplate.ProtoReflect.Descriptor instead.
func (*WorkFlowTemplate) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{2}
}

func (x *WorkFlowTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkFlowTemplate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkFlowTemplate) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WorkFlowTemplate) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkFlowTemplate) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *WorkFlowTemplate) GetWorkFlowId() int64 {
	if x != nil {
		return x.WorkFlowId
	}
	return 0
}

func (x *WorkFlowTemplate) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *WorkFlowTemplate) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *WorkFlowTemplate) GetSetting() string {
	if x != nil {
		return x.Setting
	}
	return ""
}

func (x *WorkFlowTemplate) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkFlowTemplate) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkFlowTemplate) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkFlowTemplate) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 任务类型
type WorkItemType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string `protobuf:"bytes,13,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId    int64  `protobuf:"zigzag64,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SpaceId   int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`       //空间id
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               //名称
	Key       string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`                                 //编码
	FlowMode  string `protobuf:"bytes,10,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`      //流程模式
	Ranking   int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                      //排序
	Status    int64  `protobuf:"zigzag64,5,opt,name=status,proto3" json:"status,omitempty"`                        ////状态;0:禁用,1:正常
	CreatedAt int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
	IsSys     int32  `protobuf:"zigzag32,11,opt,name=is_sys,json=isSys,proto3" json:"is_sys,omitempty"`            //是否系统预设
}

func (x *WorkItemType) Reset() {
	*x = WorkItemType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkItemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkItemType) ProtoMessage() {}

func (x *WorkItemType) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkItemType.ProtoReflect.Descriptor instead.
func (*WorkItemType) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{3}
}

func (x *WorkItemType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkItemType) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkItemType) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WorkItemType) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkItemType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkItemType) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkItemType) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *WorkItemType) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *WorkItemType) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkItemType) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkItemType) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkItemType) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *WorkItemType) GetIsSys() int32 {
	if x != nil {
		return x.IsSys
	}
	return 0
}

// [db]工作项状态
type WorkItemStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid           string `protobuf:"bytes,13,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId         int64  `protobuf:"zigzag64,15,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SpaceId        int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                           //空间id
	WorkItemTypeId int64  `protobuf:"zigzag64,10,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"` //工作项类型id
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                   //名称
	Key            string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`                                                     //工作项状态key
	Val            string `protobuf:"bytes,11,opt,name=val,proto3" json:"val,omitempty"`                                                    //工作项状态值
	StatusType     int32  `protobuf:"zigzag32,12,opt,name=status_type,json=statusType,proto3" json:"status_type,omitempty"`                 //工作项状态类型 1:起始 2:过程 3:归档
	Ranking        int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                                          //排序
	Status         int64  `protobuf:"zigzag64,5,opt,name=status,proto3" json:"status,omitempty"`                                            //状态;0:禁用,1:正常
	CreatedAt      int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                     //创建时间
	UpdatedAt      int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                     //更新时间
	DeletedAt      int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                     //删除时间
	IsSys          int32  `protobuf:"zigzag32,14,opt,name=is_sys,json=isSys,proto3" json:"is_sys,omitempty"`                                //是否系统预设
	FlowScope      string `protobuf:"bytes,16,opt,name=flow_scope,json=flowScope,proto3" json:"flow_scope,omitempty"`                       //应用流程范围
}

func (x *WorkItemStatus) Reset() {
	*x = WorkItemStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkItemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkItemStatus) ProtoMessage() {}

func (x *WorkItemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkItemStatus.ProtoReflect.Descriptor instead.
func (*WorkItemStatus) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{4}
}

func (x *WorkItemStatus) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkItemStatus) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *WorkItemStatus) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WorkItemStatus) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *WorkItemStatus) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *WorkItemStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkItemStatus) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WorkItemStatus) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *WorkItemStatus) GetStatusType() int32 {
	if x != nil {
		return x.StatusType
	}
	return 0
}

func (x *WorkItemStatus) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *WorkItemStatus) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorkItemStatus) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WorkItemStatus) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WorkItemStatus) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *WorkItemStatus) GetIsSys() int32 {
	if x != nil {
		return x.IsSys
	}
	return 0
}

func (x *WorkItemStatus) GetFlowScope() string {
	if x != nil {
		return x.FlowScope
	}
	return ""
}

// [db] user
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                      //用户名
	Mobile        string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`                                          //中国手机不带国家代码，国际手机号格式为：国家代码-手机号
	UserNickname  string `protobuf:"bytes,4,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`          //用户昵称
	UserPinyin    string `protobuf:"bytes,5,opt,name=user_pinyin,json=userPinyin,proto3" json:"user_pinyin,omitempty"`                //用户昵称拼音
	UserPassword  string `protobuf:"bytes,6,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`          //登录密码;cmf_password加密
	UserSalt      string `protobuf:"bytes,7,opt,name=user_salt,json=userSalt,proto3" json:"user_salt,omitempty"`                      //加密盐
	UserStatus    int32  `protobuf:"zigzag32,8,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`             //用户状态;0:禁用,1:正常,2:未验证
	UserEmail     string `protobuf:"bytes,9,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`                   //用户登录邮箱
	Sex           int32  `protobuf:"zigzag32,10,opt,name=sex,proto3" json:"sex,omitempty"`                                            //性别;0:保密,1:男,2:女
	Avatar        string `protobuf:"bytes,11,opt,name=avatar,proto3" json:"avatar,omitempty"`                                         //用户头像
	Remark        string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`                                         //备注
	Describe      string `protobuf:"bytes,13,opt,name=describe,proto3" json:"describe,omitempty"`                                     //描述信息
	LastLoginIp   string `protobuf:"bytes,14,opt,name=last_login_ip,json=lastLoginIp,proto3" json:"last_login_ip,omitempty"`          //最后登录ip
	LastLoginTime int64  `protobuf:"zigzag64,15,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"` //最后登录时间
	Role          int64  `protobuf:"zigzag64,16,opt,name=role,proto3" json:"role,omitempty"`                                          //用户角色;0:普通用户,50:管理员,100:超级管理员
	CreatedAt     int64  `protobuf:"zigzag64,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`               //更新时间
	DeletedAt     int64  `protobuf:"zigzag64,19,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`               //删除时间
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *User) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *User) GetUserPinyin() string {
	if x != nil {
		return x.UserPinyin
	}
	return ""
}

func (x *User) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *User) GetUserSalt() string {
	if x != nil {
		return x.UserSalt
	}
	return ""
}

func (x *User) GetUserStatus() int32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *User) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *User) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *User) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *User) GetLastLoginIp() string {
	if x != nil {
		return x.LastLoginIp
	}
	return ""
}

func (x *User) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *User) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *User) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *User) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *User) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 配置
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigName   string `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	ConfigKey    string `protobuf:"bytes,3,opt,name=config_key,json=configKey,proto3" json:"config_key,omitempty"`
	ConfigValue  string `protobuf:"bytes,4,opt,name=config_value,json=configValue,proto3" json:"config_value,omitempty"`
	ConfigStatus string `protobuf:"bytes,5,opt,name=config_status,json=configStatus,proto3" json:"config_status,omitempty"`
	Remark       string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedAt    int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt    int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt    int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{6}
}

func (x *Config) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Config) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *Config) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *Config) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *Config) GetConfigStatus() string {
	if x != nil {
		return x.ConfigStatus
	}
	return ""
}

func (x *Config) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Config) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Config) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Config) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 项目空间
type Space struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      int64  `protobuf:"zigzag64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //创建用户id
	SpaceGuid   string `protobuf:"bytes,3,opt,name=space_guid,json=spaceGuid,proto3" json:"space_guid,omitempty"`          //空间Guid
	SpaceName   string `protobuf:"bytes,4,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`          //空间名称
	SpaceStatus int32  `protobuf:"zigzag32,5,opt,name=space_status,json=spaceStatus,proto3" json:"space_status,omitempty"` //空间状态;0:禁用,1:正常,2:未验证
	Remark      string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`                                 //备注
	Describe    string `protobuf:"bytes,7,opt,name=describe,proto3" json:"describe,omitempty"`                             //描述信息
	Notify      int64  `protobuf:"zigzag64,8,opt,name=notify,proto3" json:"notify,omitempty"`                              //是否开启通知;0:否,1:是
	CreatedAt   int64  `protobuf:"zigzag64,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       //创建时间
	UpdatedAt   int64  `protobuf:"zigzag64,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`      //更新时间
	DeletedAt   int64  `protobuf:"zigzag64,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`      //删除时间
}

func (x *Space) Reset() {
	*x = Space{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Space) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Space) ProtoMessage() {}

func (x *Space) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Space.ProtoReflect.Descriptor instead.
func (*Space) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{7}
}

func (x *Space) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Space) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Space) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *Space) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *Space) GetSpaceStatus() int32 {
	if x != nil {
		return x.SpaceStatus
	}
	return 0
}

func (x *Space) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Space) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Space) GetNotify() int64 {
	if x != nil {
		return x.Notify
	}
	return 0
}

func (x *Space) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Space) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Space) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 项目配置
type SpaceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId                      int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                                                                    //空间id
	WorkingDay                   string `protobuf:"bytes,3,opt,name=working_day,json=workingDay,proto3" json:"working_day,omitempty"`                                                              //工作日配置
	CommentDeletable             int32  `protobuf:"zigzag32,4,opt,name=comment_deletable,json=commentDeletable,proto3" json:"comment_deletable,omitempty"`                                         // 评论是否可删除;0:否,1:是
	CommentDeletableWhenArchived int32  `protobuf:"zigzag32,5,opt,name=comment_deletable_when_archived,json=commentDeletableWhenArchived,proto3" json:"comment_deletable_when_archived,omitempty"` // 任务归档时评论是否可删除;0:否,1:是
	CommentShowPos               int32  `protobuf:"zigzag32,6,opt,name=comment_show_pos,json=commentShowPos,proto3" json:"comment_show_pos,omitempty"`                                             // 评论展示位置;0:底部,1:单独tab
	CreatedAt                    int64  `protobuf:"zigzag64,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                              //创建时间
	UpdatedAt                    int64  `protobuf:"zigzag64,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                                             //更新时间
	DeletedAt                    int64  `protobuf:"zigzag64,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                                                             //删除时间
}

func (x *SpaceConfig) Reset() {
	*x = SpaceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceConfig) ProtoMessage() {}

func (x *SpaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceConfig.ProtoReflect.Descriptor instead.
func (*SpaceConfig) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{8}
}

func (x *SpaceConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceConfig) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceConfig) GetWorkingDay() string {
	if x != nil {
		return x.WorkingDay
	}
	return ""
}

func (x *SpaceConfig) GetCommentDeletable() int32 {
	if x != nil {
		return x.CommentDeletable
	}
	return 0
}

func (x *SpaceConfig) GetCommentDeletableWhenArchived() int32 {
	if x != nil {
		return x.CommentDeletableWhenArchived
	}
	return 0
}

func (x *SpaceConfig) GetCommentShowPos() int32 {
	if x != nil {
		return x.CommentShowPos
	}
	return 0
}

func (x *SpaceConfig) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceConfig) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceConfig) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 项目空间-成员
type SpaceMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64  `protobuf:"zigzag64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                         //创建用户id
	SpaceId       int64  `protobuf:"zigzag64,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                      //空间Guid
	RoleId        int64  `protobuf:"zigzag64,4,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                         //空间名称
	Remark        string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                                          //备注
	Ranking       int64  `protobuf:"varint,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                                       //排序值
	Notify        int32  `protobuf:"varint,7,opt,name=notify,proto3" json:"notify,omitempty"`                                         //是否通知;0:否,1:是
	CreatedAt     int64  `protobuf:"zigzag64,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                //更新时间
	DeletedAt     int64  `protobuf:"zigzag64,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`               //删除时间
	HistoryRoleId int64  `protobuf:"zigzag64,11,opt,name=history_role_id,json=historyRoleId,proto3" json:"history_role_id,omitempty"` //空间名称
}

func (x *SpaceMember) Reset() {
	*x = SpaceMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMember) ProtoMessage() {}

func (x *SpaceMember) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMember.ProtoReflect.Descriptor instead.
func (*SpaceMember) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{9}
}

func (x *SpaceMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceMember) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceMember) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceMember) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SpaceMember) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SpaceMember) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceMember) GetNotify() int32 {
	if x != nil {
		return x.Notify
	}
	return 0
}

func (x *SpaceMember) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceMember) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceMember) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *SpaceMember) GetHistoryRoleId() int64 {
	if x != nil {
		return x.HistoryRoleId
	}
	return 0
}

// [db] 项目空间-工作项(工作模块)
type SpaceWorkObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId          int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                              //空间id
	UserId           int64  `protobuf:"zigzag64,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                 //创建用户id
	WorkObjectGuid   string `protobuf:"bytes,4,opt,name=work_object_guid,json=workObjectGuid,proto3" json:"work_object_guid,omitempty"`          //空间Guid
	WorkObjectName   string `protobuf:"bytes,5,opt,name=work_object_name,json=workObjectName,proto3" json:"work_object_name,omitempty"`          //空间名称
	WorkObjectStatus int32  `protobuf:"zigzag32,6,opt,name=work_object_status,json=workObjectStatus,proto3" json:"work_object_status,omitempty"` //空间状态;0:禁用,1:正常,2:未验证
	Remark           string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`                                                  //备注
	Describe         string `protobuf:"bytes,8,opt,name=describe,proto3" json:"describe,omitempty"`                                              //描述信息
	Ranking          int64  `protobuf:"varint,9,opt,name=ranking,proto3" json:"ranking,omitempty"`                                               //排序值
	CreatedAt        int64  `protobuf:"zigzag64,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                       //创建时间
	UpdatedAt        int64  `protobuf:"zigzag64,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                       //更新时间
	DeletedAt        int64  `protobuf:"zigzag64,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                       //删除时间
}

func (x *SpaceWorkObject) Reset() {
	*x = SpaceWorkObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkObject) ProtoMessage() {}

func (x *SpaceWorkObject) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkObject.ProtoReflect.Descriptor instead.
func (*SpaceWorkObject) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{10}
}

func (x *SpaceWorkObject) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkObject) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkObject) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceWorkObject) GetWorkObjectGuid() string {
	if x != nil {
		return x.WorkObjectGuid
	}
	return ""
}

func (x *SpaceWorkObject) GetWorkObjectName() string {
	if x != nil {
		return x.WorkObjectName
	}
	return ""
}

func (x *SpaceWorkObject) GetWorkObjectStatus() int32 {
	if x != nil {
		return x.WorkObjectStatus
	}
	return 0
}

func (x *SpaceWorkObject) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SpaceWorkObject) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *SpaceWorkObject) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkObject) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkObject) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkObject) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 项目空间-工作项-用例
type SpaceWorkItemV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid                 int64  `protobuf:"zigzag64,2,opt,name=pid,proto3" json:"pid,omitempty"`                                         //上级任务id, >0 表示当前为子任务
	SpaceId             int64  `protobuf:"zigzag64,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                  //空间id
	UserId              int64  `protobuf:"zigzag64,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     //创建用户id
	WorkItemType        int32  `protobuf:"zigzag32,5,opt,name=work_item_type,json=workItemType,proto3" json:"work_item_type,omitempty"` //原任务类型,已废弃
	WorkObjectId        int64  `protobuf:"zigzag64,6,opt,name=work_object_id,json=workObjectId,proto3" json:"work_object_id,omitempty"` //模块id
	WorkItemGuid        string `protobuf:"bytes,7,opt,name=work_item_guid,json=workItemGuid,proto3" json:"work_item_guid,omitempty"`    //任务Guid
	WorkItemName        string `protobuf:"bytes,8,opt,name=work_item_name,json=workItemName,proto3" json:"work_item_name,omitempty"`    //任务名称
	CreatedAt           int64  `protobuf:"zigzag64,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`           //创建时间
	UpdatedAt           int64  `protobuf:"zigzag64,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`           //更新时间
	DeletedAt           int64  `protobuf:"zigzag64,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`           //删除时间
	Doc                 string `protobuf:"bytes,13,opt,name=doc,proto3" json:"doc,omitempty"`                                           //
	IsRestart           int32  `protobuf:"varint,19,opt,name=is_restart,json=isRestart,proto3" json:"is_restart,omitempty"`             //是否为重启任务
	RestartAt           int64  `protobuf:"varint,20,opt,name=restart_at,json=restartAt,proto3" json:"restart_at,omitempty"`             //重启时间
	IconFlags           uint32 `protobuf:"varint,21,opt,name=icon_flags,json=iconFlags,proto3" json:"icon_flags,omitempty"`             //图标标记
	RestartUserId       int64  `protobuf:"varint,22,opt,name=restart_user_id,json=restartUserId,proto3" json:"restart_user_id,omitempty"`
	CommentNum          int32  `protobuf:"varint,23,opt,name=comment_num,json=commentNum,proto3" json:"comment_num,omitempty"`                                //评论数
	ResumeAt            int64  `protobuf:"varint,24,opt,name=resume_at,json=resumeAt,proto3" json:"resume_at,omitempty"`                                      //恢复时间
	VersionId           int64  `protobuf:"zigzag64,25,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`                                 //版本id -> 版本表
	WorkItemTypeId      int64  `protobuf:"zigzag64,27,opt,name=work_item_type_id,json=workItemTypeId,proto3" json:"work_item_type_id,omitempty"`              //工作项类型Id
	WorkItemTypeKey     string `protobuf:"bytes,28,opt,name=work_item_type_key,json=workItemTypeKey,proto3" json:"work_item_type_key,omitempty"`              //工作项类型key
	FlowTemplateId      int64  `protobuf:"zigzag64,26,opt,name=flow_template_id,json=flowTemplateId,proto3" json:"flow_template_id,omitempty"`                //流程模板id
	FlowTemplateVersion int64  `protobuf:"zigzag64,29,opt,name=flow_template_version,json=flowTemplateVersion,proto3" json:"flow_template_version,omitempty"` //流程模板版本
	FlowId              int64  `protobuf:"zigzag64,30,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`                                          //流程Id
	FlowKey             string `protobuf:"bytes,31,opt,name=flow_key,json=flowKey,proto3" json:"flow_key,omitempty"`                                          //流程key
	FlowMode            string `protobuf:"bytes,14,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`                                       //模式类型
	FlowModeVersion     string `protobuf:"bytes,15,opt,name=flow_mode_version,json=flowModeVersion,proto3" json:"flow_mode_version,omitempty"`                //[已废弃]模式版本
	FlowModeCode        string `protobuf:"bytes,16,opt,name=flow_mode_code,json=flowModeCode,proto3" json:"flow_mode_code,omitempty"`                         //[已废弃]模式编码
	WorkItemStatus      string `protobuf:"bytes,9,opt,name=work_item_status,json=workItemStatus,proto3" json:"work_item_status,omitempty"`                    //任务状态
	WorkItemStatusKey   string `protobuf:"bytes,32,opt,name=work_item_status_key,json=workItemStatusKey,proto3" json:"work_item_status_key,omitempty"`        //工作项状态key
	WorkItemStatusId    int64  `protobuf:"varint,33,opt,name=work_item_status_id,json=workItemStatusId,proto3" json:"work_item_status_id,omitempty"`          //工作项状态id
	LastStatusAt        int64  `protobuf:"zigzag64,17,opt,name=last_status_at,json=lastStatusAt,proto3" json:"last_status_at,omitempty"`                      //历史状态更新时间
	LastStatus          string `protobuf:"bytes,18,opt,name=last_status,json=lastStatus,proto3" json:"last_status,omitempty"`                                 //历史状态
	LastStatusKey       string `protobuf:"bytes,36,opt,name=last_status_key,json=lastStatusKey,proto3" json:"last_status_key,omitempty"`                      //最后一次状态key
	LastStatusId        int64  `protobuf:"varint,35,opt,name=last_status_id,json=lastStatusId,proto3" json:"last_status_id,omitempty"`                        //最后一次状态id
	ChildNum            int32  `protobuf:"zigzag32,37,opt,name=child_num,json=childNum,proto3" json:"child_num,omitempty"`                                    //子任务数量
	WorkItemFlowId      int64  `protobuf:"zigzag64,38,opt,name=work_item_flow_id,json=workItemFlowId,proto3" json:"work_item_flow_id,omitempty"`              //流程Id
	WorkItemFlowKey     string `protobuf:"bytes,39,opt,name=work_item_flow_key,json=workItemFlowKey,proto3" json:"work_item_flow_key,omitempty"`              //流程key
	Reason              string `protobuf:"bytes,40,opt,name=reason,proto3" json:"reason,omitempty"`
	CountAt             int64  `protobuf:"varint,41,opt,name=count_at,json=countAt,proto3" json:"count_at,omitempty"`
}

func (x *SpaceWorkItemV2) Reset() {
	*x = SpaceWorkItemV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkItemV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkItemV2) ProtoMessage() {}

func (x *SpaceWorkItemV2) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkItemV2.ProtoReflect.Descriptor instead.
func (*SpaceWorkItemV2) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{11}
}

func (x *SpaceWorkItemV2) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkItemV2) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SpaceWorkItemV2) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkItemType() int32 {
	if x != nil {
		return x.WorkItemType
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkObjectId() int64 {
	if x != nil {
		return x.WorkObjectId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkItemGuid() string {
	if x != nil {
		return x.WorkItemGuid
	}
	return ""
}

func (x *SpaceWorkItemV2) GetWorkItemName() string {
	if x != nil {
		return x.WorkItemName
	}
	return ""
}

func (x *SpaceWorkItemV2) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkItemV2) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkItemV2) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *SpaceWorkItemV2) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *SpaceWorkItemV2) GetIsRestart() int32 {
	if x != nil {
		return x.IsRestart
	}
	return 0
}

func (x *SpaceWorkItemV2) GetRestartAt() int64 {
	if x != nil {
		return x.RestartAt
	}
	return 0
}

func (x *SpaceWorkItemV2) GetIconFlags() uint32 {
	if x != nil {
		return x.IconFlags
	}
	return 0
}

func (x *SpaceWorkItemV2) GetRestartUserId() int64 {
	if x != nil {
		return x.RestartUserId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetCommentNum() int32 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *SpaceWorkItemV2) GetResumeAt() int64 {
	if x != nil {
		return x.ResumeAt
	}
	return 0
}

func (x *SpaceWorkItemV2) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkItemTypeId() int64 {
	if x != nil {
		return x.WorkItemTypeId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkItemTypeKey() string {
	if x != nil {
		return x.WorkItemTypeKey
	}
	return ""
}

func (x *SpaceWorkItemV2) GetFlowTemplateId() int64 {
	if x != nil {
		return x.FlowTemplateId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetFlowTemplateVersion() int64 {
	if x != nil {
		return x.FlowTemplateVersion
	}
	return 0
}

func (x *SpaceWorkItemV2) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetFlowKey() string {
	if x != nil {
		return x.FlowKey
	}
	return ""
}

func (x *SpaceWorkItemV2) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *SpaceWorkItemV2) GetFlowModeVersion() string {
	if x != nil {
		return x.FlowModeVersion
	}
	return ""
}

func (x *SpaceWorkItemV2) GetFlowModeCode() string {
	if x != nil {
		return x.FlowModeCode
	}
	return ""
}

func (x *SpaceWorkItemV2) GetWorkItemStatus() string {
	if x != nil {
		return x.WorkItemStatus
	}
	return ""
}

func (x *SpaceWorkItemV2) GetWorkItemStatusKey() string {
	if x != nil {
		return x.WorkItemStatusKey
	}
	return ""
}

func (x *SpaceWorkItemV2) GetWorkItemStatusId() int64 {
	if x != nil {
		return x.WorkItemStatusId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetLastStatusAt() int64 {
	if x != nil {
		return x.LastStatusAt
	}
	return 0
}

func (x *SpaceWorkItemV2) GetLastStatus() string {
	if x != nil {
		return x.LastStatus
	}
	return ""
}

func (x *SpaceWorkItemV2) GetLastStatusKey() string {
	if x != nil {
		return x.LastStatusKey
	}
	return ""
}

func (x *SpaceWorkItemV2) GetLastStatusId() int64 {
	if x != nil {
		return x.LastStatusId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetChildNum() int32 {
	if x != nil {
		return x.ChildNum
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkItemFlowId() int64 {
	if x != nil {
		return x.WorkItemFlowId
	}
	return 0
}

func (x *SpaceWorkItemV2) GetWorkItemFlowKey() string {
	if x != nil {
		return x.WorkItemFlowKey
	}
	return ""
}

func (x *SpaceWorkItemV2) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SpaceWorkItemV2) GetCountAt() int64 {
	if x != nil {
		return x.CountAt
	}
	return 0
}

// [db] 项目空间-工作项-用例
type SpaceWorkItemDocV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanStartAt    int64  `protobuf:"zigzag64,1,opt,name=plan_start_at,json=planStartAt,proto3" json:"plan_start_at,omitempty"`          //计划任务开始时间
	PlanCompleteAt int64  `protobuf:"zigzag64,2,opt,name=plan_complete_at,json=planCompleteAt,proto3" json:"plan_complete_at,omitempty"` //计划任务完成时间
	ProcessRate    int32  `protobuf:"varint,3,opt,name=process_rate,json=processRate,proto3" json:"process_rate,omitempty"`              //完成进度比例
	Remark         string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`                                            //备注
	Describe       string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`                                        //描述信息
	Priority       string `protobuf:"bytes,6,opt,name=priority,proto3" json:"priority,omitempty"`                                        //优先级
	Tags           string `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`
	Directors      string `protobuf:"bytes,8,opt,name=directors,proto3" json:"directors,omitempty"`
	Followers      string `protobuf:"bytes,9,opt,name=followers,proto3" json:"followers,omitempty"`
	Participators  string `protobuf:"bytes,10,opt,name=participators,proto3" json:"participators,omitempty"`
	NodeDirectors  string `protobuf:"bytes,11,opt,name=node_directors,json=nodeDirectors,proto3" json:"node_directors,omitempty"`
}

func (x *SpaceWorkItemDocV2) Reset() {
	*x = SpaceWorkItemDocV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkItemDocV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkItemDocV2) ProtoMessage() {}

func (x *SpaceWorkItemDocV2) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkItemDocV2.ProtoReflect.Descriptor instead.
func (*SpaceWorkItemDocV2) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{12}
}

func (x *SpaceWorkItemDocV2) GetPlanStartAt() int64 {
	if x != nil {
		return x.PlanStartAt
	}
	return 0
}

func (x *SpaceWorkItemDocV2) GetPlanCompleteAt() int64 {
	if x != nil {
		return x.PlanCompleteAt
	}
	return 0
}

func (x *SpaceWorkItemDocV2) GetProcessRate() int32 {
	if x != nil {
		return x.ProcessRate
	}
	return 0
}

func (x *SpaceWorkItemDocV2) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetDirectors() string {
	if x != nil {
		return x.Directors
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetFollowers() string {
	if x != nil {
		return x.Followers
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetParticipators() string {
	if x != nil {
		return x.Participators
	}
	return ""
}

func (x *SpaceWorkItemDocV2) GetNodeDirectors() string {
	if x != nil {
		return x.NodeDirectors
	}
	return ""
}

// [db] 项目空间-标签
type SpaceTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId   int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`       //空间id
	TagGuid   string `protobuf:"bytes,3,opt,name=tag_guid,json=tagGuid,proto3" json:"tag_guid,omitempty"`          //tag唯一标识符
	TagName   string `protobuf:"bytes,4,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`          //tag名称
	TagStatus int32  `protobuf:"varint,5,opt,name=tag_status,json=tagStatus,proto3" json:"tag_status,omitempty"`   //Tag状态;0:禁用,1:正常
	CreatedAt int64  `protobuf:"zigzag64,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"zigzag64,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt int64  `protobuf:"zigzag64,8,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
}

func (x *SpaceTag) Reset() {
	*x = SpaceTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceTag) ProtoMessage() {}

func (x *SpaceTag) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceTag.ProtoReflect.Descriptor instead.
func (*SpaceTag) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{13}
}

func (x *SpaceTag) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceTag) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceTag) GetTagGuid() string {
	if x != nil {
		return x.TagGuid
	}
	return ""
}

func (x *SpaceTag) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *SpaceTag) GetTagStatus() int32 {
	if x != nil {
		return x.TagStatus
	}
	return 0
}

func (x *SpaceTag) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceTag) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceTag) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 文件信息
type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Typ       int32  `protobuf:"zigzag32,4,opt,name=typ,proto3" json:"typ,omitempty"` // 文件類型 (1-图片，2-视频，3-音频，4-文本)
	Size      int64  `protobuf:"zigzag64,5,opt,name=size,proto3" json:"size,omitempty"`
	Uri       string `protobuf:"bytes,6,opt,name=uri,proto3" json:"uri,omitempty"` // 前端讀取檔案用, 動態產生: /path/name?sign=hmac-sha256簽名(附加過期timestamp)
	Pwd       string `protobuf:"bytes,7,opt,name=pwd,proto3" json:"pwd,omitempty"`
	Cover     string `protobuf:"bytes,17,opt,name=cover,proto3" json:"cover,omitempty"`                             //封面，仅为视频文件生成
	Status    int32  `protobuf:"zigzag32,8,opt,name=status,proto3" json:"status,omitempty"`                         // 0-未定義, 1-初始化, 2-上传中, 3-成功, 4-失败, 5-处理中（转码等）, 6-待删
	Owner     int64  `protobuf:"zigzag64,9,opt,name=owner,proto3" json:"owner,omitempty"`                           // 上傳者id
	Meta      string `protobuf:"bytes,18,opt,name=meta,proto3" json:"meta,omitempty"`                               // 元数据
	CreatedAt int64  `protobuf:"zigzag64,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"zigzag64,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt int64  `protobuf:"zigzag64,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
	// 以下欄位不應回傳到前端, 於api返回值清空
	UploadTyp    int32  `protobuf:"zigzag32,13,opt,name=upload_typ,json=uploadTyp,proto3" json:"upload_typ,omitempty"`       // 上傳服務器類型 (0-local 1-fastdfs，2-s3)
	UploadDomain string `protobuf:"bytes,14,opt,name=upload_domain,json=uploadDomain,proto3" json:"upload_domain,omitempty"` // 上傳服務器
	UploadMd5    string `protobuf:"bytes,15,opt,name=upload_md5,json=uploadMd5,proto3" json:"upload_md5,omitempty"`          // 上傳完成md5
	UploadPath   string `protobuf:"bytes,16,opt,name=upload_path,json=uploadPath,proto3" json:"upload_path,omitempty"`       // 上傳完成檔案路徑
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{14}
}

func (x *FileInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetTyp() int32 {
	if x != nil {
		return x.Typ
	}
	return 0
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *FileInfo) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *FileInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FileInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FileInfo) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *FileInfo) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *FileInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FileInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FileInfo) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *FileInfo) GetUploadTyp() int32 {
	if x != nil {
		return x.UploadTyp
	}
	return 0
}

func (x *FileInfo) GetUploadDomain() string {
	if x != nil {
		return x.UploadDomain
	}
	return ""
}

func (x *FileInfo) GetUploadMd5() string {
	if x != nil {
		return x.UploadMd5
	}
	return ""
}

func (x *FileInfo) GetUploadPath() string {
	if x != nil {
		return x.UploadPath
	}
	return ""
}

// [db] 项目空间-文件关联
type SpaceFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId    int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`            //空间id
	FileInfoId int64  `protobuf:"zigzag64,3,opt,name=file_info_id,json=fileInfoId,proto3" json:"file_info_id,omitempty"` //标签id
	FileName   string `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`            //标签id
	FileUri    string `protobuf:"bytes,5,opt,name=file_uri,json=fileUri,proto3" json:"file_uri,omitempty"`               //标签id
	FileSize   int64  `protobuf:"zigzag64,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`         //文件大小
	Status     int32  `protobuf:"zigzag32,8,opt,name=status,proto3" json:"status,omitempty"`                             //状态 0-未定义 1-使用中 2-已删除
	SourceId   int64  `protobuf:"zigzag64,9,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`         //关联id
	SourceType int32  `protobuf:"varint,10,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    //关联类型 1:任务
	CreatedAt  int64  `protobuf:"zigzag64,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`     //创建时间
	UpdatedAt  int64  `protobuf:"zigzag64,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`     //更新时间
	DeletedAt  int64  `protobuf:"zigzag64,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`     //删除时间
}

func (x *SpaceFileInfo) Reset() {
	*x = SpaceFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceFileInfo) ProtoMessage() {}

func (x *SpaceFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceFileInfo.ProtoReflect.Descriptor instead.
func (*SpaceFileInfo) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{15}
}

func (x *SpaceFileInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceFileInfo) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceFileInfo) GetFileInfoId() int64 {
	if x != nil {
		return x.FileInfoId
	}
	return 0
}

func (x *SpaceFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *SpaceFileInfo) GetFileUri() string {
	if x != nil {
		return x.FileUri
	}
	return ""
}

func (x *SpaceFileInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *SpaceFileInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SpaceFileInfo) GetSourceId() int64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *SpaceFileInfo) GetSourceType() int32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *SpaceFileInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceFileInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceFileInfo) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 用户登录日志
type UserLoginLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	LoginUserId       int64  `protobuf:"zigzag64,2,opt,name=login_user_id,json=loginUserId,proto3" json:"login_user_id,omitempty"`                //登录用户id
	LoginUserName     string `protobuf:"bytes,3,opt,name=login_user_name,json=loginUserName,proto3" json:"login_user_name,omitempty"`             //登录用户名
	LoginUserNickname string `protobuf:"bytes,4,opt,name=login_user_nickname,json=loginUserNickname,proto3" json:"login_user_nickname,omitempty"` //登录用户昵称
	Ipaddr            string `protobuf:"bytes,5,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`                                                  //ip
	LoginLocation     string `protobuf:"bytes,6,opt,name=login_location,json=loginLocation,proto3" json:"login_location,omitempty"`               //ip地区
	Browser           string `protobuf:"bytes,7,opt,name=browser,proto3" json:"browser,omitempty"`                                                //浏览器
	Os                string `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`                                                          //设备系统
	Status            int32  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                                 //状态 0:成功  1:失败
	Msg               string `protobuf:"bytes,10,opt,name=msg,proto3" json:"msg,omitempty"`                                                       //描述
	LoginAt           int64  `protobuf:"zigzag64,11,opt,name=login_at,json=loginAt,proto3" json:"login_at,omitempty"`                             //登录时间
	CreatedAt         int64  `protobuf:"zigzag64,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                       //创建时间
	UpdatedAt         int64  `protobuf:"zigzag64,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                       //更新时间
	DeletedAt         int64  `protobuf:"zigzag64,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                       //删除时间
}

func (x *UserLoginLog) Reset() {
	*x = UserLoginLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginLog) ProtoMessage() {}

func (x *UserLoginLog) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginLog.ProtoReflect.Descriptor instead.
func (*UserLoginLog) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{16}
}

func (x *UserLoginLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLoginLog) GetLoginUserId() int64 {
	if x != nil {
		return x.LoginUserId
	}
	return 0
}

func (x *UserLoginLog) GetLoginUserName() string {
	if x != nil {
		return x.LoginUserName
	}
	return ""
}

func (x *UserLoginLog) GetLoginUserNickname() string {
	if x != nil {
		return x.LoginUserNickname
	}
	return ""
}

func (x *UserLoginLog) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *UserLoginLog) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *UserLoginLog) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *UserLoginLog) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *UserLoginLog) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserLoginLog) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserLoginLog) GetLoginAt() int64 {
	if x != nil {
		return x.LoginAt
	}
	return 0
}

func (x *UserLoginLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserLoginLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UserLoginLog) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 用户操作日志
type OperLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                      //模块标题
	BusinessType  int32  `protobuf:"varint,3,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`   //业务类型（0其它 1新增 2修改 3删除）
	Method        string `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`                                    //方法名称
	RequestMethod string `protobuf:"bytes,5,opt,name=request_method,json=requestMethod,proto3" json:"request_method,omitempty"` //请求方式
	ModuleType    int32  `protobuf:"varint,6,opt,name=module_type,json=moduleType,proto3" json:"module_type,omitempty"`
	ModuleId      int64  `protobuf:"zigzag64,7,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	OperatorType  int32  `protobuf:"varint,8,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"` //操作类别（0其它 1后台用户 2手机端用户）
	OperId        int64  `protobuf:"zigzag64,9,opt,name=oper_id,json=operId,proto3" json:"oper_id,omitempty"`                 //操作人id
	OperName      string `protobuf:"bytes,10,opt,name=oper_name,json=operName,proto3" json:"oper_name,omitempty"`             //操作人员
	OperNickname  string `protobuf:"bytes,11,opt,name=oper_nickname,json=operNickname,proto3" json:"oper_nickname,omitempty"` //操作人员昵称
	OperUrl       string `protobuf:"bytes,12,opt,name=oper_url,json=operUrl,proto3" json:"oper_url,omitempty"`                //请求URL
	OperIp        string `protobuf:"bytes,13,opt,name=oper_ip,json=operIp,proto3" json:"oper_ip,omitempty"`                   //主机地址
	OperLocation  string `protobuf:"bytes,14,opt,name=oper_location,json=operLocation,proto3" json:"oper_location,omitempty"` //操作地点
	OperParam     string `protobuf:"bytes,15,opt,name=oper_param,json=operParam,proto3" json:"oper_param,omitempty"`          //请求参数
	OperMsg       string `protobuf:"bytes,16,opt,name=oper_msg,json=operMsg,proto3" json:"oper_msg,omitempty"`                //错误消息
	OperTimeAt    int64  `protobuf:"zigzag64,17,opt,name=oper_time_at,json=operTimeAt,proto3" json:"oper_time_at,omitempty"`  //操作时间
	CreatedAt     int64  `protobuf:"zigzag64,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`       //更新时间
	DeletedAt     int64  `protobuf:"zigzag64,20,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`       //删除时间
	SpaceId       int64  `protobuf:"zigzag64,21,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`             // 空间id
	ShowType      int32  `protobuf:"varint,22,opt,name=show_type,json=showType,proto3" json:"show_type,omitempty"`            // 显示类型
	SpaceName     string `protobuf:"bytes,23,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`          // 空间名称
	ModuleFlag    int64  `protobuf:"zigzag64,24,opt,name=module_flag,json=moduleFlag,proto3" json:"module_flag,omitempty"`    // 模块位标记
}

func (x *OperLog) Reset() {
	*x = OperLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperLog) ProtoMessage() {}

func (x *OperLog) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperLog.ProtoReflect.Descriptor instead.
func (*OperLog) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{17}
}

func (x *OperLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OperLog) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OperLog) GetBusinessType() int32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *OperLog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *OperLog) GetRequestMethod() string {
	if x != nil {
		return x.RequestMethod
	}
	return ""
}

func (x *OperLog) GetModuleType() int32 {
	if x != nil {
		return x.ModuleType
	}
	return 0
}

func (x *OperLog) GetModuleId() int64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *OperLog) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *OperLog) GetOperId() int64 {
	if x != nil {
		return x.OperId
	}
	return 0
}

func (x *OperLog) GetOperName() string {
	if x != nil {
		return x.OperName
	}
	return ""
}

func (x *OperLog) GetOperNickname() string {
	if x != nil {
		return x.OperNickname
	}
	return ""
}

func (x *OperLog) GetOperUrl() string {
	if x != nil {
		return x.OperUrl
	}
	return ""
}

func (x *OperLog) GetOperIp() string {
	if x != nil {
		return x.OperIp
	}
	return ""
}

func (x *OperLog) GetOperLocation() string {
	if x != nil {
		return x.OperLocation
	}
	return ""
}

func (x *OperLog) GetOperParam() string {
	if x != nil {
		return x.OperParam
	}
	return ""
}

func (x *OperLog) GetOperMsg() string {
	if x != nil {
		return x.OperMsg
	}
	return ""
}

func (x *OperLog) GetOperTimeAt() int64 {
	if x != nil {
		return x.OperTimeAt
	}
	return 0
}

func (x *OperLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OperLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *OperLog) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *OperLog) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *OperLog) GetShowType() int32 {
	if x != nil {
		return x.ShowType
	}
	return 0
}

func (x *OperLog) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *OperLog) GetModuleFlag() int64 {
	if x != nil {
		return x.ModuleFlag
	}
	return 0
}

// [db] 工作节点V2
type SpaceWorkItemFlowV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkItemId          int64  `protobuf:"zigzag64,2,opt,name=work_item_id,json=workItemId,proto3" json:"work_item_id,omitempty"` //任务id
	WorkItemRoleId      int64  `protobuf:"zigzag64,25,opt,name=work_item_role_id,json=workItemRoleId,proto3" json:"work_item_role_id,omitempty"`
	WorkItemRoleKey     string `protobuf:"bytes,26,opt,name=work_item_role_key,json=workItemRoleKey,proto3" json:"work_item_role_key,omitempty"`
	FlowNodeUuid        string `protobuf:"bytes,3,opt,name=flow_node_uuid,json=flowNodeUuid,proto3" json:"flow_node_uuid,omitempty"`                        //节点uuid
	FlowNodeStatus      int32  `protobuf:"zigzag32,4,opt,name=flow_node_status,json=flowNodeStatus,proto3" json:"flow_node_status,omitempty"`               //节点状态; 0:未定义 , 1: 未开启 2: 进行中 3:已完成
	FlowNodeCode        string `protobuf:"bytes,5,opt,name=flow_node_code,json=flowNodeCode,proto3" json:"flow_node_code,omitempty"`                        //节点编码
	FlowNodePassed      int32  `protobuf:"zigzag32,6,opt,name=flow_node_passed,json=flowNodePassed,proto3" json:"flow_node_passed,omitempty"`               //节点是否通过
	FlowNodeReached     int32  `protobuf:"zigzag32,7,opt,name=flow_node_reached,json=flowNodeReached,proto3" json:"flow_node_reached,omitempty"`            //节点是否到达
	FlowModeVersion     string `protobuf:"bytes,9,opt,name=flow_mode_version,json=flowModeVersion,proto3" json:"flow_mode_version,omitempty"`               //[已废弃]模式版本
	FlowModeCode        string `protobuf:"bytes,10,opt,name=flow_mode_code,json=flowModeCode,proto3" json:"flow_mode_code,omitempty"`                       //[已废弃]模式编码
	StartAt             int64  `protobuf:"zigzag64,11,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                                     //开始时间
	FinishAt            int64  `protobuf:"zigzag64,12,opt,name=finish_at,json=finishAt,proto3" json:"finish_at,omitempty"`                                  //结束时间
	Directors           string `protobuf:"bytes,13,opt,name=directors,proto3" json:"directors,omitempty"`                                                   //节点负责人
	CreatedAt           int64  `protobuf:"zigzag64,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                               //创建时间
	UpdatedAt           int64  `protobuf:"zigzag64,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                               //更新时间
	DeletedAt           int64  `protobuf:"zigzag64,16,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                               //删除时间
	SpaceId             int64  `protobuf:"zigzag64,17,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                                     //空间id
	PlanStartAt         int64  `protobuf:"zigzag64,18,opt,name=plan_start_at,json=planStartAt,proto3" json:"plan_start_at,omitempty"`                       //计 划开始时间
	PlanCompleteAt      int64  `protobuf:"zigzag64,19,opt,name=plan_complete_at,json=planCompleteAt,proto3" json:"plan_complete_at,omitempty"`              //计划结束时间
	FlowId              int64  `protobuf:"zigzag64,20,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`                                        //流程Id
	FlowKey             string `protobuf:"bytes,21,opt,name=flow_key,json=flowKey,proto3" json:"flow_key,omitempty"`                                        //流程key
	FlowMode            string `protobuf:"bytes,22,opt,name=flow_mode,json=flowMode,proto3" json:"flow_mode,omitempty"`                                     //模式类型
	FlowTemplateId      int64  `protobuf:"varint,23,opt,name=flow_template_id,json=flowTemplateId,proto3" json:"flow_template_id,omitempty"`                //模式版本
	FlowTemplateVersion int64  `protobuf:"varint,24,opt,name=flow_template_version,json=flowTemplateVersion,proto3" json:"flow_template_version,omitempty"` //模式编码
}

func (x *SpaceWorkItemFlowV2) Reset() {
	*x = SpaceWorkItemFlowV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkItemFlowV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkItemFlowV2) ProtoMessage() {}

func (x *SpaceWorkItemFlowV2) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkItemFlowV2.ProtoReflect.Descriptor instead.
func (*SpaceWorkItemFlowV2) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{18}
}

func (x *SpaceWorkItemFlowV2) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetWorkItemId() int64 {
	if x != nil {
		return x.WorkItemId
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetWorkItemRoleId() int64 {
	if x != nil {
		return x.WorkItemRoleId
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetWorkItemRoleKey() string {
	if x != nil {
		return x.WorkItemRoleKey
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetFlowNodeUuid() string {
	if x != nil {
		return x.FlowNodeUuid
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetFlowNodeStatus() int32 {
	if x != nil {
		return x.FlowNodeStatus
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFlowNodeCode() string {
	if x != nil {
		return x.FlowNodeCode
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetFlowNodePassed() int32 {
	if x != nil {
		return x.FlowNodePassed
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFlowNodeReached() int32 {
	if x != nil {
		return x.FlowNodeReached
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFlowModeVersion() string {
	if x != nil {
		return x.FlowModeVersion
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetFlowModeCode() string {
	if x != nil {
		return x.FlowModeCode
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFinishAt() int64 {
	if x != nil {
		return x.FinishAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetDirectors() string {
	if x != nil {
		return x.Directors
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetPlanStartAt() int64 {
	if x != nil {
		return x.PlanStartAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetPlanCompleteAt() int64 {
	if x != nil {
		return x.PlanCompleteAt
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFlowKey() string {
	if x != nil {
		return x.FlowKey
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetFlowMode() string {
	if x != nil {
		return x.FlowMode
	}
	return ""
}

func (x *SpaceWorkItemFlowV2) GetFlowTemplateId() int64 {
	if x != nil {
		return x.FlowTemplateId
	}
	return 0
}

func (x *SpaceWorkItemFlowV2) GetFlowTemplateVersion() int64 {
	if x != nil {
		return x.FlowTemplateVersion
	}
	return 0
}

// [db] 工作节点角色负责人
type SpaceWorkItemFlowRoleV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId         int64  `protobuf:"zigzag64,17,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                      //空间id
	WorkItemId      int64  `protobuf:"zigzag64,2,opt,name=work_item_id,json=workItemId,proto3" json:"work_item_id,omitempty"`            //任务id
	FlowId          int64  `protobuf:"zigzag64,20,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`                         //流程Id
	FlowTemplateId  int64  `protobuf:"varint,23,opt,name=flow_template_id,json=flowTemplateId,proto3" json:"flow_template_id,omitempty"` //模式版本
	WorkItemRoleId  int64  `protobuf:"zigzag64,25,opt,name=work_item_role_id,json=workItemRoleId,proto3" json:"work_item_role_id,omitempty"`
	WorkItemRoleKey string `protobuf:"bytes,26,opt,name=work_item_role_key,json=workItemRoleKey,proto3" json:"work_item_role_key,omitempty"`
	Directors       string `protobuf:"bytes,13,opt,name=directors,proto3" json:"directors,omitempty"`                     //节点负责人
	CreatedAt       int64  `protobuf:"zigzag64,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt       int64  `protobuf:"zigzag64,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt       int64  `protobuf:"zigzag64,16,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
}

func (x *SpaceWorkItemFlowRoleV2) Reset() {
	*x = SpaceWorkItemFlowRoleV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkItemFlowRoleV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkItemFlowRoleV2) ProtoMessage() {}

func (x *SpaceWorkItemFlowRoleV2) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkItemFlowRoleV2.ProtoReflect.Descriptor instead.
func (*SpaceWorkItemFlowRoleV2) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{19}
}

func (x *SpaceWorkItemFlowRoleV2) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetWorkItemId() int64 {
	if x != nil {
		return x.WorkItemId
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetFlowId() int64 {
	if x != nil {
		return x.FlowId
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetFlowTemplateId() int64 {
	if x != nil {
		return x.FlowTemplateId
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetWorkItemRoleId() int64 {
	if x != nil {
		return x.WorkItemRoleId
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetWorkItemRoleKey() string {
	if x != nil {
		return x.WorkItemRoleKey
	}
	return ""
}

func (x *SpaceWorkItemFlowRoleV2) GetDirectors() string {
	if x != nil {
		return x.Directors
	}
	return ""
}

func (x *SpaceWorkItemFlowRoleV2) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkItemFlowRoleV2) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 项目空间-工作项-评论
type SpaceWorkItemComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         int64  `protobuf:"zigzag64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                           //创建用户id
	WorkItemId     int64  `protobuf:"zigzag64,3,opt,name=work_item_id,json=workItemId,proto3" json:"work_item_id,omitempty"`             //工作项id
	Content        string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                          //评论内容
	ReferUserIds   string `protobuf:"bytes,5,opt,name=refer_user_ids,json=referUserIds,proto3" json:"refer_user_ids,omitempty"`          //@的用户id列表
	ReplyCommentId int64  `protobuf:"zigzag64,6,opt,name=reply_comment_id,json=replyCommentId,proto3" json:"reply_comment_id,omitempty"` // 回复评论id
	Emojis         string `protobuf:"bytes,7,opt,name=emojis,proto3" json:"emojis,omitempty"`                                            // 表情
	CreatedAt      int64  `protobuf:"zigzag64,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                  //创建时间
	UpdatedAt      int64  `protobuf:"zigzag64,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                  //更新时间
	DeletedAt      int64  `protobuf:"zigzag64,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`                 //删除时间
}

func (x *SpaceWorkItemComment) Reset() {
	*x = SpaceWorkItemComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkItemComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkItemComment) ProtoMessage() {}

func (x *SpaceWorkItemComment) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkItemComment.ProtoReflect.Descriptor instead.
func (*SpaceWorkItemComment) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{20}
}

func (x *SpaceWorkItemComment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkItemComment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceWorkItemComment) GetWorkItemId() int64 {
	if x != nil {
		return x.WorkItemId
	}
	return 0
}

func (x *SpaceWorkItemComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SpaceWorkItemComment) GetReferUserIds() string {
	if x != nil {
		return x.ReferUserIds
	}
	return ""
}

func (x *SpaceWorkItemComment) GetReplyCommentId() int64 {
	if x != nil {
		return x.ReplyCommentId
	}
	return 0
}

func (x *SpaceWorkItemComment) GetEmojis() string {
	if x != nil {
		return x.Emojis
	}
	return ""
}

func (x *SpaceWorkItemComment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkItemComment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkItemComment) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 第三方平台用户关联表
type ThirdPfAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64  `protobuf:"zigzag64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     //创建用户id
	PfName        string `protobuf:"bytes,3,opt,name=pf_name,json=pfName,proto3" json:"pf_name,omitempty"`                        //平台名称
	PfCode        int32  `protobuf:"varint,4,opt,name=pf_code,json=pfCode,proto3" json:"pf_code,omitempty"`                       //平台枚举 1IM
	PfUserKey     string `protobuf:"bytes,5,opt,name=pf_user_key,json=pfUserKey,proto3" json:"pf_user_key,omitempty"`             //平台用户唯一标识符
	PfUserName    string `protobuf:"bytes,6,opt,name=pf_user_name,json=pfUserName,proto3" json:"pf_user_name,omitempty"`          //平台用户名
	PfUserId      int64  `protobuf:"zigzag64,7,opt,name=pf_user_id,json=pfUserId,proto3" json:"pf_user_id,omitempty"`             //平台用户id
	PfUserAccount string `protobuf:"bytes,8,opt,name=pf_user_account,json=pfUserAccount,proto3" json:"pf_user_account,omitempty"` //平台用户账号
	Notify        int32  `protobuf:"varint,9,opt,name=notify,proto3" json:"notify,omitempty"`                                     //通知开关
	CreatedAt     int64  `protobuf:"zigzag64,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`           //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`           //更新时间
	DeletedAt     int64  `protobuf:"zigzag64,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`           //删除时间
}

func (x *ThirdPfAccount) Reset() {
	*x = ThirdPfAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdPfAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPfAccount) ProtoMessage() {}

func (x *ThirdPfAccount) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPfAccount.ProtoReflect.Descriptor instead.
func (*ThirdPfAccount) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{21}
}

func (x *ThirdPfAccount) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThirdPfAccount) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ThirdPfAccount) GetPfName() string {
	if x != nil {
		return x.PfName
	}
	return ""
}

func (x *ThirdPfAccount) GetPfCode() int32 {
	if x != nil {
		return x.PfCode
	}
	return 0
}

func (x *ThirdPfAccount) GetPfUserKey() string {
	if x != nil {
		return x.PfUserKey
	}
	return ""
}

func (x *ThirdPfAccount) GetPfUserName() string {
	if x != nil {
		return x.PfUserName
	}
	return ""
}

func (x *ThirdPfAccount) GetPfUserId() int64 {
	if x != nil {
		return x.PfUserId
	}
	return 0
}

func (x *ThirdPfAccount) GetPfUserAccount() string {
	if x != nil {
		return x.PfUserAccount
	}
	return ""
}

func (x *ThirdPfAccount) GetNotify() int32 {
	if x != nil {
		return x.Notify
	}
	return 0
}

func (x *ThirdPfAccount) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ThirdPfAccount) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ThirdPfAccount) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 通知快照
type Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId   int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`       //空间id
	UserId    int64  `protobuf:"zigzag64,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          //创建用户id
	Typ       int64  `protobuf:"varint,4,opt,name=typ,proto3" json:"typ,omitempty"`                                //类型枚举
	Doc       string `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc,omitempty"`                                 //快照内容
	CreatedAt int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
}

func (x *Notify) Reset() {
	*x = Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notify) ProtoMessage() {}

func (x *Notify) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notify.ProtoReflect.Descriptor instead.
func (*Notify) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{22}
}

func (x *Notify) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notify) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *Notify) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Notify) GetTyp() int64 {
	if x != nil {
		return x.Typ
	}
	return 0
}

func (x *Notify) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *Notify) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Notify) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Notify) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 任务版本
type SpaceWorkVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId       int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`                 //空间id
	VersionKey    string `protobuf:"bytes,10,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`          //版本KEY
	VersionName   string `protobuf:"bytes,3,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`        //版本名称
	VersionStatus int64  `protobuf:"varint,4,opt,name=version_status,json=versionStatus,proto3" json:"version_status,omitempty"` //版本状态
	Remark        string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`                                     //备注
	Ranking       int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                                //排序
	CreatedAt     int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`           //创建时间
	UpdatedAt     int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`           //更新时间
	DeletedAt     int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`           //删除时间
}

func (x *SpaceWorkVersion) Reset() {
	*x = SpaceWorkVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceWorkVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceWorkVersion) ProtoMessage() {}

func (x *SpaceWorkVersion) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceWorkVersion.ProtoReflect.Descriptor instead.
func (*SpaceWorkVersion) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{23}
}

func (x *SpaceWorkVersion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceWorkVersion) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceWorkVersion) GetVersionKey() string {
	if x != nil {
		return x.VersionKey
	}
	return ""
}

func (x *SpaceWorkVersion) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *SpaceWorkVersion) GetVersionStatus() int64 {
	if x != nil {
		return x.VersionStatus
	}
	return 0
}

func (x *SpaceWorkVersion) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SpaceWorkVersion) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceWorkVersion) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceWorkVersion) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceWorkVersion) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 成员分类
type MemberCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId   int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`       //空间id
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               //名称
	Ranking   int64  `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                      //排序
	CreatedAt int64  `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt int64  `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
	DeletedAt int64  `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` //删除时间
}

func (x *MemberCategory) Reset() {
	*x = MemberCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberCategory) ProtoMessage() {}

func (x *MemberCategory) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberCategory.ProtoReflect.Descriptor instead.
func (*MemberCategory) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{24}
}

func (x *MemberCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberCategory) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *MemberCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberCategory) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *MemberCategory) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MemberCategory) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MemberCategory) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 空间成员分类
type SpaceMemberCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId int64 `protobuf:"zigzag64,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` //分类id
	SpaceId    int64 `protobuf:"zigzag64,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`          //空间id
	UserId     int64 `protobuf:"zigzag64,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             //用户id
	Ranking    int64 `protobuf:"zigzag64,6,opt,name=ranking,proto3" json:"ranking,omitempty"`                         //排序
	CreatedAt  int64 `protobuf:"zigzag64,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    //创建时间
	UpdatedAt  int64 `protobuf:"zigzag64,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`    //更新时间
	DeletedAt  int64 `protobuf:"zigzag64,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`    //删除时间
}

func (x *SpaceMemberCategory) Reset() {
	*x = SpaceMemberCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceMemberCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMemberCategory) ProtoMessage() {}

func (x *SpaceMemberCategory) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMemberCategory.ProtoReflect.Descriptor instead.
func (*SpaceMemberCategory) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{25}
}

func (x *SpaceMemberCategory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceMemberCategory) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SpaceMemberCategory) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceMemberCategory) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceMemberCategory) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceMemberCategory) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceMemberCategory) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpaceMemberCategory) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

// [db] 空间视图
type SpaceGlobalView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId     int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"` //空间id
	Key         string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`                           //用户id
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type        int64  `protobuf:"zigzag64,5,opt,name=type,proto3" json:"type,omitempty"` // 1系统 2公告 3个人
	QueryConfig string `protobuf:"bytes,6,opt,name=query_config,json=queryConfig,proto3" json:"query_config,omitempty"`
	TableConfig string `protobuf:"bytes,7,opt,name=table_config,json=tableConfig,proto3" json:"table_config,omitempty"`
	CreatedAt   int64  `protobuf:"zigzag64,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt   int64  `protobuf:"zigzag64,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
}

func (x *SpaceGlobalView) Reset() {
	*x = SpaceGlobalView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceGlobalView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceGlobalView) ProtoMessage() {}

func (x *SpaceGlobalView) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceGlobalView.ProtoReflect.Descriptor instead.
func (*SpaceGlobalView) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{26}
}

func (x *SpaceGlobalView) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceGlobalView) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceGlobalView) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SpaceGlobalView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceGlobalView) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SpaceGlobalView) GetQueryConfig() string {
	if x != nil {
		return x.QueryConfig
	}
	return ""
}

func (x *SpaceGlobalView) GetTableConfig() string {
	if x != nil {
		return x.TableConfig
	}
	return ""
}

func (x *SpaceGlobalView) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceGlobalView) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// [db] 用户视图
type SpaceUserView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId     int64  `protobuf:"zigzag64,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	UserId      int64  `protobuf:"zigzag64,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Key         string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Type        int64  `protobuf:"zigzag64,6,opt,name=type,proto3" json:"type,omitempty"` // 1系统 2公告 3个人
	OuterId     int64  `protobuf:"zigzag64,7,opt,name=outer_id,json=outerId,proto3" json:"outer_id,omitempty"`
	QueryConfig string `protobuf:"bytes,8,opt,name=query_config,json=queryConfig,proto3" json:"query_config,omitempty"`
	TableConfig string `protobuf:"bytes,9,opt,name=table_config,json=tableConfig,proto3" json:"table_config,omitempty"`
	Ranking     int64  `protobuf:"zigzag64,10,opt,name=ranking,proto3" json:"ranking,omitempty"`
	Status      int64  `protobuf:"zigzag64,11,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   int64  `protobuf:"zigzag64,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` //创建时间
	UpdatedAt   int64  `protobuf:"zigzag64,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` //更新时间
}

func (x *SpaceUserView) Reset() {
	*x = SpaceUserView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceUserView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceUserView) ProtoMessage() {}

func (x *SpaceUserView) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceUserView.ProtoReflect.Descriptor instead.
func (*SpaceUserView) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{27}
}

func (x *SpaceUserView) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceUserView) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceUserView) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceUserView) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SpaceUserView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceUserView) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SpaceUserView) GetOuterId() int64 {
	if x != nil {
		return x.OuterId
	}
	return 0
}

func (x *SpaceUserView) GetQueryConfig() string {
	if x != nil {
		return x.QueryConfig
	}
	return ""
}

func (x *SpaceUserView) GetTableConfig() string {
	if x != nil {
		return x.TableConfig
	}
	return ""
}

func (x *SpaceUserView) GetRanking() int64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *SpaceUserView) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SpaceUserView) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpaceUserView) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// [db] 用户配置
type UserConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"zigzag64,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int64  `protobuf:"zigzag64,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Key       string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value     string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	CreatedAt int64  `protobuf:"zigzag64,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"zigzag64,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bean_types_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bean_types_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_bean_types_proto_rawDescGZIP(), []int{28}
}

func (x *UserConfig) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserConfig) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserConfig) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserConfig) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserConfig) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_bean_types_proto protoreflect.FileDescriptor

var file_bean_types_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x65, 0x61, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x62, 0x65, 0x61, 0x6e, 0x22, 0xfc, 0x02, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x05, 0x69, 0x73, 0x53, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x5f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6c, 0x6f,
	0x77, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0xba, 0x03, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x46,
	0x6c, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x69, 0x73,
	0x53, 0x79, 0x73, 0x22, 0xfd, 0x02, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xcf, 0x02, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05,
	0x69, 0x73, 0x53, 0x79, 0x73, 0x22, 0xb1, 0x03, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x05, 0x69, 0x73, 0x53, 0x79, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0xae, 0x04, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x61, 0x6c, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x53, 0x61, 0x6c, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x73, 0x65,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49,
	0x70, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xba, 0x02, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xd4, 0x02, 0x0a, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x68,
	0x65, 0x6e, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb9, 0x02, 0x0a, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf0, 0x0a, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x66, 0x6c,
	0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x12, 0x52, 0x13, 0x66, 0x6c, 0x6f,
	0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x6f,
	0x77, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c,
	0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a,
	0x14, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x2d,
	0x0a, 0x13, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x12,
	0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x69, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x6c, 0x6f, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x22, 0xf2, 0x02, 0x0a, 0x12, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x6f, 0x63, 0x56,
	0x32, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22,
	0xe7, 0x01, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc5, 0x03, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x74, 0x79, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x12, 0x23, 0x0a, 0x0d,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6d, 0x64, 0x35, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x64, 0x35,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x22, 0xe4, 0x02, 0x0a, 0x0d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x03, 0x0a, 0x0c, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xdb, 0x05, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6f, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x70, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x22, 0x88,
	0x07, 0x0a, 0x13, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x6c, 0x6f, 0x77, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f,
	0x64, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0f, 0x66, 0x6c, 0x6f,
	0x77, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x08, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x4b, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x02, 0x0a, 0x17, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x6c, 0x6f, 0x77, 0x52,
	0x6f, 0x6c, 0x65, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc0, 0x02, 0x0a, 0x14, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe8, 0x02, 0x0a, 0x0e,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x66, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x66, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x66, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x66, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x66, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x66, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x66, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x66, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x70,
	0x66, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x08, 0x70, 0x66, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x66, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x66, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x79, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x10, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xc6, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfa, 0x01,
	0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xde, 0x02, 0x0a, 0x0d, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x72, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0xa9, 0x05, 0x0a, 0x05, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0xe8, 0x07, 0x12, 0x0b, 0x0a, 0x06, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0xe9, 0x07, 0x12, 0x0b, 0x0a, 0x06, 0x41, 0x53, 0x53, 0x45,
	0x54, 0x53, 0x10, 0xf4, 0x07, 0x12, 0x0e, 0x0a, 0x09, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0xf5, 0x07, 0x12, 0x0a, 0x0a, 0x05, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0xf6,
	0x07, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x10, 0xf7, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0xf8, 0x07, 0x12, 0x0e, 0x0a, 0x09,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x10, 0xfb, 0x07, 0x12, 0x14, 0x0a, 0x0f,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10,
	0xff, 0x07, 0x12, 0x13, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e,
	0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x80, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x4f, 0x50, 0x45, 0x52, 0x5f,
	0x4c, 0x4f, 0x47, 0x10, 0x81, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x56, 0x5f, 0x32, 0x10, 0x82, 0x08,
	0x12, 0x1d, 0x0a, 0x18, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x56, 0x5f, 0x32, 0x10, 0x84, 0x08, 0x12,
	0x1c, 0x0a, 0x17, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x54,
	0x45, 0x4d, 0x5f, 0x44, 0x4f, 0x43, 0x5f, 0x56, 0x5f, 0x32, 0x10, 0x85, 0x08, 0x12, 0x1c, 0x0a,
	0x17, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x86, 0x08, 0x12, 0x15, 0x0a, 0x10, 0x54,
	0x48, 0x49, 0x52, 0x44, 0x5f, 0x50, 0x46, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x87, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52,
	0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x88, 0x08, 0x12, 0x0b, 0x0a, 0x06,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x89, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x50, 0x41,
	0x43, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10,
	0x8a, 0x08, 0x12, 0x14, 0x0a, 0x0f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x10, 0x8b, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x50, 0x41, 0x43,
	0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x10, 0x8c, 0x08, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x10, 0x8d, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x57, 0x4f, 0x52, 0x4b, 0x5f,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x8e, 0x08, 0x12, 0x15, 0x0a, 0x10,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x8f, 0x08, 0x12, 0x0e, 0x0a, 0x09, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x4c, 0x4f, 0x57,
	0x10, 0x90, 0x08, 0x12, 0x17, 0x0a, 0x12, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x46, 0x4c, 0x4f, 0x57,
	0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x91, 0x08, 0x12, 0x13, 0x0a, 0x0e,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x92,
	0x08, 0x12, 0x22, 0x0a, 0x1d, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x56,
	0x5f, 0x32, 0x10, 0x93, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x47,
	0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x10, 0x94, 0x08, 0x12, 0x14, 0x0a,
	0x0f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x45, 0x57,
	0x10, 0x95, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x10, 0x96, 0x08, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x6f, 0x2d, 0x63, 0x73, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x62, 0x65, 0x61, 0x6e, 0x3b, 0x62, 0x65, 0x61,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bean_types_proto_rawDescOnce sync.Once
	file_bean_types_proto_rawDescData = file_bean_types_proto_rawDesc
)

func file_bean_types_proto_rawDescGZIP() []byte {
	file_bean_types_proto_rawDescOnce.Do(func() {
		file_bean_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_bean_types_proto_rawDescData)
	})
	return file_bean_types_proto_rawDescData
}

var file_bean_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bean_types_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_bean_types_proto_goTypes = []interface{}{
	(Table)(0),                      // 0: server_go_base.bean.Table
	(*WorkItemRole)(nil),            // 1: server_go_base.bean.WorkItemRole
	(*WorkFlow)(nil),                // 2: server_go_base.bean.WorkFlow
	(*WorkFlowTemplate)(nil),        // 3: server_go_base.bean.WorkFlowTemplate
	(*WorkItemType)(nil),            // 4: server_go_base.bean.WorkItemType
	(*WorkItemStatus)(nil),          // 5: server_go_base.bean.WorkItemStatus
	(*User)(nil),                    // 6: server_go_base.bean.User
	(*Config)(nil),                  // 7: server_go_base.bean.Config
	(*Space)(nil),                   // 8: server_go_base.bean.Space
	(*SpaceConfig)(nil),             // 9: server_go_base.bean.SpaceConfig
	(*SpaceMember)(nil),             // 10: server_go_base.bean.SpaceMember
	(*SpaceWorkObject)(nil),         // 11: server_go_base.bean.SpaceWorkObject
	(*SpaceWorkItemV2)(nil),         // 12: server_go_base.bean.SpaceWorkItemV2
	(*SpaceWorkItemDocV2)(nil),      // 13: server_go_base.bean.SpaceWorkItemDocV2
	(*SpaceTag)(nil),                // 14: server_go_base.bean.SpaceTag
	(*FileInfo)(nil),                // 15: server_go_base.bean.FileInfo
	(*SpaceFileInfo)(nil),           // 16: server_go_base.bean.SpaceFileInfo
	(*UserLoginLog)(nil),            // 17: server_go_base.bean.UserLoginLog
	(*OperLog)(nil),                 // 18: server_go_base.bean.OperLog
	(*SpaceWorkItemFlowV2)(nil),     // 19: server_go_base.bean.SpaceWorkItemFlowV2
	(*SpaceWorkItemFlowRoleV2)(nil), // 20: server_go_base.bean.SpaceWorkItemFlowRoleV2
	(*SpaceWorkItemComment)(nil),    // 21: server_go_base.bean.SpaceWorkItemComment
	(*ThirdPfAccount)(nil),          // 22: server_go_base.bean.ThirdPfAccount
	(*Notify)(nil),                  // 23: server_go_base.bean.Notify
	(*SpaceWorkVersion)(nil),        // 24: server_go_base.bean.SpaceWorkVersion
	(*MemberCategory)(nil),          // 25: server_go_base.bean.MemberCategory
	(*SpaceMemberCategory)(nil),     // 26: server_go_base.bean.SpaceMemberCategory
	(*SpaceGlobalView)(nil),         // 27: server_go_base.bean.SpaceGlobalView
	(*SpaceUserView)(nil),           // 28: server_go_base.bean.SpaceUserView
	(*UserConfig)(nil),              // 29: server_go_base.bean.UserConfig
}
var file_bean_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bean_types_proto_init() }
func file_bean_types_proto_init() {
	if File_bean_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bean_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkItemRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkFlowTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkItemType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkItemStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Space); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkItemV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkItemDocV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkItemFlowV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkItemFlowRoleV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkItemComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdPfAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceWorkVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceMemberCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceGlobalView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceUserView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bean_types_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bean_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bean_types_proto_goTypes,
		DependencyIndexes: file_bean_types_proto_depIdxs,
		EnumInfos:         file_bean_types_proto_enumTypes,
		MessageInfos:      file_bean_types_proto_msgTypes,
	}.Build()
	File_bean_types_proto = out.File
	file_bean_types_proto_rawDesc = nil
	file_bean_types_proto_goTypes = nil
	file_bean_types_proto_depIdxs = nil
}
